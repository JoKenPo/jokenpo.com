/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "node_modules_react-notion-x_build_third-party_code_js";
exports.ids = ["node_modules_react-notion-x_build_third-party_code_js"];
exports.modules = {

/***/ "./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("function e(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}var t=e(__webpack_require__(/*! react */ \"react\")),n=e(__webpack_require__(/*! react-intersection-observer */ \"react-intersection-observer\")),r=__webpack_require__(/*! unionize */ \"unionize\"),o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};var a,i=function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function c(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&(n[r[o]]=e[r[o]])}return n}(a=exports.ImageState||(exports.ImageState={})).NotAsked=\"NotAsked\",a.Loading=\"Loading\",a.LoadSuccess=\"LoadSuccess\",a.LoadError=\"LoadError\";var u=r.unionize({NotAsked:{},Buffering:{},Loading:{},LoadSuccess:{},LoadError:r.ofType()}),s=r.unionize({ViewChanged:r.ofType(),BufferingEnded:{},LoadSuccess:{},LoadError:r.ofType()}),d=function(e,t){return function(n){var r=m(g(e,t));r.promise.then(function(e){return n.update(s.LoadSuccess({}))}).catch(function(e){e.isCanceled||n.update(s.LoadError({msg:\"Failed to load\"}))}),n.promiseCache.loading=r}},f=function(e){e.promiseCache.buffering.cancel()},p=function(e){function r(t){var n=e.call(this,t)||this;return n.promiseCache={},n.initialState=u.NotAsked(),n.state=n.initialState,n.update=n.update.bind(n),n}return function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(r,e),r.reducer=function(e,t,n){return s.match(e,{ViewChanged:function(e){return!0===e.inView?n.src?u.match(t,{NotAsked:function(){return n.debounceDurationMs?{nextState:u.Buffering(),cmd:(e=n.debounceDurationMs,function(t){var n=m(l(e));n.promise.then(function(){return t.update(s.BufferingEnded())}).catch(function(e){}),t.promiseCache.buffering=n})}:{nextState:u.Loading(),cmd:d(n,n.experimentalDecode)};var e},default:function(){return{nextState:t}}}):{nextState:u.LoadSuccess()}:u.match(t,{Buffering:function(){return{nextState:u.NotAsked(),cmd:f}},default:function(){return{nextState:t}}})},BufferingEnded:function(){return{nextState:u.Loading(),cmd:d(n,n.experimentalDecode)}},LoadSuccess:function(){return{nextState:u.LoadSuccess()}},LoadError:function(e){return{nextState:u.LoadError(e)}}})},r.prototype.update=function(e){var t=this,n=r.reducer(e,this.state,this.props),o=n.nextState,a=n.cmd;this.props.debugActions&&( false&&0,console.log({action:e,prevState:this.state,nextState:o})),this.setState(o,function(){return a&&a(t)})},r.prototype.componentWillUnmount=function(){this.promiseCache.loading&&this.promiseCache.loading.cancel(),this.promiseCache.buffering&&this.promiseCache.buffering.cancel(),this.promiseCache={}},r.prototype.render=function(){var e=this,r=this.props,o=r.children,a=r.loadEagerly,d=r.observerProps,f=c(r,[\"children\",\"loadEagerly\",\"observerProps\",\"experimentalDecode\",\"debounceDurationMs\",\"debugActions\"]);return a?o({imageState:u.LoadSuccess().tag,imageProps:f}):t.createElement(n,i({rootMargin:\"50px 0px\",threshold:.01},d,{onChange:function(t){return e.update(s.ViewChanged({inView:t}))}}),function(t){return o({imageState:\"Buffering\"===e.state.tag?exports.ImageState.Loading:e.state.tag,imageProps:f,ref:t.ref})})},r.displayName=\"LazyImageFull\",r}(t.Component),g=function(e,t){var n=e.src,r=e.srcSet,o=e.alt,a=e.sizes;return void 0===t&&(t=!1),new Promise(function(e,i){var c=new Image;if(r&&(c.srcset=r),o&&(c.alt=o),a&&(c.sizes=a),c.src=n,t&&\"decode\"in c)return c.decode().then(function(t){return e(t)}).catch(function(e){return i(e)});c.onload=e,c.onerror=i})},l=function(e){return new Promise(function(t){return setTimeout(t,e)})},m=function(e){var t=!1;return{promise:new Promise(function(n,r){e.then(function(e){return t?r({isCanceled:!0}):n(e)}),e.catch(function(e){return r(t?{isCanceled:!0}:e)})}),cancel:function(){t=!0}}},h=function(e){var n=e.actual,r=e.placeholder,o=e.loading,a=e.error,u=c(e,[\"actual\",\"placeholder\",\"loading\",\"error\"]);return t.createElement(p,i({},u),function(e){var t=e.imageProps,i=e.ref;switch(e.imageState){case exports.ImageState.NotAsked:return!!r&&r({imageProps:t,ref:i});case exports.ImageState.Loading:return o?o():!!r&&r({imageProps:t,ref:i});case exports.ImageState.LoadSuccess:return n({imageProps:t});case exports.ImageState.LoadError:return a?a():n({imageProps:t})}})};h.displayName=\"LazyImage\",exports.LazyImage=h,exports.LazyImageFull=p;\n//# sourceMappingURL=react-lazy-images.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js\n");

/***/ }),

/***/ "./node_modules/react-notion-x/build/third-party/code.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-notion-x/build/third-party/code.js ***!
  \***************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Code\": () => (/* binding */ Code)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var prismjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prismjs */ \"prismjs\");\n/* harmony import */ var notion_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! notion-utils */ \"notion-utils\");\n/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-fast-compare */ \"react-fast-compare\");\n/* harmony import */ var react_lazy_images__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-lazy-images */ \"./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js\");\n/* harmony import */ var react_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-image */ \"react-image\");\n/* harmony import */ var react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-hotkeys-hook */ \"react-hotkeys-hook\");\n/* harmony import */ var prismjs_components_prism_clike_min_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prismjs/components/prism-clike.min.js */ \"prismjs/components/prism-clike.min.js\");\n/* harmony import */ var prismjs_components_prism_javascript_min_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! prismjs/components/prism-javascript.min.js */ \"prismjs/components/prism-javascript.min.js\");\n/* harmony import */ var prismjs_components_prism_js_extras_min_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prismjs/components/prism-js-extras.min.js */ \"prismjs/components/prism-js-extras.min.js\");\n/* harmony import */ var prismjs_components_prism_typescript_min_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! prismjs/components/prism-typescript.min.js */ \"prismjs/components/prism-typescript.min.js\");\n/* harmony import */ var prismjs_components_prism_jsx_min_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! prismjs/components/prism-jsx.min.js */ \"prismjs/components/prism-jsx.min.js\");\n/* harmony import */ var prismjs_components_prism_tsx_min_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! prismjs/components/prism-tsx.min.js */ \"prismjs/components/prism-tsx.min.js\");\n/* harmony import */ var prismjs_components_prism_json_min_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! prismjs/components/prism-json.min.js */ \"prismjs/components/prism-json.min.js\");\n/* harmony import */ var prismjs_components_prism_css_min_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! prismjs/components/prism-css.min.js */ \"prismjs/components/prism-css.min.js\");\n/* harmony import */ var prismjs_components_prism_css_extras_min_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! prismjs/components/prism-css-extras.min.js */ \"prismjs/components/prism-css-extras.min.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([notion_utils__WEBPACK_IMPORTED_MODULE_2__]);\nnotion_utils__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// ../../node_modules/clipboard-copy/index.js\nvar require_clipboard_copy = __commonJS({\n  \"../../node_modules/clipboard-copy/index.js\"(exports, module) {\n    module.exports = clipboardCopy;\n    function makeError() {\n      return new DOMException(\"The request is not allowed\", \"NotAllowedError\");\n    }\n    function copyClipboardApi(text) {\n      return __async(this, null, function* () {\n        if (!navigator.clipboard) {\n          throw makeError();\n        }\n        return navigator.clipboard.writeText(text);\n      });\n    }\n    function copyExecCommand(text) {\n      return __async(this, null, function* () {\n        const span = document.createElement(\"span\");\n        span.textContent = text;\n        span.style.whiteSpace = \"pre\";\n        span.style.webkitUserSelect = \"auto\";\n        span.style.userSelect = \"all\";\n        document.body.appendChild(span);\n        const selection = window.getSelection();\n        const range = window.document.createRange();\n        selection.removeAllRanges();\n        range.selectNode(span);\n        selection.addRange(range);\n        let success = false;\n        try {\n          success = window.document.execCommand(\"copy\");\n        } finally {\n          selection.removeAllRanges();\n          window.document.body.removeChild(span);\n        }\n        if (!success)\n          throw makeError();\n      });\n    }\n    function clipboardCopy(text) {\n      return __async(this, null, function* () {\n        try {\n          yield copyClipboardApi(text);\n        } catch (err) {\n          try {\n            yield copyExecCommand(text);\n          } catch (err2) {\n            throw err2 || err || makeError();\n          }\n        }\n      });\n    }\n  }\n});\n\n// ../../node_modules/lodash.throttle/index.js\nvar require_lodash = __commonJS({\n  \"../../node_modules/lodash.throttle/index.js\"(exports, module) {\n    var FUNC_ERROR_TEXT = \"Expected a function\";\n    var NAN = 0 / 0;\n    var symbolTag = \"[object Symbol]\";\n    var reTrim = /^\\s+|\\s+$/g;\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n    var reIsBinary = /^0b[01]+$/i;\n    var reIsOctal = /^0o[0-7]+$/i;\n    var freeParseInt = parseInt;\n    var freeGlobal = typeof global == \"object\" && global && global.Object === Object && global;\n    var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n    var root = freeGlobal || freeSelf || Function(\"return this\")();\n    var objectProto = Object.prototype;\n    var objectToString = objectProto.toString;\n    var nativeMax = Math.max;\n    var nativeMin = Math.min;\n    var now = function() {\n      return root.Date.now();\n    };\n    function debounce(func, wait, options) {\n      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = \"maxWait\" in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = void 0;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n      function leadingEdge(time) {\n        lastInvokeTime = time;\n        timerId = setTimeout(timerExpired, wait);\n        return leading ? invokeFunc(time) : result;\n      }\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;\n        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;\n      }\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n      }\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n      function trailingEdge(time) {\n        timerId = void 0;\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = void 0;\n        return result;\n      }\n      function cancel() {\n        if (timerId !== void 0) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = void 0;\n      }\n      function flush() {\n        return timerId === void 0 ? result : trailingEdge(now());\n      }\n      function debounced() {\n        var time = now(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n          if (timerId === void 0) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === void 0) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n    function throttle2(func, wait, options) {\n      var leading = true, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = \"leading\" in options ? !!options.leading : leading;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        \"leading\": leading,\n        \"maxWait\": wait,\n        \"trailing\": trailing\n      });\n    }\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == \"object\" || type == \"function\");\n    }\n    function isObjectLike(value) {\n      return !!value && typeof value == \"object\";\n    }\n    function isSymbol(value) {\n      return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n    }\n    function toNumber(value) {\n      if (typeof value == \"number\") {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n        value = isObject(other) ? other + \"\" : other;\n      }\n      if (typeof value != \"string\") {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, \"\");\n      var isBinary = reIsBinary.test(value);\n      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n    }\n    module.exports = throttle2;\n  }\n});\n\n// src/third-party/code.tsx\nvar import_clipboard_copy = __toESM(require_clipboard_copy(), 1);\n\n\n\n\n// src/components/text.tsx\n\n\n\n// src/context.tsx\n\n\n// src/next.tsx\n\n\nvar wrapNextImage = (NextImage) => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.memo(function ReactNotionXNextImage(_a) {\n    var _b = _a, {\n      src,\n      alt,\n      width,\n      height,\n      className,\n      style,\n      layout\n    } = _b, rest = __objRest(_b, [\n      \"src\",\n      \"alt\",\n      \"width\",\n      \"height\",\n      \"className\",\n      \"style\",\n      \"layout\"\n    ]);\n    if (!layout) {\n      layout = width && height ? \"intrinsic\" : \"fill\";\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NextImage, __spreadValues({\n      className,\n      src,\n      alt,\n      width: layout === \"intrinsic\" && width,\n      height: layout === \"intrinsic\" && height,\n      objectFit: style == null ? void 0 : style.objectFit,\n      objectPosition: style == null ? void 0 : style.objectPosition,\n      layout\n    }, rest));\n  }, react_fast_compare__WEBPACK_IMPORTED_MODULE_3__);\n};\nvar wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {\n  var _b = _a, {\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale\n  } = _b, linkProps = __objRest(_b, [\n    \"href\",\n    \"as\",\n    \"passHref\",\n    \"prefetch\",\n    \"replace\",\n    \"scroll\",\n    \"shallow\",\n    \"locale\"\n  ]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NextLink, {\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({}, linkProps)));\n};\n\n// src/components/asset-wrapper.tsx\n\n\n// src/components/asset.tsx\n\n\n\n// src/components/lazy-image.tsx\n\n\n\n\n// src/utils.ts\n\n\n// src/map-image-url.ts\nvar defaultMapImageUrl = (url, block) => {\n  if (!url) {\n    return null;\n  }\n  if (url.startsWith(\"data:\")) {\n    return url;\n  }\n  if (url.startsWith(\"https://images.unsplash.com\")) {\n    return url;\n  }\n  try {\n    const u = new URL(url);\n    if (u.pathname.startsWith(\"/secure.notion-static.com\") && u.hostname.endsWith(\".amazonaws.com\")) {\n      if (u.searchParams.has(\"X-Amz-Credential\") && u.searchParams.has(\"X-Amz-Signature\") && u.searchParams.has(\"X-Amz-Algorithm\")) {\n        return url;\n      }\n    }\n  } catch (e) {\n  }\n  if (url.startsWith(\"/images\")) {\n    url = `https://www.notion.so${url}`;\n  }\n  url = `https://www.notion.so${url.startsWith(\"/image\") ? url : `/image/${encodeURIComponent(url)}`}`;\n  const notionImageUrlV2 = new URL(url);\n  let table = block.parent_table === \"space\" ? \"block\" : block.parent_table;\n  if (table === \"collection\") {\n    table = \"block\";\n  }\n  notionImageUrlV2.searchParams.set(\"table\", table);\n  notionImageUrlV2.searchParams.set(\"id\", block.id);\n  notionImageUrlV2.searchParams.set(\"cache\", \"v2\");\n  url = notionImageUrlV2.toString();\n  return url;\n};\n\n// src/map-page-url.ts\nvar defaultMapPageUrl = (rootPageId) => (pageId) => {\n  pageId = (pageId || \"\").replace(/-/g, \"\");\n  if (rootPageId && pageId === rootPageId) {\n    return \"/\";\n  } else {\n    return `/${pageId}`;\n  }\n};\n\n// src/utils.ts\nvar cs = (...classes) => classes.filter((a) => !!a).join(\" \");\nvar getHashFragmentValue = (url) => {\n  return url.includes(\"#\") ? url.replace(/^.+(#.+)$/, \"$1\") : \"\";\n};\nvar isBrowser = typeof window !== \"undefined\";\nvar youtubeDomains = /* @__PURE__ */ new Set([\n  \"youtu.be\",\n  \"youtube.com\",\n  \"www.youtube.com\",\n  \"youtube-nocookie.com\",\n  \"www.youtube-nocookie.com\"\n]);\nvar getYoutubeId = (url) => {\n  try {\n    const { hostname } = new URL(url);\n    if (!youtubeDomains.has(hostname)) {\n      return null;\n    }\n    const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i;\n    const match = url.match(regExp);\n    if (match && match[2].length == 11) {\n      return match[2];\n    }\n  } catch (e) {\n  }\n  return null;\n};\n\n// src/components/lazy-image.tsx\nvar LazyImage = (_a) => {\n  var _b = _a, {\n    src,\n    alt,\n    className,\n    style,\n    zoomable = false,\n    priority = false,\n    height\n  } = _b, rest = __objRest(_b, [\n    \"src\",\n    \"alt\",\n    \"className\",\n    \"style\",\n    \"zoomable\",\n    \"priority\",\n    \"height\"\n  ]);\n  var _a2, _b2, _c;\n  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();\n  const zoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(zoom ? zoom.clone() : null);\n  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[(0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeUrl)(src)] : null;\n  const onLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((e) => {\n    if (zoomable && (e.target.src || e.target.srcset)) {\n      if (zoomRef.current) {\n        ;\n        zoomRef.current.attach(e.target);\n      }\n    }\n  }, [zoomRef, zoomable]);\n  const attachZoom = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((image) => {\n    if (zoomRef.current && image) {\n      ;\n      zoomRef.current.attach(image);\n    }\n  }, [zoomRef]);\n  const attachZoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => zoomable ? attachZoom : void 0, [zoomable, attachZoom]);\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;\n    if (components.Image) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Image, {\n        src,\n        alt,\n        style,\n        className,\n        width: previewImage.originalWidth,\n        height: previewImage.originalHeight,\n        blurDataURL: previewImage.dataURIBase64,\n        placeholder: \"blur\",\n        priority,\n        onLoad\n      });\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_lazy_images__WEBPACK_IMPORTED_MODULE_4__.LazyImageFull, __spreadProps(__spreadValues({\n      src\n    }, rest), {\n      experimentalDecode: true\n    }), ({ imageState, ref }) => {\n      const isLoaded = imageState === react_lazy_images__WEBPACK_IMPORTED_MODULE_4__.ImageState.LoadSuccess;\n      const wrapperStyle = {\n        width: \"100%\"\n      };\n      const imgStyle = {};\n      if (height) {\n        wrapperStyle.height = height;\n      } else {\n        imgStyle.position = \"absolute\";\n        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cs(\"lazy-image-wrapper\", isLoaded && \"lazy-image-loaded\", className),\n        style: wrapperStyle\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        className: \"lazy-image-preview\",\n        src: previewImage.dataURIBase64,\n        alt,\n        ref,\n        style,\n        decoding: \"async\"\n      }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        className: \"lazy-image-real\",\n        src,\n        alt,\n        ref: attachZoomRef,\n        style: __spreadValues(__spreadValues({}, style), imgStyle),\n        width: previewImage.originalWidth,\n        height: previewImage.originalHeight,\n        decoding: \"async\",\n        loading: \"lazy\"\n      }));\n    });\n  } else {\n    if (components.Image && forceCustomImages) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Image, {\n        src,\n        alt,\n        className,\n        style,\n        width: null,\n        height: height || null,\n        priority,\n        onLoad\n      });\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", __spreadValues({\n      className,\n      style,\n      src,\n      alt,\n      ref: attachZoomRef,\n      loading: \"lazy\",\n      decoding: \"async\"\n    }, rest));\n  }\n};\n\n// src/components/lite-youtube-embed.tsx\n\nvar qs = (params) => {\n  return Object.keys(params).map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join(\"&\");\n};\nvar LiteYouTubeEmbed = ({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = \"YouTube video\",\n  alt = \"Video preview\",\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}) => {\n  const muteParam = mute || defaultPlay ? \"1\" : \"0\";\n  const queryString = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => qs(__spreadValues({ autoplay: \"1\", mute: muteParam }, params)), [muteParam, params]);\n  const resolution = \"hqdefault\";\n  const posterUrl = `https://i.ytimg.com/vi/${id}/${resolution}.jpg`;\n  const ytUrl = \"https://www.youtube-nocookie.com\";\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;\n  const [isPreconnected, setIsPreconnected] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [iframeInitialized, setIframeInitialized] = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultPlay);\n  const [isIframeLoaded, setIsIframeLoaded] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const warmConnections = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (isPreconnected)\n      return;\n    setIsPreconnected(true);\n  }, [isPreconnected]);\n  const onLoadIframe = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (iframeInitialized)\n      return;\n    setIframeInitialized(true);\n  }, [iframeInitialized]);\n  const onIframeLoaded = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsIframeLoaded(true);\n  }, []);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preload\",\n    href: posterUrl,\n    as: \"image\"\n  }), isPreconnected && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: ytUrl\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://www.google.com\"\n  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://static.doubleclick.net\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://googleads.g.doubleclick.net\"\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    onClick: onLoadIframe,\n    onPointerOver: warmConnections,\n    className: cs(\"notion-yt-lite\", isIframeLoaded && \"notion-yt-loaded\", iframeInitialized && \"notion-yt-initialized\", className),\n    style\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n    src: posterUrl,\n    className: \"notion-yt-thumbnail\",\n    loading: lazyImage ? \"lazy\" : void 0,\n    alt\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-yt-playbtn\"\n  }), iframeInitialized && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    title: iframeTitle,\n    src: iframeSrc,\n    onLoad: onIframeLoaded\n  })));\n};\n\n// src/components/asset.tsx\nvar isServer = typeof window === \"undefined\";\nvar supportedAssetTypes = [\n  \"video\",\n  \"image\",\n  \"embed\",\n  \"figma\",\n  \"typeform\",\n  \"excalidraw\",\n  \"maps\",\n  \"tweet\",\n  \"pdf\",\n  \"gist\",\n  \"codepen\",\n  \"drive\"\n];\nvar Asset = ({ block, zoomable = true, children }) => {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const { recordMap, mapImageUrl, components } = useNotionContext();\n  if (!block || !supportedAssetTypes.includes(block.type)) {\n    return null;\n  }\n  const style = {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    flexDirection: \"column\"\n  };\n  const assetStyle = {};\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format;\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = \"100vw\";\n      } else {\n        style.width = \"100%\";\n      }\n      if (block.type === \"video\") {\n        if (block_height) {\n          style.height = block_height;\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`;\n        } else if (block_preserve_scale) {\n          style.objectFit = \"contain\";\n        }\n      } else if (block_aspect_ratio && block.type !== \"image\") {\n        style.paddingBottom = `${block_aspect_ratio * 100}%`;\n      } else if (block_height) {\n        style.height = block_height;\n      } else if (block_preserve_scale) {\n        if (block.type === \"image\") {\n          style.height = \"100%\";\n        } else {\n          style.paddingBottom = \"75%\";\n          style.minHeight = 100;\n        }\n      }\n    } else {\n      switch ((_a = block.format) == null ? void 0 : _a.block_alignment) {\n        case \"center\": {\n          style.alignSelf = \"center\";\n          break;\n        }\n        case \"left\": {\n          style.alignSelf = \"start\";\n          break;\n        }\n        case \"right\": {\n          style.alignSelf = \"end\";\n          break;\n        }\n      }\n      if (block_width) {\n        style.width = block_width;\n      }\n      if (block_preserve_scale && block.type !== \"image\") {\n        style.paddingBottom = \"50%\";\n        style.minHeight = 100;\n      } else {\n        if (block_height && block.type !== \"image\") {\n          style.height = block_height;\n        }\n      }\n    }\n    if (block.type === \"image\") {\n      assetStyle.objectFit = \"cover\";\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = \"contain\";\n    }\n  }\n  const source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);\n  let content = null;\n  if (!source) {\n    return null;\n  }\n  if (block.type === \"tweet\") {\n    const src = source;\n    if (!src)\n      return null;\n    const id = src.split(\"?\")[0].split(\"/\").pop();\n    if (!id)\n      return null;\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      style: __spreadProps(__spreadValues({}, assetStyle), {\n        maxWidth: 420,\n        width: \"100%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      })\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Tweet, {\n      id\n    }));\n  } else if (block.type === \"pdf\") {\n    style.overflow = \"auto\";\n    style.background = \"rgb(226, 226, 226)\";\n    if (!style.padding) {\n      style.padding = \"8px 16px\";\n    }\n    if (!isServer) {\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Pdf, {\n        file: source\n      });\n    }\n  } else if (block.type === \"embed\" || block.type === \"video\" || block.type === \"figma\" || block.type === \"typeform\" || block.type === \"gist\" || block.type === \"maps\" || block.type === \"excalidraw\" || block.type === \"codepen\" || block.type === \"drive\") {\n    if (block.type === \"video\" && source && source.indexOf(\"youtube\") < 0 && source.indexOf(\"youtu.be\") < 0 && source.indexOf(\"vimeo\") < 0 && source.indexOf(\"wistia\") < 0 && source.indexOf(\"loom\") < 0 && source.indexOf(\"videoask\") < 0 && source.indexOf(\"getcloudapp\") < 0) {\n      style.paddingBottom = void 0;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"video\", {\n        playsInline: true,\n        controls: true,\n        preload: \"metadata\",\n        style: assetStyle,\n        src: source,\n        title: block.type\n      });\n    } else {\n      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;\n      if (src) {\n        const youtubeVideoId = block.type === \"video\" ? getYoutubeId(src) : null;\n        if (youtubeVideoId) {\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LiteYouTubeEmbed, {\n            id: youtubeVideoId,\n            style: assetStyle,\n            className: \"notion-asset-object-fit\"\n          });\n        } else if (block.type === \"gist\") {\n          if (!src.endsWith(\".pibb\")) {\n            src = `${src}.pibb`;\n          }\n          assetStyle.width = \"100%\";\n          style.paddingBottom = \"50%\";\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            style: assetStyle,\n            className: \"notion-asset-object-fit\",\n            src,\n            title: \"GitHub Gist\",\n            frameBorder: \"0\",\n            loading: \"lazy\",\n            scrolling: \"auto\"\n          });\n        } else {\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            className: \"notion-asset-object-fit\",\n            style: assetStyle,\n            src,\n            title: `iframe ${block.type}`,\n            frameBorder: \"0\",\n            allowFullScreen: true,\n            loading: \"lazy\",\n            scrolling: \"auto\"\n          });\n        }\n      }\n    }\n  } else if (block.type === \"image\") {\n    const src = mapImageUrl(source, block);\n    const caption = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getTextContent)((_g = block.properties) == null ? void 0 : _g.caption);\n    const alt = caption || \"notion image\";\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n      src,\n      alt,\n      zoomable,\n      height: style.height,\n      style: assetStyle\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    style\n  }, content, block.type === \"image\" && children), block.type !== \"image\" && children);\n};\n\n// src/components/page-icon.tsx\n\n\n\n// src/icons/default-page-icon.tsx\n\nvar DefaultPageIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className\n  }, rest), {\n    viewBox: \"0 0 30 30\",\n    width: \"16\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z\"\n  }));\n};\n\n// src/components/page-icon.tsx\nvar isIconBlock = (value) => {\n  return value.type === \"page\" || value.type === \"callout\" || value.type === \"collection_view\" || value.type === \"collection_view_page\";\n};\nvar PageIconImpl = ({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}) => {\n  var _a;\n  const { mapImageUrl, recordMap } = useNotionContext();\n  let isImage = false;\n  let content = null;\n  if (isIconBlock(block)) {\n    const icon = ((_a = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getBlockIcon)(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getBlockTitle)(block, recordMap);\n    if (icon && (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.isUrl)(icon)) {\n      const url = mapImageUrl(icon, block);\n      isImage = true;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n        src: url,\n        alt: title || \"page icon\",\n        className: cs(className, \"notion-page-icon\")\n      });\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true;\n        content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPageIcon, {\n          className: cs(className, \"notion-page-icon\"),\n          alt: title ? title : \"page icon\"\n        });\n      }\n    } else {\n      isImage = false;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: cs(className, \"notion-page-icon\"),\n        role: \"img\",\n        \"aria-label\": icon\n      }, icon);\n    }\n  }\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(inline ? \"notion-page-icon-inline\" : \"notion-page-icon-hero\", isImage ? \"notion-page-icon-image\" : \"notion-page-icon-span\")\n  }, content);\n};\nvar PageIcon = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageIconImpl);\n\n// src/components/page-title.tsx\n\n\nvar PageTitleImpl = (_a) => {\n  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, [\"block\", \"className\", \"defaultIcon\"]);\n  var _a2, _b2;\n  const { recordMap } = useNotionContext();\n  if (!block)\n    return null;\n  if (block.type === \"collection_view_page\" || block.type === \"collection_view\") {\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getBlockTitle)(block, recordMap);\n    if (!title) {\n      return null;\n    }\n    const titleDecoration = [[title]];\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({\n      className: cs(\"notion-page-title\", className)\n    }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n      block,\n      defaultIcon,\n      className: \"notion-page-title-icon\"\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"notion-page-title-text\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: titleDecoration,\n      block\n    })));\n  }\n  if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({\n    className: cs(\"notion-page-title\", className)\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n    block,\n    defaultIcon,\n    className: \"notion-page-title-icon\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-page-title-text\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n    value: (_b2 = block.properties) == null ? void 0 : _b2.title,\n    block\n  })));\n};\nvar PageTitle = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageTitleImpl);\n\n// src/components/graceful-image.tsx\n\n\nvar GracefulImage = (props) => {\n  if (isBrowser) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_image__WEBPACK_IMPORTED_MODULE_5__.Img, __spreadValues({}, props));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", __spreadValues({}, props));\n  }\n};\n\n// src/components/eoi.tsx\n\n\n// src/icons/type-github.tsx\n\nfunction SvgTypeGitHub(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 260 260\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\",\n    fill: \"#161614\"\n  })));\n}\nvar type_github_default = SvgTypeGitHub;\n\n// src/components/eoi.tsx\nvar EOI = ({ block, inline, className }) => {\n  var _a, _b, _c;\n  const { components } = useNotionContext();\n  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};\n  if (!original_url || !attributes) {\n    return null;\n  }\n  const title = (_a = attributes.find((attr) => attr.id === \"title\")) == null ? void 0 : _a.values[0];\n  let owner = (_b = attributes.find((attr) => attr.id === \"owner\")) == null ? void 0 : _b.values[0];\n  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === \"updated_at\")) == null ? void 0 : _c.values[0];\n  const lastUpdated = lastUpdatedAt ? (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.formatNotionDateTime)(lastUpdatedAt) : null;\n  let externalImage;\n  switch (domain) {\n    case \"github.com\":\n      externalImage = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(type_github_default, null);\n      if (owner) {\n        const parts = owner.split(\"/\");\n        owner = parts[parts.length - 1];\n      }\n      break;\n    default:\n      if (true) {\n        console.log(`Unsupported external_object_instance domain \"${domain}\"`, JSON.stringify(block, null, 2));\n      }\n      return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: original_url,\n    className: cs(\"notion-external\", inline ? \"notion-external-mention\" : \"notion-external-block notion-row\", className)\n  }, externalImage && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-image\"\n  }, externalImage), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-description\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-title\"\n  }, title), (owner || lastUpdated) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-subtitle\"\n  }, owner && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, owner), owner && lastUpdated && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, \" \\u2022 \"), lastUpdated && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, \"Updated \", lastUpdated))));\n};\n\n// src/components/header.tsx\n\n\n\n\n// src/icons/search-icon.tsx\n\nvar SearchIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    className: cs(\"notion-icon\", className),\n    viewBox: \"0 0 17 17\"\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z\"\n  }));\n};\n\n// src/components/search-dialog.tsx\nvar import_lodash = __toESM(require_lodash(), 1);\n\n\n\n// src/icons/clear-icon.tsx\n\nvar ClearIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className: cs(\"notion-icon\", className)\n  }, rest), {\n    viewBox: \"0 0 30 30\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z\"\n  }));\n};\n\n// src/icons/loading-icon.tsx\n\nvar LoadingIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className: cs(\"notion-icon\", className)\n  }, rest), {\n    viewBox: \"0 0 24 24\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"linearGradient\", {\n    x1: \"28.1542969%\",\n    y1: \"63.7402344%\",\n    x2: \"74.6289062%\",\n    y2: \"17.7832031%\",\n    id: \"linearGradient-1\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"stop\", {\n    stopColor: \"rgba(164, 164, 164, 1)\",\n    offset: \"0%\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"stop\", {\n    stopColor: \"rgba(164, 164, 164, 0)\",\n    stopOpacity: \"0\",\n    offset: \"100%\"\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    id: \"Page-1\",\n    stroke: \"none\",\n    strokeWidth: \"1\",\n    fill: \"none\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(-236.000000, -286.000000)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(238.000000, 286.000000)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"circle\", {\n    id: \"Oval-2\",\n    stroke: \"url(#linearGradient-1)\",\n    strokeWidth: \"4\",\n    cx: \"10\",\n    cy: \"12\",\n    r: \"10\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10,2 C4.4771525,2 0,6.4771525 0,12\",\n    id: \"Oval-2\",\n    stroke: \"rgba(164, 164, 164, 1)\",\n    strokeWidth: \"4\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n    id: \"Rectangle-1\",\n    fill: \"rgba(164, 164, 164, 1)\",\n    x: \"8\",\n    y: \"0\",\n    width: \"4\",\n    height: \"4\",\n    rx: \"8\"\n  })))));\n};\n\n// src/components/search-dialog.tsx\nvar SearchDialog = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      query: \"\",\n      searchResult: null,\n      searchError: null\n    };\n    this._onAfterOpen = () => {\n      if (this._inputRef.current) {\n        this._inputRef.current.focus();\n      }\n    };\n    this._onChangeQuery = (e) => {\n      const query = e.target.value;\n      this.setState({ query });\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      } else {\n        this._search();\n      }\n    };\n    this._onClearQuery = () => {\n      this._onChangeQuery({ target: { value: \"\" } });\n    };\n    this._warmupSearch = () => __async(this, null, function* () {\n      const { searchNotion, rootBlockId } = this.props;\n      yield searchNotion({\n        query: \"\",\n        ancestorId: rootBlockId\n      });\n    });\n    this._searchImpl = () => __async(this, null, function* () {\n      const { searchNotion, rootBlockId } = this.props;\n      const { query } = this.state;\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      }\n      this.setState({ isLoading: true });\n      const result = yield searchNotion({\n        query,\n        ancestorId: rootBlockId\n      });\n      console.log(\"search\", query, result);\n      let searchResult = null;\n      let searchError = null;\n      if (result.error || result.errorId) {\n        searchError = result;\n      } else {\n        searchResult = __spreadValues({}, result);\n        const results = searchResult.results.map((result2) => {\n          var _a, _b;\n          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;\n          if (!block)\n            return;\n          const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getBlockTitle)(block, searchResult.recordMap);\n          if (!title) {\n            return;\n          }\n          result2.title = title;\n          result2.block = block;\n          result2.recordMap = searchResult.recordMap;\n          result2.page = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getBlockParentPage)(block, searchResult.recordMap, {\n            inclusive: true\n          }) || block;\n          if (!result2.page.id) {\n            return;\n          }\n          if ((_b = result2.highlight) == null ? void 0 : _b.text) {\n            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, \"<b>\").replace(/<\\/gzkNfoUU>/gi, \"</b>\");\n          }\n          return result2;\n        }).filter(Boolean);\n        const searchResultsMap = results.reduce((map, result2) => __spreadProps(__spreadValues({}, map), {\n          [result2.page.id]: result2\n        }), {});\n        searchResult.results = Object.values(searchResultsMap);\n      }\n      if (this.state.query === query) {\n        this.setState({ isLoading: false, searchResult, searchError });\n      }\n    });\n    this._inputRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  }\n  componentDidMount() {\n    this._search = (0, import_lodash.default)(this._searchImpl.bind(this), 1e3);\n    this._warmupSearch();\n  }\n  render() {\n    const { isOpen, onClose } = this.props;\n    const { isLoading, query, searchResult, searchError } = this.state;\n    const hasQuery = !!query.trim();\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextConsumer, null, (ctx2) => {\n      const { components, defaultPageIcon, mapPageUrl } = ctx2;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Modal, {\n        isOpen,\n        contentLabel: \"Search\",\n        className: \"notion-search\",\n        overlayClassName: \"notion-search-overlay\",\n        onRequestClose: onClose,\n        onAfterOpen: this._onAfterOpen\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"quickFindMenu\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"searchBar\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"inlineIcon\"\n      }, isLoading ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingIcon, {\n        className: \"loadingIcon\"\n      }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchIcon, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n        className: \"searchInput\",\n        placeholder: \"Search\",\n        value: query,\n        ref: this._inputRef,\n        onChange: this._onChangeQuery\n      }), query && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        role: \"button\",\n        className: \"clearButton\",\n        onClick: this._onClearQuery\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClearIcon, {\n        className: \"clearIcon\"\n      }))), hasQuery && searchResult && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, searchResult.results.length ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {\n        recordMap: searchResult.recordMap\n      }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"resultsPane\"\n      }, searchResult.results.map((result) => {\n        var _a;\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n          key: result.id,\n          className: cs(\"result\", \"notion-page-link\"),\n          href: mapPageUrl(result.page.id, searchResult.recordMap)\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n          block: result.page,\n          defaultIcon: defaultPageIcon\n        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"notion-search-result-highlight\",\n          dangerouslySetInnerHTML: {\n            __html: result.highlight.html\n          }\n        }));\n      })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"footer\", {\n        className: \"resultsFooter\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"resultsCount\"\n      }, searchResult.total), searchResult.total === 1 ? \" result\" : \" results\"))) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsPane\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResults\"\n      }, \"No results\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsDetail\"\n      }, \"Try different search terms\"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsPane\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResults\"\n      }, \"Search error\"))));\n    });\n  }\n};\n\n// src/components/header.tsx\nvar Header = ({ block }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"header\", {\n    className: \"notion-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-nav-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Breadcrumbs, {\n    block\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Search, {\n    block\n  })));\n};\nvar Breadcrumbs = ({ block, rootOnly = false }) => {\n  const { recordMap, mapPageUrl, components } = useNotionContext();\n  const breadcrumbs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const breadcrumbs2 = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getPageBreadcrumbs)(recordMap, block.id);\n    if (rootOnly) {\n      return [breadcrumbs2[0]].filter(Boolean);\n    }\n    return breadcrumbs2;\n  }, [recordMap, block.id, rootOnly]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"breadcrumbs\",\n    key: \"breadcrumbs\"\n  }, breadcrumbs.map((breadcrumb, index) => {\n    if (!breadcrumb) {\n      return null;\n    }\n    const pageLinkProps = {};\n    const componentMap = {\n      pageLink: components.PageLink\n    };\n    if (breadcrumb.active) {\n      componentMap.pageLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, props));\n    } else {\n      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      key: breadcrumb.pageId\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(componentMap.pageLink, __spreadValues({\n      className: cs(\"breadcrumb\", breadcrumb.active && \"active\")\n    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n      className: \"icon\",\n      block: breadcrumb.block\n    }), breadcrumb.title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"title\"\n    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"spacer\"\n    }, \"/\"));\n  }));\n};\nvar Search = ({ block, search, title = \"Search\" }) => {\n  const { searchNotion, rootPageId } = useNotionContext();\n  const onSearchNotion = search || searchNotion;\n  const [isSearchOpen, setIsSearchOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const onOpenSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(true);\n  }, []);\n  const onCloseSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(false);\n  }, []);\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_6__.useHotkeys)(\"cmd+p\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_6__.useHotkeys)(\"cmd+k\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  const hasSearch = !!onSearchNotion;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, hasSearch && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    role: \"button\",\n    className: cs(\"breadcrumb\", \"button\", \"notion-search-button\"),\n    onClick: onOpenSearch\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchIcon, {\n    className: \"searchIcon\"\n  }), title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"title\"\n  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchDialog, {\n    isOpen: isSearchOpen,\n    rootBlockId: rootPageId || (block == null ? void 0 : block.id),\n    onClose: onCloseSearch,\n    searchNotion: onSearchNotion\n  }));\n};\n\n// src/components/asset-wrapper.tsx\n\nvar urlStyle = { width: \"100%\" };\nvar AssetWrapper = ({ blockId, block }) => {\n  var _a, _b, _c, _d, _e, _f;\n  const value = block;\n  const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();\n  let isURL = false;\n  if (block.type === \"image\") {\n    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];\n    if (caption) {\n      const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.parsePageId)(caption, { uuid: true });\n      const isPage = caption.charAt(0) === \"/\" && id;\n      if (isPage || isValidURL(caption)) {\n        isURL = true;\n      }\n    }\n  }\n  const figure = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"figure\", {\n    className: cs(\"notion-asset-wrapper\", `notion-asset-wrapper-${block.type}`, ((_d = value.format) == null ? void 0 : _d.block_full_width) && \"notion-asset-wrapper-full\", blockId)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Asset, {\n    block: value,\n    zoomable: zoom && !isURL\n  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"figcaption\", {\n    className: \"notion-asset-caption\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n    value: value.properties.caption,\n    block\n  }))));\n  if (isURL) {\n    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];\n    const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.parsePageId)(caption, { uuid: true });\n    const isPage = caption.charAt(0) === \"/\" && id;\n    const captionHostname = extractHostname(caption);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n      style: urlStyle,\n      href: isPage ? mapPageUrl(id) : caption,\n      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith(\"/\") ? \"blank_\" : null\n    }, figure);\n  }\n  return figure;\n};\nfunction isValidURL(str) {\n  const pattern = new RegExp(\"^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$\", \"i\");\n  return !!pattern.test(str);\n}\nfunction extractHostname(url) {\n  try {\n    const hostname = new URL(url).hostname;\n    return hostname;\n  } catch (err) {\n    return \"\";\n  }\n}\n\n// src/components/checkbox.tsx\n\n\n// src/icons/check.tsx\n\nfunction SvgCheck(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z\"\n  }));\n}\nvar check_default = SvgCheck;\n\n// src/components/checkbox.tsx\nvar Checkbox = ({ isChecked }) => {\n  let content = null;\n  if (isChecked) {\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-checked\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(check_default, null));\n  } else {\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-unchecked\"\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-property notion-property-checkbox\"\n  }, content);\n};\n\n// src/context.tsx\nvar DefaultLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, props));\nvar DefaultLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultLink);\nvar DefaultPageLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({}, props));\nvar DefaultPageLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultPageLink);\nvar DefaultEmbed = AssetWrapper;\nvar DefaultHeader = Header;\nvar dummyComponent = (name) => () => {\n  console.warn(`Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`);\n  return null;\n};\nvar dummyOverrideFn = (_, defaultValueFn) => defaultValueFn();\nvar defaultComponents = {\n  Image: null,\n  Link: DefaultLinkMemo,\n  PageLink: DefaultPageLinkMemo,\n  Checkbox,\n  Callout: void 0,\n  Code: dummyComponent(\"Code\"),\n  Equation: dummyComponent(\"Equation\"),\n  Collection: dummyComponent(\"Collection\"),\n  Property: void 0,\n  propertyTextValue: dummyOverrideFn,\n  propertySelectValue: dummyOverrideFn,\n  propertyRelationValue: dummyOverrideFn,\n  propertyFormulaValue: dummyOverrideFn,\n  propertyTitleValue: dummyOverrideFn,\n  propertyPersonValue: dummyOverrideFn,\n  propertyFileValue: dummyOverrideFn,\n  propertyCheckboxValue: dummyOverrideFn,\n  propertyUrlValue: dummyOverrideFn,\n  propertyEmailValue: dummyOverrideFn,\n  propertyPhoneNumberValue: dummyOverrideFn,\n  propertyNumberValue: dummyOverrideFn,\n  propertyLastEditedTimeValue: dummyOverrideFn,\n  propertyCreatedTimeValue: dummyOverrideFn,\n  propertyDateValue: dummyOverrideFn,\n  Pdf: dummyComponent(\"Pdf\"),\n  Tweet: dummyComponent(\"Tweet\"),\n  Modal: dummyComponent(\"Modal\"),\n  Header: DefaultHeader,\n  Embed: DefaultEmbed\n};\nvar defaultNotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n  components: defaultComponents,\n  mapPageUrl: defaultMapPageUrl(),\n  mapImageUrl: defaultMapImageUrl,\n  searchNotion: null,\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n  linkTableTitleProperties: true,\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n  zoom: null\n};\nvar ctx = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultNotionContext);\nvar NotionContextProvider = (_a) => {\n  var _b = _a, {\n    components: themeComponents = {},\n    children,\n    mapPageUrl,\n    mapImageUrl,\n    rootPageId\n  } = _b, rest = __objRest(_b, [\n    \"components\",\n    \"children\",\n    \"mapPageUrl\",\n    \"mapImageUrl\",\n    \"rootPageId\"\n  ]);\n  for (const key of Object.keys(rest)) {\n    if (rest[key] === void 0) {\n      delete rest[key];\n    }\n  }\n  const wrappedThemeComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadValues({}, themeComponents), [themeComponents]);\n  if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage);\n  }\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink);\n  }\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!wrappedThemeComponents[key]) {\n      delete wrappedThemeComponents[key];\n    }\n  }\n  const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {\n    rootPageId,\n    mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),\n    mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,\n    components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)\n  }), [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ctx.Provider, {\n    value\n  }, children);\n};\nvar NotionContextConsumer = ctx.Consumer;\nvar useNotionContext = () => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ctx);\n};\n\n// src/components/text.tsx\nvar Text = ({ value, block, linkProps, linkProtocol }) => {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {\n    if (!decorations) {\n      if (text === \",\") {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n          key: index,\n          style: { padding: \"0.5em\" }\n        });\n      } else {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: index\n        }, text);\n      }\n    }\n    const formatted = decorations.reduce((element, decorator) => {\n      var _a, _b, _c, _d, _e;\n      switch (decorator[0]) {\n        case \"p\": {\n          const blockId = decorator[1];\n          const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n          if (!linkedBlock) {\n            console.log('\"p\" missing block', blockId);\n            return null;\n          }\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n            className: \"notion-link\",\n            href: mapPageUrl(blockId)\n          }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n            block: linkedBlock\n          }));\n        }\n        case \"\\u2023\": {\n          const linkType = decorator[1][0];\n          const id = decorator[1][1];\n          switch (linkType) {\n            case \"u\": {\n              const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;\n              if (!user) {\n                console.log('\"\\u2023\" missing user', id);\n                return null;\n              }\n              const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n              return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n                className: \"notion-user\",\n                src: mapImageUrl(user.profile_photo, block),\n                alt: name\n              });\n            }\n            default: {\n              const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;\n              if (!linkedBlock) {\n                console.log('\"\\u2023\" missing block', linkType, id);\n                return null;\n              }\n              return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadProps(__spreadValues({\n                className: \"notion-link\",\n                href: mapPageUrl(id)\n              }, linkProps), {\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n                block: linkedBlock\n              }));\n            }\n          }\n        }\n        case \"h\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: `notion-${decorator[1]}`\n          }, element);\n        case \"c\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", {\n            className: \"notion-inline-code\"\n          }, element);\n        case \"b\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"b\", null, element);\n        case \"i\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"em\", null, element);\n        case \"s\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"s\", null, element);\n        case \"_\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"notion-inline-underscore\"\n          }, element);\n        case \"e\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Equation, {\n            math: decorator[1],\n            inline: true\n          });\n        case \"m\":\n          return element;\n        case \"a\": {\n          const v = decorator[1];\n          const pathname = v.substr(1);\n          const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.parsePageId)(pathname, { uuid: true });\n          if ((v[0] === \"/\" || v.includes(rootDomain)) && id) {\n            const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;\n            return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadValues({\n              className: \"notion-link\",\n              href\n            }, linkProps), element);\n          } else {\n            return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, __spreadValues({\n              className: \"notion-link\",\n              href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]\n            }, linkProps), element);\n          }\n        }\n        case \"d\": {\n          const v = decorator[1];\n          const type = v == null ? void 0 : v.type;\n          if (type === \"date\") {\n            const startDate = v.start_date;\n            return (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.formatDate)(startDate);\n          } else if (type === \"daterange\") {\n            const startDate = v.start_date;\n            const endDate = v.end_date;\n            return `${(0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.formatDate)(startDate)} \\u2192 ${(0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.formatDate)(endDate)}`;\n          } else {\n            return element;\n          }\n        }\n        case \"u\": {\n          const userId = decorator[1];\n          const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;\n          if (!user) {\n            console.log(\"missing user\", userId);\n            return null;\n          }\n          const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n            className: \"notion-user\",\n            src: mapImageUrl(user.profile_photo, block),\n            alt: name\n          });\n        }\n        case \"eoi\": {\n          const blockId = decorator[1];\n          const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EOI, {\n            block: externalObjectInstance,\n            inline: true\n          });\n        }\n        default:\n          if (true) {\n            console.log(\"unsupported text format\", decorator);\n          }\n          return element;\n      }\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, text));\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      key: index\n    }, formatted);\n  }));\n};\n\n// src/icons/copy.tsx\n\nfunction SvgCopy(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    fill: \"currentColor\",\n    viewBox: \"0 0 16 16\",\n    width: \"1em\",\n    version: \"1.1\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n  }));\n}\nvar copy_default = SvgCopy;\n\n// src/third-party/code.tsx\n\n\n\n\n\n\n\n\n\nvar Code = ({ block, defaultLanguage = \"typescript\", className }) => {\n  var _a, _b, _c;\n  const [isCopied, setIsCopied] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const copyTimeout = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  const { recordMap } = useNotionContext();\n  const content = (0,notion_utils__WEBPACK_IMPORTED_MODULE_2__.getBlockTitle)(block, recordMap);\n  const language = (((_c = (_b = (_a = block.properties) == null ? void 0 : _a.language) == null ? void 0 : _b[0]) == null ? void 0 : _c[0]) || defaultLanguage).toLowerCase();\n  const caption = block.properties.caption;\n  const codeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (codeRef.current) {\n      try {\n        (0,prismjs__WEBPACK_IMPORTED_MODULE_1__.highlightElement)(codeRef.current);\n      } catch (err) {\n        console.warn(\"prismjs highlight error\", err);\n      }\n    }\n  }, [codeRef]);\n  const onClickCopyToClipboard = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    (0, import_clipboard_copy.default)(content);\n    setIsCopied(true);\n    if (copyTimeout.current) {\n      clearTimeout(copyTimeout.current);\n      copyTimeout.current = null;\n    }\n    copyTimeout.current = setTimeout(() => {\n      setIsCopied(false);\n    }, 1200);\n  }, [content, copyTimeout]);\n  const copyButton = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-code-copy-button\",\n    onClick: onClickCopyToClipboard\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(copy_default, null));\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"pre\", {\n    className: cs(\"notion-code\", className)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-code-copy\"\n  }, copyButton, isCopied && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-code-copy-tooltip\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, isCopied ? \"Copied\" : \"Copy\"))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", {\n    className: `language-${language}`,\n    ref: codeRef\n  }, content)), caption && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"figcaption\", {\n    className: \"notion-asset-caption\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n    value: caption,\n    block\n  })));\n};\n\n/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-notion-x/build/third-party/code.js\n");

/***/ })

};
;