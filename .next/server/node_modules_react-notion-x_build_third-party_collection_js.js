/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "node_modules_react-notion-x_build_third-party_collection_js";
exports.ids = ["node_modules_react-notion-x_build_third-party_collection_js"];
exports.modules = {

/***/ "./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("function e(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}var t=e(__webpack_require__(/*! react */ \"react\")),n=e(__webpack_require__(/*! react-intersection-observer */ \"react-intersection-observer\")),r=__webpack_require__(/*! unionize */ \"unionize\"),o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};var a,i=function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function c(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&(n[r[o]]=e[r[o]])}return n}(a=exports.ImageState||(exports.ImageState={})).NotAsked=\"NotAsked\",a.Loading=\"Loading\",a.LoadSuccess=\"LoadSuccess\",a.LoadError=\"LoadError\";var u=r.unionize({NotAsked:{},Buffering:{},Loading:{},LoadSuccess:{},LoadError:r.ofType()}),s=r.unionize({ViewChanged:r.ofType(),BufferingEnded:{},LoadSuccess:{},LoadError:r.ofType()}),d=function(e,t){return function(n){var r=m(g(e,t));r.promise.then(function(e){return n.update(s.LoadSuccess({}))}).catch(function(e){e.isCanceled||n.update(s.LoadError({msg:\"Failed to load\"}))}),n.promiseCache.loading=r}},f=function(e){e.promiseCache.buffering.cancel()},p=function(e){function r(t){var n=e.call(this,t)||this;return n.promiseCache={},n.initialState=u.NotAsked(),n.state=n.initialState,n.update=n.update.bind(n),n}return function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(r,e),r.reducer=function(e,t,n){return s.match(e,{ViewChanged:function(e){return!0===e.inView?n.src?u.match(t,{NotAsked:function(){return n.debounceDurationMs?{nextState:u.Buffering(),cmd:(e=n.debounceDurationMs,function(t){var n=m(l(e));n.promise.then(function(){return t.update(s.BufferingEnded())}).catch(function(e){}),t.promiseCache.buffering=n})}:{nextState:u.Loading(),cmd:d(n,n.experimentalDecode)};var e},default:function(){return{nextState:t}}}):{nextState:u.LoadSuccess()}:u.match(t,{Buffering:function(){return{nextState:u.NotAsked(),cmd:f}},default:function(){return{nextState:t}}})},BufferingEnded:function(){return{nextState:u.Loading(),cmd:d(n,n.experimentalDecode)}},LoadSuccess:function(){return{nextState:u.LoadSuccess()}},LoadError:function(e){return{nextState:u.LoadError(e)}}})},r.prototype.update=function(e){var t=this,n=r.reducer(e,this.state,this.props),o=n.nextState,a=n.cmd;this.props.debugActions&&( false&&0,console.log({action:e,prevState:this.state,nextState:o})),this.setState(o,function(){return a&&a(t)})},r.prototype.componentWillUnmount=function(){this.promiseCache.loading&&this.promiseCache.loading.cancel(),this.promiseCache.buffering&&this.promiseCache.buffering.cancel(),this.promiseCache={}},r.prototype.render=function(){var e=this,r=this.props,o=r.children,a=r.loadEagerly,d=r.observerProps,f=c(r,[\"children\",\"loadEagerly\",\"observerProps\",\"experimentalDecode\",\"debounceDurationMs\",\"debugActions\"]);return a?o({imageState:u.LoadSuccess().tag,imageProps:f}):t.createElement(n,i({rootMargin:\"50px 0px\",threshold:.01},d,{onChange:function(t){return e.update(s.ViewChanged({inView:t}))}}),function(t){return o({imageState:\"Buffering\"===e.state.tag?exports.ImageState.Loading:e.state.tag,imageProps:f,ref:t.ref})})},r.displayName=\"LazyImageFull\",r}(t.Component),g=function(e,t){var n=e.src,r=e.srcSet,o=e.alt,a=e.sizes;return void 0===t&&(t=!1),new Promise(function(e,i){var c=new Image;if(r&&(c.srcset=r),o&&(c.alt=o),a&&(c.sizes=a),c.src=n,t&&\"decode\"in c)return c.decode().then(function(t){return e(t)}).catch(function(e){return i(e)});c.onload=e,c.onerror=i})},l=function(e){return new Promise(function(t){return setTimeout(t,e)})},m=function(e){var t=!1;return{promise:new Promise(function(n,r){e.then(function(e){return t?r({isCanceled:!0}):n(e)}),e.catch(function(e){return r(t?{isCanceled:!0}:e)})}),cancel:function(){t=!0}}},h=function(e){var n=e.actual,r=e.placeholder,o=e.loading,a=e.error,u=c(e,[\"actual\",\"placeholder\",\"loading\",\"error\"]);return t.createElement(p,i({},u),function(e){var t=e.imageProps,i=e.ref;switch(e.imageState){case exports.ImageState.NotAsked:return!!r&&r({imageProps:t,ref:i});case exports.ImageState.Loading:return o?o():!!r&&r({imageProps:t,ref:i});case exports.ImageState.LoadSuccess:return n({imageProps:t});case exports.ImageState.LoadError:return a?a():n({imageProps:t})}})};h.displayName=\"LazyImage\",exports.LazyImage=h,exports.LazyImageFull=p;\n//# sourceMappingURL=react-lazy-images.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js\n");

/***/ }),

/***/ "./node_modules/react-notion-x/build/third-party/collection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-notion-x/build/third-party/collection.js ***!
  \*********************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Collection\": () => (/* binding */ Collection),\n/* harmony export */   \"Property\": () => (/* binding */ PropertyImplMemo)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var notion_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! notion-utils */ \"notion-utils\");\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-use */ \"react-use\");\n/* harmony import */ var _radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-dropdown-menu */ \"@radix-ui/react-dropdown-menu\");\n/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-fast-compare */ \"react-fast-compare\");\n/* harmony import */ var react_lazy_images__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-lazy-images */ \"./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js\");\n/* harmony import */ var react_image__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-image */ \"react-image\");\n/* harmony import */ var react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-hotkeys-hook */ \"react-hotkeys-hook\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([notion_utils__WEBPACK_IMPORTED_MODULE_1__]);\nnotion_utils__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// ../../node_modules/format-number/index.js\nvar require_format_number = __commonJS({\n  \"../../node_modules/format-number/index.js\"(exports, module) {\n    module.exports = formatter;\n    module.exports.default = formatter;\n    function formatter(options) {\n      options = options || {};\n      options.negativeType = options.negativeType || (options.negative === \"R\" ? \"right\" : \"left\");\n      if (typeof options.negativeLeftSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"left\":\n            options.negativeLeftSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeLeftSymbol = \"(\";\n            break;\n          default:\n            options.negativeLeftSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeRightSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"right\":\n            options.negativeRightSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeRightSymbol = \")\";\n            break;\n          default:\n            options.negativeRightSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeLeftOut !== \"boolean\") {\n        options.negativeLeftOut = options.negativeOut === false ? false : true;\n      }\n      if (typeof options.negativeRightOut !== \"boolean\") {\n        options.negativeRightOut = options.negativeOut === false ? false : true;\n      }\n      options.prefix = options.prefix || \"\";\n      options.suffix = options.suffix || \"\";\n      if (typeof options.integerSeparator !== \"string\") {\n        options.integerSeparator = typeof options.separator === \"string\" ? options.separator : \",\";\n      }\n      options.decimalsSeparator = typeof options.decimalsSeparator === \"string\" ? options.decimalsSeparator : \"\";\n      options.decimal = options.decimal || \".\";\n      options.padLeft = options.padLeft || -1;\n      options.padRight = options.padRight || -1;\n      function format4(number, overrideOptions) {\n        overrideOptions = overrideOptions || {};\n        if (number || number === 0) {\n          number = \"\" + number;\n        } else {\n          return \"\";\n        }\n        var output = [];\n        var negative = number.charAt(0) === \"-\";\n        number = number.replace(/^\\-/g, \"\");\n        if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        if (negative) {\n          output.push(options.negativeLeftSymbol);\n        }\n        if (options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        number = number.split(\".\");\n        if (options.round != null)\n          round(number, options.round);\n        if (options.truncate != null)\n          number[1] = truncate(number[1], options.truncate);\n        if (options.padLeft > 0)\n          number[0] = padLeft(number[0], options.padLeft);\n        if (options.padRight > 0)\n          number[1] = padRight(number[1], options.padRight);\n        if (!overrideOptions.noSeparator && number[1])\n          number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n        if (!overrideOptions.noSeparator && number[0])\n          number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n        output.push(number[0]);\n        if (number[1]) {\n          output.push(options.decimal);\n          output.push(number[1]);\n        }\n        if (options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        if (negative) {\n          output.push(options.negativeRightSymbol);\n        }\n        if (!options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        return output.join(\"\");\n      }\n      format4.negative = options.negative;\n      format4.negativeOut = options.negativeOut;\n      format4.negativeType = options.negativeType;\n      format4.negativeLeftOut = options.negativeLeftOut;\n      format4.negativeLeftSymbol = options.negativeLeftSymbol;\n      format4.negativeRightOut = options.negativeRightOut;\n      format4.negativeRightSymbol = options.negativeRightSymbol;\n      format4.prefix = options.prefix;\n      format4.suffix = options.suffix;\n      format4.separate = options.separate;\n      format4.integerSeparator = options.integerSeparator;\n      format4.decimalsSeparator = options.decimalsSeparator;\n      format4.decimal = options.decimal;\n      format4.padLeft = options.padLeft;\n      format4.padRight = options.padRight;\n      format4.truncate = options.truncate;\n      format4.round = options.round;\n      function unformat(number, allowedSeparators) {\n        allowedSeparators = allowedSeparators || [];\n        if (options.allowedSeparators) {\n          options.allowedSeparators.forEach(function(s) {\n            allowedSeparators.push(s);\n          });\n        }\n        allowedSeparators.push(options.integerSeparator);\n        allowedSeparators.push(options.decimalsSeparator);\n        number = number.replace(options.prefix, \"\");\n        number = number.replace(options.suffix, \"\");\n        var newNumber = number;\n        do {\n          number = newNumber;\n          for (var i = 0; i < allowedSeparators.length; i++) {\n            newNumber = newNumber.replace(allowedSeparators[i], \"\");\n          }\n        } while (newNumber != number);\n        return number;\n      }\n      format4.unformat = unformat;\n      function validate(number, allowedSeparators) {\n        number = unformat(number, allowedSeparators);\n        number = number.split(options.decimal);\n        if (number.length > 2) {\n          return false;\n        } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n          return false;\n        } else if (options.round != null && number[1] && number[1].length > options.round) {\n          return false;\n        } else {\n          return /^-?\\d+\\.?\\d*$/.test(number);\n        }\n      }\n      return format4;\n    }\n    function addIntegerSeparators(x, separator) {\n      x += \"\";\n      if (!separator)\n        return x;\n      var rgx = /(\\d+)(\\d{3})/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function addDecimalSeparators(x, separator) {\n      x += \"\";\n      if (!separator)\n        return x;\n      var rgx = /(\\d{3})(\\d+)/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function padLeft(x, padding) {\n      x = x + \"\";\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return buf.join(\"\") + x;\n    }\n    function padRight(x, padding) {\n      if (x) {\n        x += \"\";\n      } else {\n        x = \"\";\n      }\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return x + buf.join(\"\");\n    }\n    function truncate(x, length) {\n      if (x) {\n        x += \"\";\n      }\n      if (x && x.length > length) {\n        return x.substr(0, length);\n      } else {\n        return x;\n      }\n    }\n    function round(number, places) {\n      if (number[1] && places >= 0 && number[1].length > places) {\n        var decim = number[1].slice(0, places);\n        if (+number[1].substr(places, 1) >= 5) {\n          var leadingzeros = \"\";\n          while (decim.charAt(0) === \"0\") {\n            leadingzeros = leadingzeros + \"0\";\n            decim = decim.substr(1);\n          }\n          decim = +decim + 1 + \"\";\n          decim = leadingzeros + decim;\n          if (decim.length > places) {\n            number[0] = +number[0] + +decim.charAt(0) + \"\";\n            decim = decim.substring(1);\n          }\n        }\n        number[1] = decim;\n      }\n      return number;\n    }\n  }\n});\n\n// ../../node_modules/date-fns/_lib/requiredArgs/index.js\nvar require_requiredArgs = __commonJS({\n  \"../../node_modules/date-fns/_lib/requiredArgs/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = requiredArgs;\n    function requiredArgs(required, args) {\n      if (args.length < required) {\n        throw new TypeError(required + \" argument\" + (required > 1 ? \"s\" : \"\") + \" required, but only \" + args.length + \" present\");\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/isDate/index.js\nvar require_isDate = __commonJS({\n  \"../../node_modules/date-fns/isDate/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = isDate;\n    var _index = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function isDate(value) {\n      (0, _index.default)(1, arguments);\n      return value instanceof Date || typeof value === \"object\" && Object.prototype.toString.call(value) === \"[object Date]\";\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/toDate/index.js\nvar require_toDate = __commonJS({\n  \"../../node_modules/date-fns/toDate/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = toDate;\n    var _index = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function toDate(argument) {\n      (0, _index.default)(1, arguments);\n      var argStr = Object.prototype.toString.call(argument);\n      if (argument instanceof Date || typeof argument === \"object\" && argStr === \"[object Date]\") {\n        return new Date(argument.getTime());\n      } else if (typeof argument === \"number\" || argStr === \"[object Number]\") {\n        return new Date(argument);\n      } else {\n        if ((typeof argument === \"string\" || argStr === \"[object String]\") && typeof console !== \"undefined\") {\n          console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\");\n          console.warn(new Error().stack);\n        }\n        return new Date(NaN);\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/isValid/index.js\nvar require_isValid = __commonJS({\n  \"../../node_modules/date-fns/isValid/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = isValid;\n    var _index = _interopRequireDefault(require_isDate());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function isValid(dirtyDate) {\n      (0, _index3.default)(1, arguments);\n      if (!(0, _index.default)(dirtyDate) && typeof dirtyDate !== \"number\") {\n        return false;\n      }\n      var date = (0, _index2.default)(dirtyDate);\n      return !isNaN(Number(date));\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js\nvar require_formatDistance = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var formatDistanceLocale = {\n      lessThanXSeconds: {\n        one: \"less than a second\",\n        other: \"less than {{count}} seconds\"\n      },\n      xSeconds: {\n        one: \"1 second\",\n        other: \"{{count}} seconds\"\n      },\n      halfAMinute: \"half a minute\",\n      lessThanXMinutes: {\n        one: \"less than a minute\",\n        other: \"less than {{count}} minutes\"\n      },\n      xMinutes: {\n        one: \"1 minute\",\n        other: \"{{count}} minutes\"\n      },\n      aboutXHours: {\n        one: \"about 1 hour\",\n        other: \"about {{count}} hours\"\n      },\n      xHours: {\n        one: \"1 hour\",\n        other: \"{{count}} hours\"\n      },\n      xDays: {\n        one: \"1 day\",\n        other: \"{{count}} days\"\n      },\n      aboutXWeeks: {\n        one: \"about 1 week\",\n        other: \"about {{count}} weeks\"\n      },\n      xWeeks: {\n        one: \"1 week\",\n        other: \"{{count}} weeks\"\n      },\n      aboutXMonths: {\n        one: \"about 1 month\",\n        other: \"about {{count}} months\"\n      },\n      xMonths: {\n        one: \"1 month\",\n        other: \"{{count}} months\"\n      },\n      aboutXYears: {\n        one: \"about 1 year\",\n        other: \"about {{count}} years\"\n      },\n      xYears: {\n        one: \"1 year\",\n        other: \"{{count}} years\"\n      },\n      overXYears: {\n        one: \"over 1 year\",\n        other: \"over {{count}} years\"\n      },\n      almostXYears: {\n        one: \"almost 1 year\",\n        other: \"almost {{count}} years\"\n      }\n    };\n    var formatDistance = function(token, count, options) {\n      var result;\n      var tokenValue = formatDistanceLocale[token];\n      if (typeof tokenValue === \"string\") {\n        result = tokenValue;\n      } else if (count === 1) {\n        result = tokenValue.one;\n      } else {\n        result = tokenValue.other.replace(\"{{count}}\", count.toString());\n      }\n      if (options !== null && options !== void 0 && options.addSuffix) {\n        if (options.comparison && options.comparison > 0) {\n          return \"in \" + result;\n        } else {\n          return result + \" ago\";\n        }\n      }\n      return result;\n    };\n    var _default = formatDistance;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js\nvar require_buildFormatLongFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildFormatLongFn;\n    function buildFormatLongFn(args) {\n      return function() {\n        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        var width = options.width ? String(options.width) : args.defaultWidth;\n        var format4 = args.formats[width] || args.formats[args.defaultWidth];\n        return format4;\n      };\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js\nvar require_formatLong = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_buildFormatLongFn());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var dateFormats = {\n      full: \"EEEE, MMMM do, y\",\n      long: \"MMMM do, y\",\n      medium: \"MMM d, y\",\n      short: \"MM/dd/yyyy\"\n    };\n    var timeFormats = {\n      full: \"h:mm:ss a zzzz\",\n      long: \"h:mm:ss a z\",\n      medium: \"h:mm:ss a\",\n      short: \"h:mm a\"\n    };\n    var dateTimeFormats = {\n      full: \"{{date}} 'at' {{time}}\",\n      long: \"{{date}} 'at' {{time}}\",\n      medium: \"{{date}}, {{time}}\",\n      short: \"{{date}}, {{time}}\"\n    };\n    var formatLong = {\n      date: (0, _index.default)({\n        formats: dateFormats,\n        defaultWidth: \"full\"\n      }),\n      time: (0, _index.default)({\n        formats: timeFormats,\n        defaultWidth: \"full\"\n      }),\n      dateTime: (0, _index.default)({\n        formats: dateTimeFormats,\n        defaultWidth: \"full\"\n      })\n    };\n    var _default = formatLong;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js\nvar require_formatRelative = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var formatRelativeLocale = {\n      lastWeek: \"'last' eeee 'at' p\",\n      yesterday: \"'yesterday at' p\",\n      today: \"'today at' p\",\n      tomorrow: \"'tomorrow at' p\",\n      nextWeek: \"eeee 'at' p\",\n      other: \"P\"\n    };\n    var formatRelative = function(token, _date, _baseDate, _options) {\n      return formatRelativeLocale[token];\n    };\n    var _default = formatRelative;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js\nvar require_buildLocalizeFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildLocalizeFn;\n    function buildLocalizeFn(args) {\n      return function(dirtyIndex, dirtyOptions) {\n        var options = dirtyOptions || {};\n        var context = options.context ? String(options.context) : \"standalone\";\n        var valuesArray;\n        if (context === \"formatting\" && args.formattingValues) {\n          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n          var width = options.width ? String(options.width) : defaultWidth;\n          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n        } else {\n          var _defaultWidth = args.defaultWidth;\n          var _width = options.width ? String(options.width) : args.defaultWidth;\n          valuesArray = args.values[_width] || args.values[_defaultWidth];\n        }\n        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n        return valuesArray[index];\n      };\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/localize/index.js\nvar require_localize = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/localize/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_buildLocalizeFn());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var eraValues = {\n      narrow: [\"B\", \"A\"],\n      abbreviated: [\"BC\", \"AD\"],\n      wide: [\"Before Christ\", \"Anno Domini\"]\n    };\n    var quarterValues = {\n      narrow: [\"1\", \"2\", \"3\", \"4\"],\n      abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n      wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n    };\n    var monthValues = {\n      narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n      abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      wide: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    };\n    var dayValues = {\n      narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n      short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n      abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      wide: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    };\n    var dayPeriodValues = {\n      narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n      },\n      abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n      },\n      wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n      }\n    };\n    var formattingDayPeriodValues = {\n      narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n      },\n      abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n      },\n      wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n      }\n    };\n    var ordinalNumber = function(dirtyNumber, _options) {\n      var number = Number(dirtyNumber);\n      var rem100 = number % 100;\n      if (rem100 > 20 || rem100 < 10) {\n        switch (rem100 % 10) {\n          case 1:\n            return number + \"st\";\n          case 2:\n            return number + \"nd\";\n          case 3:\n            return number + \"rd\";\n        }\n      }\n      return number + \"th\";\n    };\n    var localize = {\n      ordinalNumber,\n      era: (0, _index.default)({\n        values: eraValues,\n        defaultWidth: \"wide\"\n      }),\n      quarter: (0, _index.default)({\n        values: quarterValues,\n        defaultWidth: \"wide\",\n        argumentCallback: function(quarter) {\n          return quarter - 1;\n        }\n      }),\n      month: (0, _index.default)({\n        values: monthValues,\n        defaultWidth: \"wide\"\n      }),\n      day: (0, _index.default)({\n        values: dayValues,\n        defaultWidth: \"wide\"\n      }),\n      dayPeriod: (0, _index.default)({\n        values: dayPeriodValues,\n        defaultWidth: \"wide\",\n        formattingValues: formattingDayPeriodValues,\n        defaultFormattingWidth: \"wide\"\n      })\n    };\n    var _default = localize;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js\nvar require_buildMatchFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildMatchFn;\n    function buildMatchFn(args) {\n      return function(string) {\n        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        var width = options.width;\n        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n        var matchResult = string.match(matchPattern);\n        if (!matchResult) {\n          return null;\n        }\n        var matchedString = matchResult[0];\n        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {\n          return pattern.test(matchedString);\n        }) : findKey(parsePatterns, function(pattern) {\n          return pattern.test(matchedString);\n        });\n        var value;\n        value = args.valueCallback ? args.valueCallback(key) : key;\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        var rest = string.slice(matchedString.length);\n        return {\n          value,\n          rest\n        };\n      };\n    }\n    function findKey(object, predicate) {\n      for (var key in object) {\n        if (object.hasOwnProperty(key) && predicate(object[key])) {\n          return key;\n        }\n      }\n      return void 0;\n    }\n    function findIndex(array, predicate) {\n      for (var key = 0; key < array.length; key++) {\n        if (predicate(array[key])) {\n          return key;\n        }\n      }\n      return void 0;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js\nvar require_buildMatchPatternFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildMatchPatternFn;\n    function buildMatchPatternFn(args) {\n      return function(string) {\n        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        var matchResult = string.match(args.matchPattern);\n        if (!matchResult)\n          return null;\n        var matchedString = matchResult[0];\n        var parseResult = string.match(args.parsePattern);\n        if (!parseResult)\n          return null;\n        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        var rest = string.slice(matchedString.length);\n        return {\n          value,\n          rest\n        };\n      };\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/match/index.js\nvar require_match = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/match/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_buildMatchFn());\n    var _index2 = _interopRequireDefault(require_buildMatchPatternFn());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\n    var parseOrdinalNumberPattern = /\\d+/i;\n    var matchEraPatterns = {\n      narrow: /^(b|a)/i,\n      abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n      wide: /^(before christ|before common era|anno domini|common era)/i\n    };\n    var parseEraPatterns = {\n      any: [/^b/i, /^(a|c)/i]\n    };\n    var matchQuarterPatterns = {\n      narrow: /^[1234]/i,\n      abbreviated: /^q[1234]/i,\n      wide: /^[1234](th|st|nd|rd)? quarter/i\n    };\n    var parseQuarterPatterns = {\n      any: [/1/i, /2/i, /3/i, /4/i]\n    };\n    var matchMonthPatterns = {\n      narrow: /^[jfmasond]/i,\n      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n    };\n    var parseMonthPatterns = {\n      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n    };\n    var matchDayPatterns = {\n      narrow: /^[smtwf]/i,\n      short: /^(su|mo|tu|we|th|fr|sa)/i,\n      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n    };\n    var parseDayPatterns = {\n      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n    };\n    var matchDayPeriodPatterns = {\n      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n      any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n    };\n    var parseDayPeriodPatterns = {\n      any: {\n        am: /^a/i,\n        pm: /^p/i,\n        midnight: /^mi/i,\n        noon: /^no/i,\n        morning: /morning/i,\n        afternoon: /afternoon/i,\n        evening: /evening/i,\n        night: /night/i\n      }\n    };\n    var match = {\n      ordinalNumber: (0, _index2.default)({\n        matchPattern: matchOrdinalNumberPattern,\n        parsePattern: parseOrdinalNumberPattern,\n        valueCallback: function(value) {\n          return parseInt(value, 10);\n        }\n      }),\n      era: (0, _index.default)({\n        matchPatterns: matchEraPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseEraPatterns,\n        defaultParseWidth: \"any\"\n      }),\n      quarter: (0, _index.default)({\n        matchPatterns: matchQuarterPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseQuarterPatterns,\n        defaultParseWidth: \"any\",\n        valueCallback: function(index) {\n          return index + 1;\n        }\n      }),\n      month: (0, _index.default)({\n        matchPatterns: matchMonthPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseMonthPatterns,\n        defaultParseWidth: \"any\"\n      }),\n      day: (0, _index.default)({\n        matchPatterns: matchDayPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseDayPatterns,\n        defaultParseWidth: \"any\"\n      }),\n      dayPeriod: (0, _index.default)({\n        matchPatterns: matchDayPeriodPatterns,\n        defaultMatchWidth: \"any\",\n        parsePatterns: parseDayPeriodPatterns,\n        defaultParseWidth: \"any\"\n      })\n    };\n    var _default = match;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/index.js\nvar require_en_US = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_formatDistance());\n    var _index2 = _interopRequireDefault(require_formatLong());\n    var _index3 = _interopRequireDefault(require_formatRelative());\n    var _index4 = _interopRequireDefault(require_localize());\n    var _index5 = _interopRequireDefault(require_match());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var locale = {\n      code: \"en-US\",\n      formatDistance: _index.default,\n      formatLong: _index2.default,\n      formatRelative: _index3.default,\n      localize: _index4.default,\n      match: _index5.default,\n      options: {\n        weekStartsOn: 0,\n        firstWeekContainsDate: 1\n      }\n    };\n    var _default = locale;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/toInteger/index.js\nvar require_toInteger = __commonJS({\n  \"../../node_modules/date-fns/_lib/toInteger/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = toInteger;\n    function toInteger(dirtyNumber) {\n      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n        return NaN;\n      }\n      var number = Number(dirtyNumber);\n      if (isNaN(number)) {\n        return number;\n      }\n      return number < 0 ? Math.ceil(number) : Math.floor(number);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/addMilliseconds/index.js\nvar require_addMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/addMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addMilliseconds;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function addMilliseconds(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var timestamp = (0, _index2.default)(dirtyDate).getTime();\n      var amount = (0, _index.default)(dirtyAmount);\n      return new Date(timestamp + amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/subMilliseconds/index.js\nvar require_subMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/subMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = subMilliseconds;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_addMilliseconds());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function subMilliseconds(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var amount = (0, _index.default)(dirtyAmount);\n      return (0, _index2.default)(dirtyDate, -amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js\nvar require_getUTCDayOfYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCDayOfYear;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_DAY = 864e5;\n    function getUTCDayOfYear(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var timestamp = date.getTime();\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      var startOfYearTimestamp = date.getTime();\n      var difference = timestamp - startOfYearTimestamp;\n      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js\nvar require_startOfUTCISOWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCISOWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCISOWeek(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var weekStartsOn = 1;\n      var date = (0, _index.default)(dirtyDate);\n      var day = date.getUTCDay();\n      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n      date.setUTCDate(date.getUTCDate() - diff);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js\nvar require_getUTCISOWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCISOWeekYear;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_startOfUTCISOWeek());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getUTCISOWeekYear(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var year = date.getUTCFullYear();\n      var fourthOfJanuaryOfNextYear = new Date(0);\n      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n      fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n      var startOfNextYear = (0, _index3.default)(fourthOfJanuaryOfNextYear);\n      var fourthOfJanuaryOfThisYear = new Date(0);\n      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n      fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n      var startOfThisYear = (0, _index3.default)(fourthOfJanuaryOfThisYear);\n      if (date.getTime() >= startOfNextYear.getTime()) {\n        return year + 1;\n      } else if (date.getTime() >= startOfThisYear.getTime()) {\n        return year;\n      } else {\n        return year - 1;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js\nvar require_startOfUTCISOWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCISOWeekYear;\n    var _index = _interopRequireDefault(require_getUTCISOWeekYear());\n    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCISOWeekYear(dirtyDate) {\n      (0, _index3.default)(1, arguments);\n      var year = (0, _index.default)(dirtyDate);\n      var fourthOfJanuary = new Date(0);\n      fourthOfJanuary.setUTCFullYear(year, 0, 4);\n      fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n      var date = (0, _index2.default)(fourthOfJanuary);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCISOWeek/index.js\nvar require_getUTCISOWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCISOWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCISOWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());\n    var _index3 = _interopRequireDefault(require_startOfUTCISOWeekYear());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_WEEK = 6048e5;\n    function getUTCISOWeek(dirtyDate) {\n      (0, _index4.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();\n      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCWeek/index.js\nvar require_startOfUTCWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCWeek(dirtyDate, dirtyOptions) {\n      (0, _index2.default)(1, arguments);\n      var options = dirtyOptions || {};\n      var locale = options.locale;\n      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);\n      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options.weekStartsOn);\n      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n        throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");\n      }\n      var date = (0, _index.default)(dirtyDate);\n      var day = date.getUTCDay();\n      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n      date.setUTCDate(date.getUTCDate() - diff);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCWeekYear/index.js\nvar require_getUTCWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCWeekYear;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_startOfUTCWeek());\n    var _index4 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getUTCWeekYear(dirtyDate, dirtyOptions) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var year = date.getUTCFullYear();\n      var options = dirtyOptions || {};\n      var locale = options.locale;\n      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);\n      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);\n      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n        throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");\n      }\n      var firstWeekOfNextYear = new Date(0);\n      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n      firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, dirtyOptions);\n      var firstWeekOfThisYear = new Date(0);\n      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n      firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, dirtyOptions);\n      if (date.getTime() >= startOfNextYear.getTime()) {\n        return year + 1;\n      } else if (date.getTime() >= startOfThisYear.getTime()) {\n        return year;\n      } else {\n        return year - 1;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js\nvar require_startOfUTCWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCWeekYear;\n    var _index = _interopRequireDefault(require_getUTCWeekYear());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_startOfUTCWeek());\n    var _index4 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n      (0, _index2.default)(1, arguments);\n      var options = dirtyOptions || {};\n      var locale = options.locale;\n      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);\n      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);\n      var year = (0, _index.default)(dirtyDate, dirtyOptions);\n      var firstWeek = new Date(0);\n      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n      firstWeek.setUTCHours(0, 0, 0, 0);\n      var date = (0, _index3.default)(firstWeek, dirtyOptions);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCWeek/index.js\nvar require_getUTCWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_startOfUTCWeek());\n    var _index3 = _interopRequireDefault(require_startOfUTCWeekYear());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_WEEK = 6048e5;\n    function getUTCWeek(dirtyDate, options) {\n      (0, _index4.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var diff = (0, _index2.default)(date, options).getTime() - (0, _index3.default)(date, options).getTime();\n      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/addLeadingZeros/index.js\nvar require_addLeadingZeros = __commonJS({\n  \"../../node_modules/date-fns/_lib/addLeadingZeros/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addLeadingZeros;\n    function addLeadingZeros(number, targetLength) {\n      var sign = number < 0 ? \"-\" : \"\";\n      var output = Math.abs(number).toString();\n      while (output.length < targetLength) {\n        output = \"0\" + output;\n      }\n      return sign + output;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/format/lightFormatters/index.js\nvar require_lightFormatters = __commonJS({\n  \"../../node_modules/date-fns/_lib/format/lightFormatters/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_addLeadingZeros());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var formatters = {\n      y: function(date, token) {\n        var signedYear = date.getUTCFullYear();\n        var year = signedYear > 0 ? signedYear : 1 - signedYear;\n        return (0, _index.default)(token === \"yy\" ? year % 100 : year, token.length);\n      },\n      M: function(date, token) {\n        var month = date.getUTCMonth();\n        return token === \"M\" ? String(month + 1) : (0, _index.default)(month + 1, 2);\n      },\n      d: function(date, token) {\n        return (0, _index.default)(date.getUTCDate(), token.length);\n      },\n      a: function(date, token) {\n        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? \"pm\" : \"am\";\n        switch (token) {\n          case \"a\":\n          case \"aa\":\n            return dayPeriodEnumValue.toUpperCase();\n          case \"aaa\":\n            return dayPeriodEnumValue;\n          case \"aaaaa\":\n            return dayPeriodEnumValue[0];\n          case \"aaaa\":\n          default:\n            return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n        }\n      },\n      h: function(date, token) {\n        return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);\n      },\n      H: function(date, token) {\n        return (0, _index.default)(date.getUTCHours(), token.length);\n      },\n      m: function(date, token) {\n        return (0, _index.default)(date.getUTCMinutes(), token.length);\n      },\n      s: function(date, token) {\n        return (0, _index.default)(date.getUTCSeconds(), token.length);\n      },\n      S: function(date, token) {\n        var numberOfDigits = token.length;\n        var milliseconds = date.getUTCMilliseconds();\n        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n        return (0, _index.default)(fractionalSeconds, token.length);\n      }\n    };\n    var _default = formatters;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/format/formatters/index.js\nvar require_formatters = __commonJS({\n  \"../../node_modules/date-fns/_lib/format/formatters/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_getUTCDayOfYear());\n    var _index2 = _interopRequireDefault(require_getUTCISOWeek());\n    var _index3 = _interopRequireDefault(require_getUTCISOWeekYear());\n    var _index4 = _interopRequireDefault(require_getUTCWeek());\n    var _index5 = _interopRequireDefault(require_getUTCWeekYear());\n    var _index6 = _interopRequireDefault(require_addLeadingZeros());\n    var _index7 = _interopRequireDefault(require_lightFormatters());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var dayPeriodEnum = {\n      am: \"am\",\n      pm: \"pm\",\n      midnight: \"midnight\",\n      noon: \"noon\",\n      morning: \"morning\",\n      afternoon: \"afternoon\",\n      evening: \"evening\",\n      night: \"night\"\n    };\n    var formatters = {\n      G: function(date, token, localize) {\n        var era = date.getUTCFullYear() > 0 ? 1 : 0;\n        switch (token) {\n          case \"G\":\n          case \"GG\":\n          case \"GGG\":\n            return localize.era(era, {\n              width: \"abbreviated\"\n            });\n          case \"GGGGG\":\n            return localize.era(era, {\n              width: \"narrow\"\n            });\n          case \"GGGG\":\n          default:\n            return localize.era(era, {\n              width: \"wide\"\n            });\n        }\n      },\n      y: function(date, token, localize) {\n        if (token === \"yo\") {\n          var signedYear = date.getUTCFullYear();\n          var year = signedYear > 0 ? signedYear : 1 - signedYear;\n          return localize.ordinalNumber(year, {\n            unit: \"year\"\n          });\n        }\n        return _index7.default.y(date, token);\n      },\n      Y: function(date, token, localize, options) {\n        var signedWeekYear = (0, _index5.default)(date, options);\n        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n        if (token === \"YY\") {\n          var twoDigitYear = weekYear % 100;\n          return (0, _index6.default)(twoDigitYear, 2);\n        }\n        if (token === \"Yo\") {\n          return localize.ordinalNumber(weekYear, {\n            unit: \"year\"\n          });\n        }\n        return (0, _index6.default)(weekYear, token.length);\n      },\n      R: function(date, token) {\n        var isoWeekYear = (0, _index3.default)(date);\n        return (0, _index6.default)(isoWeekYear, token.length);\n      },\n      u: function(date, token) {\n        var year = date.getUTCFullYear();\n        return (0, _index6.default)(year, token.length);\n      },\n      Q: function(date, token, localize) {\n        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n        switch (token) {\n          case \"Q\":\n            return String(quarter);\n          case \"QQ\":\n            return (0, _index6.default)(quarter, 2);\n          case \"Qo\":\n            return localize.ordinalNumber(quarter, {\n              unit: \"quarter\"\n            });\n          case \"QQQ\":\n            return localize.quarter(quarter, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"QQQQQ\":\n            return localize.quarter(quarter, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"QQQQ\":\n          default:\n            return localize.quarter(quarter, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      q: function(date, token, localize) {\n        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n        switch (token) {\n          case \"q\":\n            return String(quarter);\n          case \"qq\":\n            return (0, _index6.default)(quarter, 2);\n          case \"qo\":\n            return localize.ordinalNumber(quarter, {\n              unit: \"quarter\"\n            });\n          case \"qqq\":\n            return localize.quarter(quarter, {\n              width: \"abbreviated\",\n              context: \"standalone\"\n            });\n          case \"qqqqq\":\n            return localize.quarter(quarter, {\n              width: \"narrow\",\n              context: \"standalone\"\n            });\n          case \"qqqq\":\n          default:\n            return localize.quarter(quarter, {\n              width: \"wide\",\n              context: \"standalone\"\n            });\n        }\n      },\n      M: function(date, token, localize) {\n        var month = date.getUTCMonth();\n        switch (token) {\n          case \"M\":\n          case \"MM\":\n            return _index7.default.M(date, token);\n          case \"Mo\":\n            return localize.ordinalNumber(month + 1, {\n              unit: \"month\"\n            });\n          case \"MMM\":\n            return localize.month(month, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"MMMMM\":\n            return localize.month(month, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"MMMM\":\n          default:\n            return localize.month(month, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      L: function(date, token, localize) {\n        var month = date.getUTCMonth();\n        switch (token) {\n          case \"L\":\n            return String(month + 1);\n          case \"LL\":\n            return (0, _index6.default)(month + 1, 2);\n          case \"Lo\":\n            return localize.ordinalNumber(month + 1, {\n              unit: \"month\"\n            });\n          case \"LLL\":\n            return localize.month(month, {\n              width: \"abbreviated\",\n              context: \"standalone\"\n            });\n          case \"LLLLL\":\n            return localize.month(month, {\n              width: \"narrow\",\n              context: \"standalone\"\n            });\n          case \"LLLL\":\n          default:\n            return localize.month(month, {\n              width: \"wide\",\n              context: \"standalone\"\n            });\n        }\n      },\n      w: function(date, token, localize, options) {\n        var week = (0, _index4.default)(date, options);\n        if (token === \"wo\") {\n          return localize.ordinalNumber(week, {\n            unit: \"week\"\n          });\n        }\n        return (0, _index6.default)(week, token.length);\n      },\n      I: function(date, token, localize) {\n        var isoWeek = (0, _index2.default)(date);\n        if (token === \"Io\") {\n          return localize.ordinalNumber(isoWeek, {\n            unit: \"week\"\n          });\n        }\n        return (0, _index6.default)(isoWeek, token.length);\n      },\n      d: function(date, token, localize) {\n        if (token === \"do\") {\n          return localize.ordinalNumber(date.getUTCDate(), {\n            unit: \"date\"\n          });\n        }\n        return _index7.default.d(date, token);\n      },\n      D: function(date, token, localize) {\n        var dayOfYear = (0, _index.default)(date);\n        if (token === \"Do\") {\n          return localize.ordinalNumber(dayOfYear, {\n            unit: \"dayOfYear\"\n          });\n        }\n        return (0, _index6.default)(dayOfYear, token.length);\n      },\n      E: function(date, token, localize) {\n        var dayOfWeek = date.getUTCDay();\n        switch (token) {\n          case \"E\":\n          case \"EE\":\n          case \"EEE\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"EEEEE\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"EEEEEE\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"formatting\"\n            });\n          case \"EEEE\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      e: function(date, token, localize, options) {\n        var dayOfWeek = date.getUTCDay();\n        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n        switch (token) {\n          case \"e\":\n            return String(localDayOfWeek);\n          case \"ee\":\n            return (0, _index6.default)(localDayOfWeek, 2);\n          case \"eo\":\n            return localize.ordinalNumber(localDayOfWeek, {\n              unit: \"day\"\n            });\n          case \"eee\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"eeeee\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"eeeeee\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"formatting\"\n            });\n          case \"eeee\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      c: function(date, token, localize, options) {\n        var dayOfWeek = date.getUTCDay();\n        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n        switch (token) {\n          case \"c\":\n            return String(localDayOfWeek);\n          case \"cc\":\n            return (0, _index6.default)(localDayOfWeek, token.length);\n          case \"co\":\n            return localize.ordinalNumber(localDayOfWeek, {\n              unit: \"day\"\n            });\n          case \"ccc\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"standalone\"\n            });\n          case \"ccccc\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"standalone\"\n            });\n          case \"cccccc\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"standalone\"\n            });\n          case \"cccc\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"standalone\"\n            });\n        }\n      },\n      i: function(date, token, localize) {\n        var dayOfWeek = date.getUTCDay();\n        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n        switch (token) {\n          case \"i\":\n            return String(isoDayOfWeek);\n          case \"ii\":\n            return (0, _index6.default)(isoDayOfWeek, token.length);\n          case \"io\":\n            return localize.ordinalNumber(isoDayOfWeek, {\n              unit: \"day\"\n            });\n          case \"iii\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"iiiii\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"iiiiii\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"formatting\"\n            });\n          case \"iiii\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      a: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        var dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n        switch (token) {\n          case \"a\":\n          case \"aa\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"aaa\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            }).toLowerCase();\n          case \"aaaaa\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"aaaa\":\n          default:\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      b: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        var dayPeriodEnumValue;\n        if (hours === 12) {\n          dayPeriodEnumValue = dayPeriodEnum.noon;\n        } else if (hours === 0) {\n          dayPeriodEnumValue = dayPeriodEnum.midnight;\n        } else {\n          dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n        }\n        switch (token) {\n          case \"b\":\n          case \"bb\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"bbb\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            }).toLowerCase();\n          case \"bbbbb\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"bbbb\":\n          default:\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      B: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        var dayPeriodEnumValue;\n        if (hours >= 17) {\n          dayPeriodEnumValue = dayPeriodEnum.evening;\n        } else if (hours >= 12) {\n          dayPeriodEnumValue = dayPeriodEnum.afternoon;\n        } else if (hours >= 4) {\n          dayPeriodEnumValue = dayPeriodEnum.morning;\n        } else {\n          dayPeriodEnumValue = dayPeriodEnum.night;\n        }\n        switch (token) {\n          case \"B\":\n          case \"BB\":\n          case \"BBB\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"BBBBB\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"BBBB\":\n          default:\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      h: function(date, token, localize) {\n        if (token === \"ho\") {\n          var hours = date.getUTCHours() % 12;\n          if (hours === 0)\n            hours = 12;\n          return localize.ordinalNumber(hours, {\n            unit: \"hour\"\n          });\n        }\n        return _index7.default.h(date, token);\n      },\n      H: function(date, token, localize) {\n        if (token === \"Ho\") {\n          return localize.ordinalNumber(date.getUTCHours(), {\n            unit: \"hour\"\n          });\n        }\n        return _index7.default.H(date, token);\n      },\n      K: function(date, token, localize) {\n        var hours = date.getUTCHours() % 12;\n        if (token === \"Ko\") {\n          return localize.ordinalNumber(hours, {\n            unit: \"hour\"\n          });\n        }\n        return (0, _index6.default)(hours, token.length);\n      },\n      k: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        if (hours === 0)\n          hours = 24;\n        if (token === \"ko\") {\n          return localize.ordinalNumber(hours, {\n            unit: \"hour\"\n          });\n        }\n        return (0, _index6.default)(hours, token.length);\n      },\n      m: function(date, token, localize) {\n        if (token === \"mo\") {\n          return localize.ordinalNumber(date.getUTCMinutes(), {\n            unit: \"minute\"\n          });\n        }\n        return _index7.default.m(date, token);\n      },\n      s: function(date, token, localize) {\n        if (token === \"so\") {\n          return localize.ordinalNumber(date.getUTCSeconds(), {\n            unit: \"second\"\n          });\n        }\n        return _index7.default.s(date, token);\n      },\n      S: function(date, token) {\n        return _index7.default.S(date, token);\n      },\n      X: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        if (timezoneOffset === 0) {\n          return \"Z\";\n        }\n        switch (token) {\n          case \"X\":\n            return formatTimezoneWithOptionalMinutes(timezoneOffset);\n          case \"XXXX\":\n          case \"XX\":\n            return formatTimezone(timezoneOffset);\n          case \"XXXXX\":\n          case \"XXX\":\n          default:\n            return formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      x: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        switch (token) {\n          case \"x\":\n            return formatTimezoneWithOptionalMinutes(timezoneOffset);\n          case \"xxxx\":\n          case \"xx\":\n            return formatTimezone(timezoneOffset);\n          case \"xxxxx\":\n          case \"xxx\":\n          default:\n            return formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      O: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        switch (token) {\n          case \"O\":\n          case \"OO\":\n          case \"OOO\":\n            return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n          case \"OOOO\":\n          default:\n            return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      z: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        switch (token) {\n          case \"z\":\n          case \"zz\":\n          case \"zzz\":\n            return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n          case \"zzzz\":\n          default:\n            return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      t: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timestamp = Math.floor(originalDate.getTime() / 1e3);\n        return (0, _index6.default)(timestamp, token.length);\n      },\n      T: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timestamp = originalDate.getTime();\n        return (0, _index6.default)(timestamp, token.length);\n      }\n    };\n    function formatTimezoneShort(offset, dirtyDelimiter) {\n      var sign = offset > 0 ? \"-\" : \"+\";\n      var absOffset = Math.abs(offset);\n      var hours = Math.floor(absOffset / 60);\n      var minutes = absOffset % 60;\n      if (minutes === 0) {\n        return sign + String(hours);\n      }\n      var delimiter = dirtyDelimiter || \"\";\n      return sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2);\n    }\n    function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n      if (offset % 60 === 0) {\n        var sign = offset > 0 ? \"-\" : \"+\";\n        return sign + (0, _index6.default)(Math.abs(offset) / 60, 2);\n      }\n      return formatTimezone(offset, dirtyDelimiter);\n    }\n    function formatTimezone(offset, dirtyDelimiter) {\n      var delimiter = dirtyDelimiter || \"\";\n      var sign = offset > 0 ? \"-\" : \"+\";\n      var absOffset = Math.abs(offset);\n      var hours = (0, _index6.default)(Math.floor(absOffset / 60), 2);\n      var minutes = (0, _index6.default)(absOffset % 60, 2);\n      return sign + hours + delimiter + minutes;\n    }\n    var _default = formatters;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/format/longFormatters/index.js\nvar require_longFormatters = __commonJS({\n  \"../../node_modules/date-fns/_lib/format/longFormatters/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    function dateLongFormatter(pattern, formatLong) {\n      switch (pattern) {\n        case \"P\":\n          return formatLong.date({\n            width: \"short\"\n          });\n        case \"PP\":\n          return formatLong.date({\n            width: \"medium\"\n          });\n        case \"PPP\":\n          return formatLong.date({\n            width: \"long\"\n          });\n        case \"PPPP\":\n        default:\n          return formatLong.date({\n            width: \"full\"\n          });\n      }\n    }\n    function timeLongFormatter(pattern, formatLong) {\n      switch (pattern) {\n        case \"p\":\n          return formatLong.time({\n            width: \"short\"\n          });\n        case \"pp\":\n          return formatLong.time({\n            width: \"medium\"\n          });\n        case \"ppp\":\n          return formatLong.time({\n            width: \"long\"\n          });\n        case \"pppp\":\n        default:\n          return formatLong.time({\n            width: \"full\"\n          });\n      }\n    }\n    function dateTimeLongFormatter(pattern, formatLong) {\n      var matchResult = pattern.match(/(P+)(p+)?/) || [];\n      var datePattern = matchResult[1];\n      var timePattern = matchResult[2];\n      if (!timePattern) {\n        return dateLongFormatter(pattern, formatLong);\n      }\n      var dateTimeFormat;\n      switch (datePattern) {\n        case \"P\":\n          dateTimeFormat = formatLong.dateTime({\n            width: \"short\"\n          });\n          break;\n        case \"PP\":\n          dateTimeFormat = formatLong.dateTime({\n            width: \"medium\"\n          });\n          break;\n        case \"PPP\":\n          dateTimeFormat = formatLong.dateTime({\n            width: \"long\"\n          });\n          break;\n        case \"PPPP\":\n        default:\n          dateTimeFormat = formatLong.dateTime({\n            width: \"full\"\n          });\n          break;\n      }\n      return dateTimeFormat.replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong)).replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n    }\n    var longFormatters = {\n      p: timeLongFormatter,\n      P: dateTimeLongFormatter\n    };\n    var _default = longFormatters;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js\nvar require_getTimezoneOffsetInMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getTimezoneOffsetInMilliseconds;\n    function getTimezoneOffsetInMilliseconds(date) {\n      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      utcDate.setUTCFullYear(date.getFullYear());\n      return date.getTime() - utcDate.getTime();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/protectedTokens/index.js\nvar require_protectedTokens = __commonJS({\n  \"../../node_modules/date-fns/_lib/protectedTokens/index.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.isProtectedDayOfYearToken = isProtectedDayOfYearToken;\n    exports.isProtectedWeekYearToken = isProtectedWeekYearToken;\n    exports.throwProtectedError = throwProtectedError;\n    var protectedDayOfYearTokens = [\"D\", \"DD\"];\n    var protectedWeekYearTokens = [\"YY\", \"YYYY\"];\n    function isProtectedDayOfYearToken(token) {\n      return protectedDayOfYearTokens.indexOf(token) !== -1;\n    }\n    function isProtectedWeekYearToken(token) {\n      return protectedWeekYearTokens.indexOf(token) !== -1;\n    }\n    function throwProtectedError(token, format4, input) {\n      if (token === \"YYYY\") {\n        throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format4, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      } else if (token === \"YY\") {\n        throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format4, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      } else if (token === \"D\") {\n        throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format4, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      } else if (token === \"DD\") {\n        throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format4, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      }\n    }\n  }\n});\n\n// ../../node_modules/date-fns/format/index.js\nvar require_format = __commonJS({\n  \"../../node_modules/date-fns/format/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = format4;\n    var _index = _interopRequireDefault(require_isValid());\n    var _index2 = _interopRequireDefault(require_en_US());\n    var _index3 = _interopRequireDefault(require_subMilliseconds());\n    var _index4 = _interopRequireDefault(require_toDate());\n    var _index5 = _interopRequireDefault(require_formatters());\n    var _index6 = _interopRequireDefault(require_longFormatters());\n    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());\n    var _index8 = require_protectedTokens();\n    var _index9 = _interopRequireDefault(require_toInteger());\n    var _index10 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n    var escapedStringRegExp = /^'([^]*?)'?$/;\n    var doubleQuoteRegExp = /''/g;\n    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n    function format4(dirtyDate, dirtyFormatStr, dirtyOptions) {\n      (0, _index10.default)(2, arguments);\n      var formatStr = String(dirtyFormatStr);\n      var options = dirtyOptions || {};\n      var locale = options.locale || _index2.default;\n      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index9.default)(localeFirstWeekContainsDate);\n      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index9.default)(options.firstWeekContainsDate);\n      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n        throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");\n      }\n      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index9.default)(localeWeekStartsOn);\n      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index9.default)(options.weekStartsOn);\n      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n        throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");\n      }\n      if (!locale.localize) {\n        throw new RangeError(\"locale must contain localize property\");\n      }\n      if (!locale.formatLong) {\n        throw new RangeError(\"locale must contain formatLong property\");\n      }\n      var originalDate = (0, _index4.default)(dirtyDate);\n      if (!(0, _index.default)(originalDate)) {\n        throw new RangeError(\"Invalid time value\");\n      }\n      var timezoneOffset = (0, _index7.default)(originalDate);\n      var utcDate = (0, _index3.default)(originalDate, timezoneOffset);\n      var formatterOptions = {\n        firstWeekContainsDate,\n        weekStartsOn,\n        locale,\n        _originalDate: originalDate\n      };\n      var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {\n        var firstCharacter = substring[0];\n        if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n          var longFormatter = _index6.default[firstCharacter];\n          return longFormatter(substring, locale.formatLong, formatterOptions);\n        }\n        return substring;\n      }).join(\"\").match(formattingTokensRegExp).map(function(substring) {\n        if (substring === \"''\") {\n          return \"'\";\n        }\n        var firstCharacter = substring[0];\n        if (firstCharacter === \"'\") {\n          return cleanEscapedString(substring);\n        }\n        var formatter = _index5.default[firstCharacter];\n        if (formatter) {\n          if (!options.useAdditionalWeekYearTokens && (0, _index8.isProtectedWeekYearToken)(substring)) {\n            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);\n          }\n          if (!options.useAdditionalDayOfYearTokens && (0, _index8.isProtectedDayOfYearToken)(substring)) {\n            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);\n          }\n          return formatter(utcDate, substring, locale.localize, formatterOptions);\n        }\n        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n          throw new RangeError(\"Format string contains an unescaped latin alphabet character `\" + firstCharacter + \"`\");\n        }\n        return substring;\n      }).join(\"\");\n      return result;\n    }\n    function cleanEscapedString(input) {\n      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/lodash.throttle/index.js\nvar require_lodash = __commonJS({\n  \"../../node_modules/lodash.throttle/index.js\"(exports, module) {\n    var FUNC_ERROR_TEXT = \"Expected a function\";\n    var NAN = 0 / 0;\n    var symbolTag = \"[object Symbol]\";\n    var reTrim = /^\\s+|\\s+$/g;\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n    var reIsBinary = /^0b[01]+$/i;\n    var reIsOctal = /^0o[0-7]+$/i;\n    var freeParseInt = parseInt;\n    var freeGlobal = typeof global == \"object\" && global && global.Object === Object && global;\n    var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n    var root = freeGlobal || freeSelf || Function(\"return this\")();\n    var objectProto = Object.prototype;\n    var objectToString = objectProto.toString;\n    var nativeMax = Math.max;\n    var nativeMin = Math.min;\n    var now = function() {\n      return root.Date.now();\n    };\n    function debounce(func, wait, options) {\n      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = \"maxWait\" in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = void 0;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n      function leadingEdge(time) {\n        lastInvokeTime = time;\n        timerId = setTimeout(timerExpired, wait);\n        return leading ? invokeFunc(time) : result;\n      }\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;\n        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;\n      }\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n      }\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n      function trailingEdge(time) {\n        timerId = void 0;\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = void 0;\n        return result;\n      }\n      function cancel() {\n        if (timerId !== void 0) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = void 0;\n      }\n      function flush() {\n        return timerId === void 0 ? result : trailingEdge(now());\n      }\n      function debounced() {\n        var time = now(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n          if (timerId === void 0) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === void 0) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n    function throttle2(func, wait, options) {\n      var leading = true, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = \"leading\" in options ? !!options.leading : leading;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        \"leading\": leading,\n        \"maxWait\": wait,\n        \"trailing\": trailing\n      });\n    }\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == \"object\" || type == \"function\");\n    }\n    function isObjectLike(value) {\n      return !!value && typeof value == \"object\";\n    }\n    function isSymbol(value) {\n      return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n    }\n    function toNumber(value) {\n      if (typeof value == \"number\") {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n        value = isObject(other) ? other + \"\" : other;\n      }\n      if (typeof value != \"string\") {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, \"\");\n      var isBinary = reIsBinary.test(value);\n      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n    }\n    module.exports = throttle2;\n  }\n});\n\n// ../../node_modules/date-fns/getDate/index.js\nvar require_getDate = __commonJS({\n  \"../../node_modules/date-fns/getDate/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getDate2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getDate2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var dayOfMonth = date.getDate();\n      return dayOfMonth;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getDay/index.js\nvar require_getDay = __commonJS({\n  \"../../node_modules/date-fns/getDay/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getDay2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getDay2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var day = date.getDay();\n      return day;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getHours/index.js\nvar require_getHours = __commonJS({\n  \"../../node_modules/date-fns/getHours/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getHours2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getHours2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var hours = date.getHours();\n      return hours;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getMinutes/index.js\nvar require_getMinutes = __commonJS({\n  \"../../node_modules/date-fns/getMinutes/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getMinutes2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getMinutes2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var minutes = date.getMinutes();\n      return minutes;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getMonth/index.js\nvar require_getMonth = __commonJS({\n  \"../../node_modules/date-fns/getMonth/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getMonth2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getMonth2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var month = date.getMonth();\n      return month;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getYear/index.js\nvar require_getYear = __commonJS({\n  \"../../node_modules/date-fns/getYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getYear2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getYear2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      return (0, _index.default)(dirtyDate).getFullYear();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/addDays/index.js\nvar require_addDays = __commonJS({\n  \"../../node_modules/date-fns/addDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addDays;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function addDays(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var date = (0, _index2.default)(dirtyDate);\n      var amount = (0, _index.default)(dirtyAmount);\n      if (isNaN(amount)) {\n        return new Date(NaN);\n      }\n      if (!amount) {\n        return date;\n      }\n      date.setDate(date.getDate() + amount);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/addMonths/index.js\nvar require_addMonths = __commonJS({\n  \"../../node_modules/date-fns/addMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addMonths;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function addMonths(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var date = (0, _index2.default)(dirtyDate);\n      var amount = (0, _index.default)(dirtyAmount);\n      if (isNaN(amount)) {\n        return new Date(NaN);\n      }\n      if (!amount) {\n        return date;\n      }\n      var dayOfMonth = date.getDate();\n      var endOfDesiredMonth = new Date(date.getTime());\n      endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n      var daysInMonth = endOfDesiredMonth.getDate();\n      if (dayOfMonth >= daysInMonth) {\n        return endOfDesiredMonth;\n      } else {\n        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n        return date;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/add/index.js\nvar require_add = __commonJS({\n  \"../../node_modules/date-fns/add/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = add2;\n    var _index = _interopRequireDefault(require_addDays());\n    var _index2 = _interopRequireDefault(require_addMonths());\n    var _index3 = _interopRequireDefault(require_toDate());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    var _index5 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function add2(dirtyDate, duration) {\n      (0, _index4.default)(2, arguments);\n      if (!duration || typeof duration !== \"object\")\n        return new Date(NaN);\n      var years = duration.years ? (0, _index5.default)(duration.years) : 0;\n      var months = duration.months ? (0, _index5.default)(duration.months) : 0;\n      var weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0;\n      var days = duration.days ? (0, _index5.default)(duration.days) : 0;\n      var hours = duration.hours ? (0, _index5.default)(duration.hours) : 0;\n      var minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0;\n      var seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0;\n      var date = (0, _index3.default)(dirtyDate);\n      var dateWithMonths = months || years ? (0, _index2.default)(date, months + years * 12) : date;\n      var dateWithDays = days || weeks ? (0, _index.default)(dateWithMonths, days + weeks * 7) : dateWithMonths;\n      var minutesToAdd = minutes + hours * 60;\n      var secondsToAdd = seconds + minutesToAdd * 60;\n      var msToAdd = secondsToAdd * 1e3;\n      var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n      return finalDate;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/subDays/index.js\nvar require_subDays = __commonJS({\n  \"../../node_modules/date-fns/subDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = subDays;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_addDays());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function subDays(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var amount = (0, _index.default)(dirtyAmount);\n      return (0, _index2.default)(dirtyDate, -amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/subMonths/index.js\nvar require_subMonths = __commonJS({\n  \"../../node_modules/date-fns/subMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = subMonths;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_addMonths());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function subMonths(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var amount = (0, _index.default)(dirtyAmount);\n      return (0, _index2.default)(dirtyDate, -amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/sub/index.js\nvar require_sub = __commonJS({\n  \"../../node_modules/date-fns/sub/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = sub2;\n    var _index = _interopRequireDefault(require_subDays());\n    var _index2 = _interopRequireDefault(require_subMonths());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    var _index4 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function sub2(date, duration) {\n      (0, _index3.default)(2, arguments);\n      if (!duration || typeof duration !== \"object\")\n        return new Date(NaN);\n      var years = duration.years ? (0, _index4.default)(duration.years) : 0;\n      var months = duration.months ? (0, _index4.default)(duration.months) : 0;\n      var weeks = duration.weeks ? (0, _index4.default)(duration.weeks) : 0;\n      var days = duration.days ? (0, _index4.default)(duration.days) : 0;\n      var hours = duration.hours ? (0, _index4.default)(duration.hours) : 0;\n      var minutes = duration.minutes ? (0, _index4.default)(duration.minutes) : 0;\n      var seconds = duration.seconds ? (0, _index4.default)(duration.seconds) : 0;\n      var dateWithoutMonths = (0, _index2.default)(date, months + years * 12);\n      var dateWithoutDays = (0, _index.default)(dateWithoutMonths, days + weeks * 7);\n      var minutestoSub = minutes + hours * 60;\n      var secondstoSub = seconds + minutestoSub * 60;\n      var mstoSub = secondstoSub * 1e3;\n      var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n      return finalDate;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/compareAsc/index.js\nvar require_compareAsc = __commonJS({\n  \"../../node_modules/date-fns/compareAsc/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = compareAsc;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function compareAsc(dirtyDateLeft, dirtyDateRight) {\n      (0, _index2.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var diff = dateLeft.getTime() - dateRight.getTime();\n      if (diff < 0) {\n        return -1;\n      } else if (diff > 0) {\n        return 1;\n      } else {\n        return diff;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInCalendarYears/index.js\nvar require_differenceInCalendarYears = __commonJS({\n  \"../../node_modules/date-fns/differenceInCalendarYears/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInCalendarYears;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n      (0, _index2.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      return dateLeft.getFullYear() - dateRight.getFullYear();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInYears/index.js\nvar require_differenceInYears = __commonJS({\n  \"../../node_modules/date-fns/differenceInYears/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInYears;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_differenceInCalendarYears());\n    var _index3 = _interopRequireDefault(require_compareAsc());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n      (0, _index4.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var sign = (0, _index3.default)(dateLeft, dateRight);\n      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      dateLeft.setFullYear(1584);\n      dateRight.setFullYear(1584);\n      var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;\n      var result = sign * (difference - Number(isLastYearNotFull));\n      return result === 0 ? 0 : result;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInCalendarMonths/index.js\nvar require_differenceInCalendarMonths = __commonJS({\n  \"../../node_modules/date-fns/differenceInCalendarMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInCalendarMonths;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n      (0, _index2.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n      var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n      return yearDiff * 12 + monthDiff;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/endOfDay/index.js\nvar require_endOfDay = __commonJS({\n  \"../../node_modules/date-fns/endOfDay/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = endOfDay;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function endOfDay(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      date.setHours(23, 59, 59, 999);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/endOfMonth/index.js\nvar require_endOfMonth = __commonJS({\n  \"../../node_modules/date-fns/endOfMonth/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = endOfMonth;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function endOfMonth(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var month = date.getMonth();\n      date.setFullYear(date.getFullYear(), month + 1, 0);\n      date.setHours(23, 59, 59, 999);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/isLastDayOfMonth/index.js\nvar require_isLastDayOfMonth = __commonJS({\n  \"../../node_modules/date-fns/isLastDayOfMonth/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = isLastDayOfMonth;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_endOfDay());\n    var _index3 = _interopRequireDefault(require_endOfMonth());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function isLastDayOfMonth(dirtyDate) {\n      (0, _index4.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      return (0, _index2.default)(date).getTime() === (0, _index3.default)(date).getTime();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInMonths/index.js\nvar require_differenceInMonths = __commonJS({\n  \"../../node_modules/date-fns/differenceInMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInMonths;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_differenceInCalendarMonths());\n    var _index3 = _interopRequireDefault(require_compareAsc());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    var _index5 = _interopRequireDefault(require_isLastDayOfMonth());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n      (0, _index4.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var sign = (0, _index3.default)(dateLeft, dateRight);\n      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      var result;\n      if (difference < 1) {\n        result = 0;\n      } else {\n        if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n          dateLeft.setDate(30);\n        }\n        dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n        var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;\n        if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {\n          isLastMonthNotFull = false;\n        }\n        result = sign * (difference - Number(isLastMonthNotFull));\n      }\n      return result === 0 ? 0 : result;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/startOfDay/index.js\nvar require_startOfDay = __commonJS({\n  \"../../node_modules/date-fns/startOfDay/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfDay;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfDay(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInCalendarDays/index.js\nvar require_differenceInCalendarDays = __commonJS({\n  \"../../node_modules/date-fns/differenceInCalendarDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInCalendarDays;\n    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());\n    var _index2 = _interopRequireDefault(require_startOfDay());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_DAY = 864e5;\n    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n      (0, _index3.default)(2, arguments);\n      var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);\n      var startOfDayRight = (0, _index2.default)(dirtyDateRight);\n      var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);\n      var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);\n      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInDays/index.js\nvar require_differenceInDays = __commonJS({\n  \"../../node_modules/date-fns/differenceInDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInDays;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_differenceInCalendarDays());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function compareLocalAsc(dateLeft, dateRight) {\n      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n      if (diff < 0) {\n        return -1;\n      } else if (diff > 0) {\n        return 1;\n      } else {\n        return diff;\n      }\n    }\n    function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n      (0, _index3.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var sign = compareLocalAsc(dateLeft, dateRight);\n      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      dateLeft.setDate(dateLeft.getDate() - sign * difference);\n      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n      var result = sign * (difference - isLastDayNotFull);\n      return result === 0 ? 0 : result;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/constants/index.js\nvar require_constants = __commonJS({\n  \"../../node_modules/date-fns/constants/index.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.secondsInMinute = exports.secondsInHour = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInHour = exports.minTime = exports.millisecondsInSecond = exports.millisecondsInHour = exports.millisecondsInMinute = exports.maxTime = exports.daysInWeek = void 0;\n    var daysInWeek = 7;\n    exports.daysInWeek = daysInWeek;\n    var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;\n    exports.maxTime = maxTime;\n    var millisecondsInMinute = 6e4;\n    exports.millisecondsInMinute = millisecondsInMinute;\n    var millisecondsInHour = 36e5;\n    exports.millisecondsInHour = millisecondsInHour;\n    var millisecondsInSecond = 1e3;\n    exports.millisecondsInSecond = millisecondsInSecond;\n    var minTime = -maxTime;\n    exports.minTime = minTime;\n    var minutesInHour = 60;\n    exports.minutesInHour = minutesInHour;\n    var monthsInQuarter = 3;\n    exports.monthsInQuarter = monthsInQuarter;\n    var monthsInYear = 12;\n    exports.monthsInYear = monthsInYear;\n    var quartersInYear = 4;\n    exports.quartersInYear = quartersInYear;\n    var secondsInHour = 3600;\n    exports.secondsInHour = secondsInHour;\n    var secondsInMinute = 60;\n    exports.secondsInMinute = secondsInMinute;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInMilliseconds/index.js\nvar require_differenceInMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/differenceInMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInMilliseconds;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInMilliseconds(dateLeft, dateRight) {\n      (0, _index2.default)(2, arguments);\n      return (0, _index.default)(dateLeft).getTime() - (0, _index.default)(dateRight).getTime();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/roundingMethods/index.js\nvar require_roundingMethods = __commonJS({\n  \"../../node_modules/date-fns/_lib/roundingMethods/index.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getRoundingMethod = getRoundingMethod;\n    var roundingMap = {\n      ceil: Math.ceil,\n      round: Math.round,\n      floor: Math.floor,\n      trunc: function(value) {\n        return value < 0 ? Math.ceil(value) : Math.floor(value);\n      }\n    };\n    var defaultRoundingMethod = \"trunc\";\n    function getRoundingMethod(method) {\n      return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n    }\n  }\n});\n\n// ../../node_modules/date-fns/differenceInHours/index.js\nvar require_differenceInHours = __commonJS({\n  \"../../node_modules/date-fns/differenceInHours/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInHours;\n    var _index = require_constants();\n    var _index2 = _interopRequireDefault(require_differenceInMilliseconds());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    var _index4 = require_roundingMethods();\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInHours(dateLeft, dateRight, options) {\n      (0, _index3.default)(2, arguments);\n      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;\n      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInMinutes/index.js\nvar require_differenceInMinutes = __commonJS({\n  \"../../node_modules/date-fns/differenceInMinutes/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInMinutes;\n    var _index = require_constants();\n    var _index2 = _interopRequireDefault(require_differenceInMilliseconds());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    var _index4 = require_roundingMethods();\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInMinutes(dateLeft, dateRight, options) {\n      (0, _index3.default)(2, arguments);\n      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;\n      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInSeconds/index.js\nvar require_differenceInSeconds = __commonJS({\n  \"../../node_modules/date-fns/differenceInSeconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInSeconds;\n    var _index = _interopRequireDefault(require_differenceInMilliseconds());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = require_roundingMethods();\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInSeconds(dateLeft, dateRight, options) {\n      (0, _index2.default)(2, arguments);\n      var diff = (0, _index.default)(dateLeft, dateRight) / 1e3;\n      return (0, _index3.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/intervalToDuration/index.js\nvar require_intervalToDuration = __commonJS({\n  \"../../node_modules/date-fns/intervalToDuration/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = intervalToDuration2;\n    var _index = _interopRequireDefault(require_compareAsc());\n    var _index2 = _interopRequireDefault(require_differenceInYears());\n    var _index3 = _interopRequireDefault(require_differenceInMonths());\n    var _index4 = _interopRequireDefault(require_differenceInDays());\n    var _index5 = _interopRequireDefault(require_differenceInHours());\n    var _index6 = _interopRequireDefault(require_differenceInMinutes());\n    var _index7 = _interopRequireDefault(require_differenceInSeconds());\n    var _index8 = _interopRequireDefault(require_isValid());\n    var _index9 = _interopRequireDefault(require_requiredArgs());\n    var _index10 = _interopRequireDefault(require_toDate());\n    var _index11 = _interopRequireDefault(require_sub());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function intervalToDuration2(_ref) {\n      var start = _ref.start, end = _ref.end;\n      (0, _index9.default)(1, arguments);\n      var dateLeft = (0, _index10.default)(start);\n      var dateRight = (0, _index10.default)(end);\n      if (!(0, _index8.default)(dateLeft)) {\n        throw new RangeError(\"Start Date is invalid\");\n      }\n      if (!(0, _index8.default)(dateRight)) {\n        throw new RangeError(\"End Date is invalid\");\n      }\n      var duration = {\n        years: 0,\n        months: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      };\n      var sign = (0, _index.default)(dateLeft, dateRight);\n      duration.years = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      var remainingMonths = (0, _index11.default)(dateLeft, {\n        years: sign * duration.years\n      });\n      duration.months = Math.abs((0, _index3.default)(remainingMonths, dateRight));\n      var remainingDays = (0, _index11.default)(remainingMonths, {\n        months: sign * duration.months\n      });\n      duration.days = Math.abs((0, _index4.default)(remainingDays, dateRight));\n      var remainingHours = (0, _index11.default)(remainingDays, {\n        days: sign * duration.days\n      });\n      duration.hours = Math.abs((0, _index5.default)(remainingHours, dateRight));\n      var remainingMinutes = (0, _index11.default)(remainingHours, {\n        hours: sign * duration.hours\n      });\n      duration.minutes = Math.abs((0, _index6.default)(remainingMinutes, dateRight));\n      var remainingSeconds = (0, _index11.default)(remainingMinutes, {\n        minutes: sign * duration.minutes\n      });\n      duration.seconds = Math.abs((0, _index7.default)(remainingSeconds, dateRight));\n      return duration;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// src/third-party/collection.tsx\n\n\n\n\n\n// src/third-party/collection-row.tsx\n\n\n// src/third-party/collection-column-title.tsx\n\n\n// src/icons/type-title.tsx\n\nfunction SvgTypeTitle(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z\"\n  }));\n}\nvar type_title_default = SvgTypeTitle;\n\n// src/icons/type-text.tsx\n\nfunction SvgTypeText(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z\"\n  }));\n}\nvar type_text_default = SvgTypeText;\n\n// src/icons/type-number.tsx\n\nfunction SvgTypeNumber(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z\"\n  }));\n}\nvar type_number_default = SvgTypeNumber;\n\n// src/icons/type-select.tsx\n\nfunction SvgTypeSelect(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z\"\n  }));\n}\nvar type_select_default = SvgTypeSelect;\n\n// src/icons/type-multi-select.tsx\n\nfunction SvgTypeMultiSelect(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z\"\n  }));\n}\nvar type_multi_select_default = SvgTypeMultiSelect;\n\n// src/icons/type-date.tsx\n\nfunction SvgTypeDate(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z\"\n  }));\n}\nvar type_date_default = SvgTypeDate;\n\n// src/icons/type-person.tsx\n\nfunction SvgTypePerson(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z\"\n  }));\n}\nvar type_person_default = SvgTypePerson;\n\n// src/icons/type-file.tsx\n\nfunction SvgTypeFile(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z\"\n  }));\n}\nvar type_file_default = SvgTypeFile;\n\n// src/icons/type-checkbox.tsx\n\nfunction SvgTypeCheckbox(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z\"\n  }));\n}\nvar type_checkbox_default = SvgTypeCheckbox;\n\n// src/icons/type-url.tsx\n\nfunction SvgTypeUrl(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z\"\n  }));\n}\nvar type_url_default = SvgTypeUrl;\n\n// src/icons/type-email.tsx\n\nfunction SvgTypeEmail(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z\"\n  }));\n}\nvar type_email_default = SvgTypeEmail;\n\n// src/icons/type-phone-number.tsx\n\nfunction SvgTypePhoneNumber(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z\"\n  }));\n}\nvar type_phone_number_default = SvgTypePhoneNumber;\n\n// src/icons/type-formula.tsx\n\nfunction SvgTypeFormula(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z\"\n  }));\n}\nvar type_formula_default = SvgTypeFormula;\n\n// src/icons/type-relation.tsx\n\nfunction SvgTypeRelation(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z\"\n  }));\n}\nvar type_relation_default = SvgTypeRelation;\n\n// src/icons/type-person-2.tsx\n\nfunction SvgTypePerson2(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z\"\n  }));\n}\nvar type_person_2_default = SvgTypePerson2;\n\n// src/icons/type-timestamp.tsx\n\nfunction SvgTypeTimestamp(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z\"\n  }));\n}\nvar type_timestamp_default = SvgTypeTimestamp;\n\n// src/icons/property-icon.tsx\nvar iconMap = {\n  title: type_title_default,\n  text: type_text_default,\n  number: type_number_default,\n  select: type_select_default,\n  multi_select: type_multi_select_default,\n  date: type_date_default,\n  person: type_person_default,\n  file: type_file_default,\n  checkbox: type_checkbox_default,\n  url: type_url_default,\n  email: type_email_default,\n  phone_number: type_phone_number_default,\n  formula: type_formula_default,\n  relation: type_relation_default,\n  created_time: type_timestamp_default,\n  last_edited_time: type_timestamp_default,\n  created_by: type_person_2_default,\n  last_edited_by: type_person_2_default\n};\nvar PropertyIcon = (_a) => {\n  var _b = _a, {\n    type\n  } = _b, rest = __objRest(_b, [\n    \"type\"\n  ]);\n  const icon = iconMap[type];\n  if (!icon)\n    return null;\n  return icon(rest);\n};\n\n// src/third-party/collection-column-title.tsx\nvar CollectionColumnTitle = ({ schema }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-column-title\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PropertyIcon, {\n    className: \"notion-collection-column-title-icon\",\n    type: schema.type\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-column-title-body\"\n  }, schema.name));\n};\n\n// src/third-party/property.tsx\nvar import_format_number = __toESM(require_format_number(), 1);\nvar import_format2 = __toESM(require_format(), 1);\n\n\n// src/utils.ts\n\n\n// src/map-image-url.ts\nvar defaultMapImageUrl = (url, block) => {\n  if (!url) {\n    return null;\n  }\n  if (url.startsWith(\"data:\")) {\n    return url;\n  }\n  if (url.startsWith(\"https://images.unsplash.com\")) {\n    return url;\n  }\n  try {\n    const u = new URL(url);\n    if (u.pathname.startsWith(\"/secure.notion-static.com\") && u.hostname.endsWith(\".amazonaws.com\")) {\n      if (u.searchParams.has(\"X-Amz-Credential\") && u.searchParams.has(\"X-Amz-Signature\") && u.searchParams.has(\"X-Amz-Algorithm\")) {\n        return url;\n      }\n    }\n  } catch (e) {\n  }\n  if (url.startsWith(\"/images\")) {\n    url = `https://www.notion.so${url}`;\n  }\n  url = `https://www.notion.so${url.startsWith(\"/image\") ? url : `/image/${encodeURIComponent(url)}`}`;\n  const notionImageUrlV2 = new URL(url);\n  let table = block.parent_table === \"space\" ? \"block\" : block.parent_table;\n  if (table === \"collection\") {\n    table = \"block\";\n  }\n  notionImageUrlV2.searchParams.set(\"table\", table);\n  notionImageUrlV2.searchParams.set(\"id\", block.id);\n  notionImageUrlV2.searchParams.set(\"cache\", \"v2\");\n  url = notionImageUrlV2.toString();\n  return url;\n};\n\n// src/map-page-url.ts\nvar defaultMapPageUrl = (rootPageId) => (pageId) => {\n  pageId = (pageId || \"\").replace(/-/g, \"\");\n  if (rootPageId && pageId === rootPageId) {\n    return \"/\";\n  } else {\n    return `/${pageId}`;\n  }\n};\n\n// src/utils.ts\nvar cs = (...classes) => classes.filter((a) => !!a).join(\" \");\nvar getHashFragmentValue = (url) => {\n  return url.includes(\"#\") ? url.replace(/^.+(#.+)$/, \"$1\") : \"\";\n};\nvar isBrowser = typeof window !== \"undefined\";\nvar youtubeDomains = /* @__PURE__ */ new Set([\n  \"youtu.be\",\n  \"youtube.com\",\n  \"www.youtube.com\",\n  \"youtube-nocookie.com\",\n  \"www.youtube-nocookie.com\"\n]);\nvar getYoutubeId = (url) => {\n  try {\n    const { hostname } = new URL(url);\n    if (!youtubeDomains.has(hostname)) {\n      return null;\n    }\n    const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i;\n    const match = url.match(regExp);\n    if (match && match[2].length == 11) {\n      return match[2];\n    }\n  } catch (e) {\n  }\n  return null;\n};\n\n// src/context.tsx\n\n\n// src/next.tsx\n\n\nvar wrapNextImage = (NextImage) => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.memo(function ReactNotionXNextImage(_a) {\n    var _b = _a, {\n      src,\n      alt,\n      width,\n      height,\n      className,\n      style,\n      layout\n    } = _b, rest = __objRest(_b, [\n      \"src\",\n      \"alt\",\n      \"width\",\n      \"height\",\n      \"className\",\n      \"style\",\n      \"layout\"\n    ]);\n    if (!layout) {\n      layout = width && height ? \"intrinsic\" : \"fill\";\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NextImage, __spreadValues({\n      className,\n      src,\n      alt,\n      width: layout === \"intrinsic\" && width,\n      height: layout === \"intrinsic\" && height,\n      objectFit: style == null ? void 0 : style.objectFit,\n      objectPosition: style == null ? void 0 : style.objectPosition,\n      layout\n    }, rest));\n  }, react_fast_compare__WEBPACK_IMPORTED_MODULE_4__);\n};\nvar wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {\n  var _b = _a, {\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale\n  } = _b, linkProps = __objRest(_b, [\n    \"href\",\n    \"as\",\n    \"passHref\",\n    \"prefetch\",\n    \"replace\",\n    \"scroll\",\n    \"shallow\",\n    \"locale\"\n  ]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NextLink, {\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({}, linkProps)));\n};\n\n// src/components/asset-wrapper.tsx\n\n\n// src/components/asset.tsx\n\n\n\n// src/components/lazy-image.tsx\n\n\n\nvar LazyImage = (_a) => {\n  var _b = _a, {\n    src,\n    alt,\n    className,\n    style,\n    zoomable = false,\n    priority = false,\n    height\n  } = _b, rest = __objRest(_b, [\n    \"src\",\n    \"alt\",\n    \"className\",\n    \"style\",\n    \"zoomable\",\n    \"priority\",\n    \"height\"\n  ]);\n  var _a2, _b2, _c;\n  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();\n  const zoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(zoom ? zoom.clone() : null);\n  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[(0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeUrl)(src)] : null;\n  const onLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((e) => {\n    if (zoomable && (e.target.src || e.target.srcset)) {\n      if (zoomRef.current) {\n        ;\n        zoomRef.current.attach(e.target);\n      }\n    }\n  }, [zoomRef, zoomable]);\n  const attachZoom = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((image) => {\n    if (zoomRef.current && image) {\n      ;\n      zoomRef.current.attach(image);\n    }\n  }, [zoomRef]);\n  const attachZoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => zoomable ? attachZoom : void 0, [zoomable, attachZoom]);\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;\n    if (components.Image) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Image, {\n        src,\n        alt,\n        style,\n        className,\n        width: previewImage.originalWidth,\n        height: previewImage.originalHeight,\n        blurDataURL: previewImage.dataURIBase64,\n        placeholder: \"blur\",\n        priority,\n        onLoad\n      });\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.LazyImageFull, __spreadProps(__spreadValues({\n      src\n    }, rest), {\n      experimentalDecode: true\n    }), ({ imageState, ref }) => {\n      const isLoaded = imageState === react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.ImageState.LoadSuccess;\n      const wrapperStyle = {\n        width: \"100%\"\n      };\n      const imgStyle = {};\n      if (height) {\n        wrapperStyle.height = height;\n      } else {\n        imgStyle.position = \"absolute\";\n        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cs(\"lazy-image-wrapper\", isLoaded && \"lazy-image-loaded\", className),\n        style: wrapperStyle\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        className: \"lazy-image-preview\",\n        src: previewImage.dataURIBase64,\n        alt,\n        ref,\n        style,\n        decoding: \"async\"\n      }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        className: \"lazy-image-real\",\n        src,\n        alt,\n        ref: attachZoomRef,\n        style: __spreadValues(__spreadValues({}, style), imgStyle),\n        width: previewImage.originalWidth,\n        height: previewImage.originalHeight,\n        decoding: \"async\",\n        loading: \"lazy\"\n      }));\n    });\n  } else {\n    if (components.Image && forceCustomImages) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Image, {\n        src,\n        alt,\n        className,\n        style,\n        width: null,\n        height: height || null,\n        priority,\n        onLoad\n      });\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", __spreadValues({\n      className,\n      style,\n      src,\n      alt,\n      ref: attachZoomRef,\n      loading: \"lazy\",\n      decoding: \"async\"\n    }, rest));\n  }\n};\n\n// src/components/lite-youtube-embed.tsx\n\nvar qs = (params) => {\n  return Object.keys(params).map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join(\"&\");\n};\nvar LiteYouTubeEmbed = ({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = \"YouTube video\",\n  alt = \"Video preview\",\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}) => {\n  const muteParam = mute || defaultPlay ? \"1\" : \"0\";\n  const queryString = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => qs(__spreadValues({ autoplay: \"1\", mute: muteParam }, params)), [muteParam, params]);\n  const resolution = \"hqdefault\";\n  const posterUrl = `https://i.ytimg.com/vi/${id}/${resolution}.jpg`;\n  const ytUrl = \"https://www.youtube-nocookie.com\";\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;\n  const [isPreconnected, setIsPreconnected] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [iframeInitialized, setIframeInitialized] = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultPlay);\n  const [isIframeLoaded, setIsIframeLoaded] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const warmConnections = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (isPreconnected)\n      return;\n    setIsPreconnected(true);\n  }, [isPreconnected]);\n  const onLoadIframe = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (iframeInitialized)\n      return;\n    setIframeInitialized(true);\n  }, [iframeInitialized]);\n  const onIframeLoaded = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsIframeLoaded(true);\n  }, []);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preload\",\n    href: posterUrl,\n    as: \"image\"\n  }), isPreconnected && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: ytUrl\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://www.google.com\"\n  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://static.doubleclick.net\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://googleads.g.doubleclick.net\"\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    onClick: onLoadIframe,\n    onPointerOver: warmConnections,\n    className: cs(\"notion-yt-lite\", isIframeLoaded && \"notion-yt-loaded\", iframeInitialized && \"notion-yt-initialized\", className),\n    style\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n    src: posterUrl,\n    className: \"notion-yt-thumbnail\",\n    loading: lazyImage ? \"lazy\" : void 0,\n    alt\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-yt-playbtn\"\n  }), iframeInitialized && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    title: iframeTitle,\n    src: iframeSrc,\n    onLoad: onIframeLoaded\n  })));\n};\n\n// src/components/asset.tsx\nvar isServer = typeof window === \"undefined\";\nvar supportedAssetTypes = [\n  \"video\",\n  \"image\",\n  \"embed\",\n  \"figma\",\n  \"typeform\",\n  \"excalidraw\",\n  \"maps\",\n  \"tweet\",\n  \"pdf\",\n  \"gist\",\n  \"codepen\",\n  \"drive\"\n];\nvar Asset = ({ block, zoomable = true, children }) => {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const { recordMap, mapImageUrl, components } = useNotionContext();\n  if (!block || !supportedAssetTypes.includes(block.type)) {\n    return null;\n  }\n  const style = {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    flexDirection: \"column\"\n  };\n  const assetStyle = {};\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format;\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = \"100vw\";\n      } else {\n        style.width = \"100%\";\n      }\n      if (block.type === \"video\") {\n        if (block_height) {\n          style.height = block_height;\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`;\n        } else if (block_preserve_scale) {\n          style.objectFit = \"contain\";\n        }\n      } else if (block_aspect_ratio && block.type !== \"image\") {\n        style.paddingBottom = `${block_aspect_ratio * 100}%`;\n      } else if (block_height) {\n        style.height = block_height;\n      } else if (block_preserve_scale) {\n        if (block.type === \"image\") {\n          style.height = \"100%\";\n        } else {\n          style.paddingBottom = \"75%\";\n          style.minHeight = 100;\n        }\n      }\n    } else {\n      switch ((_a = block.format) == null ? void 0 : _a.block_alignment) {\n        case \"center\": {\n          style.alignSelf = \"center\";\n          break;\n        }\n        case \"left\": {\n          style.alignSelf = \"start\";\n          break;\n        }\n        case \"right\": {\n          style.alignSelf = \"end\";\n          break;\n        }\n      }\n      if (block_width) {\n        style.width = block_width;\n      }\n      if (block_preserve_scale && block.type !== \"image\") {\n        style.paddingBottom = \"50%\";\n        style.minHeight = 100;\n      } else {\n        if (block_height && block.type !== \"image\") {\n          style.height = block_height;\n        }\n      }\n    }\n    if (block.type === \"image\") {\n      assetStyle.objectFit = \"cover\";\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = \"contain\";\n    }\n  }\n  const source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);\n  let content = null;\n  if (!source) {\n    return null;\n  }\n  if (block.type === \"tweet\") {\n    const src = source;\n    if (!src)\n      return null;\n    const id = src.split(\"?\")[0].split(\"/\").pop();\n    if (!id)\n      return null;\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      style: __spreadProps(__spreadValues({}, assetStyle), {\n        maxWidth: 420,\n        width: \"100%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      })\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Tweet, {\n      id\n    }));\n  } else if (block.type === \"pdf\") {\n    style.overflow = \"auto\";\n    style.background = \"rgb(226, 226, 226)\";\n    if (!style.padding) {\n      style.padding = \"8px 16px\";\n    }\n    if (!isServer) {\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Pdf, {\n        file: source\n      });\n    }\n  } else if (block.type === \"embed\" || block.type === \"video\" || block.type === \"figma\" || block.type === \"typeform\" || block.type === \"gist\" || block.type === \"maps\" || block.type === \"excalidraw\" || block.type === \"codepen\" || block.type === \"drive\") {\n    if (block.type === \"video\" && source && source.indexOf(\"youtube\") < 0 && source.indexOf(\"youtu.be\") < 0 && source.indexOf(\"vimeo\") < 0 && source.indexOf(\"wistia\") < 0 && source.indexOf(\"loom\") < 0 && source.indexOf(\"videoask\") < 0 && source.indexOf(\"getcloudapp\") < 0) {\n      style.paddingBottom = void 0;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"video\", {\n        playsInline: true,\n        controls: true,\n        preload: \"metadata\",\n        style: assetStyle,\n        src: source,\n        title: block.type\n      });\n    } else {\n      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;\n      if (src) {\n        const youtubeVideoId = block.type === \"video\" ? getYoutubeId(src) : null;\n        if (youtubeVideoId) {\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LiteYouTubeEmbed, {\n            id: youtubeVideoId,\n            style: assetStyle,\n            className: \"notion-asset-object-fit\"\n          });\n        } else if (block.type === \"gist\") {\n          if (!src.endsWith(\".pibb\")) {\n            src = `${src}.pibb`;\n          }\n          assetStyle.width = \"100%\";\n          style.paddingBottom = \"50%\";\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            style: assetStyle,\n            className: \"notion-asset-object-fit\",\n            src,\n            title: \"GitHub Gist\",\n            frameBorder: \"0\",\n            loading: \"lazy\",\n            scrolling: \"auto\"\n          });\n        } else {\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            className: \"notion-asset-object-fit\",\n            style: assetStyle,\n            src,\n            title: `iframe ${block.type}`,\n            frameBorder: \"0\",\n            allowFullScreen: true,\n            loading: \"lazy\",\n            scrolling: \"auto\"\n          });\n        }\n      }\n    }\n  } else if (block.type === \"image\") {\n    const src = mapImageUrl(source, block);\n    const caption = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)((_g = block.properties) == null ? void 0 : _g.caption);\n    const alt = caption || \"notion image\";\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n      src,\n      alt,\n      zoomable,\n      height: style.height,\n      style: assetStyle\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    style\n  }, content, block.type === \"image\" && children), block.type !== \"image\" && children);\n};\n\n// src/components/text.tsx\n\n\n\n// src/components/page-title.tsx\n\n\n\n// src/components/page-icon.tsx\n\n\n\n// src/icons/default-page-icon.tsx\n\nvar DefaultPageIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className\n  }, rest), {\n    viewBox: \"0 0 30 30\",\n    width: \"16\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z\"\n  }));\n};\n\n// src/components/page-icon.tsx\nvar isIconBlock = (value) => {\n  return value.type === \"page\" || value.type === \"callout\" || value.type === \"collection_view\" || value.type === \"collection_view_page\";\n};\nvar PageIconImpl = ({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}) => {\n  var _a;\n  const { mapImageUrl, recordMap } = useNotionContext();\n  let isImage = false;\n  let content = null;\n  if (isIconBlock(block)) {\n    const icon = ((_a = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockIcon)(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockTitle)(block, recordMap);\n    if (icon && (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.isUrl)(icon)) {\n      const url = mapImageUrl(icon, block);\n      isImage = true;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n        src: url,\n        alt: title || \"page icon\",\n        className: cs(className, \"notion-page-icon\")\n      });\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true;\n        content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPageIcon, {\n          className: cs(className, \"notion-page-icon\"),\n          alt: title ? title : \"page icon\"\n        });\n      }\n    } else {\n      isImage = false;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: cs(className, \"notion-page-icon\"),\n        role: \"img\",\n        \"aria-label\": icon\n      }, icon);\n    }\n  }\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(inline ? \"notion-page-icon-inline\" : \"notion-page-icon-hero\", isImage ? \"notion-page-icon-image\" : \"notion-page-icon-span\")\n  }, content);\n};\nvar PageIcon = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageIconImpl);\n\n// src/components/page-title.tsx\nvar PageTitleImpl = (_a) => {\n  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, [\"block\", \"className\", \"defaultIcon\"]);\n  var _a2, _b2;\n  const { recordMap } = useNotionContext();\n  if (!block)\n    return null;\n  if (block.type === \"collection_view_page\" || block.type === \"collection_view\") {\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockTitle)(block, recordMap);\n    if (!title) {\n      return null;\n    }\n    const titleDecoration = [[title]];\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({\n      className: cs(\"notion-page-title\", className)\n    }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n      block,\n      defaultIcon,\n      className: \"notion-page-title-icon\"\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"notion-page-title-text\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: titleDecoration,\n      block\n    })));\n  }\n  if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({\n    className: cs(\"notion-page-title\", className)\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n    block,\n    defaultIcon,\n    className: \"notion-page-title-icon\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-page-title-text\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n    value: (_b2 = block.properties) == null ? void 0 : _b2.title,\n    block\n  })));\n};\nvar PageTitle = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageTitleImpl);\n\n// src/components/graceful-image.tsx\n\n\nvar GracefulImage = (props) => {\n  if (isBrowser) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_image__WEBPACK_IMPORTED_MODULE_6__.Img, __spreadValues({}, props));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", __spreadValues({}, props));\n  }\n};\n\n// src/components/eoi.tsx\n\n\n// src/icons/type-github.tsx\n\nfunction SvgTypeGitHub(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 260 260\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\",\n    fill: \"#161614\"\n  })));\n}\nvar type_github_default = SvgTypeGitHub;\n\n// src/components/eoi.tsx\nvar EOI = ({ block, inline, className }) => {\n  var _a, _b, _c;\n  const { components } = useNotionContext();\n  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};\n  if (!original_url || !attributes) {\n    return null;\n  }\n  const title = (_a = attributes.find((attr) => attr.id === \"title\")) == null ? void 0 : _a.values[0];\n  let owner = (_b = attributes.find((attr) => attr.id === \"owner\")) == null ? void 0 : _b.values[0];\n  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === \"updated_at\")) == null ? void 0 : _c.values[0];\n  const lastUpdated = lastUpdatedAt ? (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatNotionDateTime)(lastUpdatedAt) : null;\n  let externalImage;\n  switch (domain) {\n    case \"github.com\":\n      externalImage = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(type_github_default, null);\n      if (owner) {\n        const parts = owner.split(\"/\");\n        owner = parts[parts.length - 1];\n      }\n      break;\n    default:\n      if (true) {\n        console.log(`Unsupported external_object_instance domain \"${domain}\"`, JSON.stringify(block, null, 2));\n      }\n      return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: original_url,\n    className: cs(\"notion-external\", inline ? \"notion-external-mention\" : \"notion-external-block notion-row\", className)\n  }, externalImage && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-image\"\n  }, externalImage), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-description\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-title\"\n  }, title), (owner || lastUpdated) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-subtitle\"\n  }, owner && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, owner), owner && lastUpdated && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, \" \\u2022 \"), lastUpdated && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, \"Updated \", lastUpdated))));\n};\n\n// src/components/text.tsx\nvar Text = ({ value, block, linkProps, linkProtocol }) => {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {\n    if (!decorations) {\n      if (text === \",\") {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n          key: index,\n          style: { padding: \"0.5em\" }\n        });\n      } else {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: index\n        }, text);\n      }\n    }\n    const formatted = decorations.reduce((element, decorator) => {\n      var _a, _b, _c, _d, _e;\n      switch (decorator[0]) {\n        case \"p\": {\n          const blockId = decorator[1];\n          const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n          if (!linkedBlock) {\n            console.log('\"p\" missing block', blockId);\n            return null;\n          }\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n            className: \"notion-link\",\n            href: mapPageUrl(blockId)\n          }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n            block: linkedBlock\n          }));\n        }\n        case \"\\u2023\": {\n          const linkType = decorator[1][0];\n          const id = decorator[1][1];\n          switch (linkType) {\n            case \"u\": {\n              const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;\n              if (!user) {\n                console.log('\"\\u2023\" missing user', id);\n                return null;\n              }\n              const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n              return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n                className: \"notion-user\",\n                src: mapImageUrl(user.profile_photo, block),\n                alt: name\n              });\n            }\n            default: {\n              const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;\n              if (!linkedBlock) {\n                console.log('\"\\u2023\" missing block', linkType, id);\n                return null;\n              }\n              return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadProps(__spreadValues({\n                className: \"notion-link\",\n                href: mapPageUrl(id)\n              }, linkProps), {\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n                block: linkedBlock\n              }));\n            }\n          }\n        }\n        case \"h\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: `notion-${decorator[1]}`\n          }, element);\n        case \"c\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", {\n            className: \"notion-inline-code\"\n          }, element);\n        case \"b\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"b\", null, element);\n        case \"i\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"em\", null, element);\n        case \"s\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"s\", null, element);\n        case \"_\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"notion-inline-underscore\"\n          }, element);\n        case \"e\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Equation, {\n            math: decorator[1],\n            inline: true\n          });\n        case \"m\":\n          return element;\n        case \"a\": {\n          const v = decorator[1];\n          const pathname = v.substr(1);\n          const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(pathname, { uuid: true });\n          if ((v[0] === \"/\" || v.includes(rootDomain)) && id) {\n            const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;\n            return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadValues({\n              className: \"notion-link\",\n              href\n            }, linkProps), element);\n          } else {\n            return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, __spreadValues({\n              className: \"notion-link\",\n              href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]\n            }, linkProps), element);\n          }\n        }\n        case \"d\": {\n          const v = decorator[1];\n          const type = v == null ? void 0 : v.type;\n          if (type === \"date\") {\n            const startDate = v.start_date;\n            return (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(startDate);\n          } else if (type === \"daterange\") {\n            const startDate = v.start_date;\n            const endDate = v.end_date;\n            return `${(0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(startDate)} \\u2192 ${(0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(endDate)}`;\n          } else {\n            return element;\n          }\n        }\n        case \"u\": {\n          const userId = decorator[1];\n          const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;\n          if (!user) {\n            console.log(\"missing user\", userId);\n            return null;\n          }\n          const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n            className: \"notion-user\",\n            src: mapImageUrl(user.profile_photo, block),\n            alt: name\n          });\n        }\n        case \"eoi\": {\n          const blockId = decorator[1];\n          const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EOI, {\n            block: externalObjectInstance,\n            inline: true\n          });\n        }\n        default:\n          if (true) {\n            console.log(\"unsupported text format\", decorator);\n          }\n          return element;\n      }\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, text));\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      key: index\n    }, formatted);\n  }));\n};\n\n// src/components/header.tsx\n\n\n\n\n// src/icons/search-icon.tsx\n\nvar SearchIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    className: cs(\"notion-icon\", className),\n    viewBox: \"0 0 17 17\"\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z\"\n  }));\n};\n\n// src/components/search-dialog.tsx\nvar import_lodash = __toESM(require_lodash(), 1);\n\n\n\n// src/icons/clear-icon.tsx\n\nvar ClearIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className: cs(\"notion-icon\", className)\n  }, rest), {\n    viewBox: \"0 0 30 30\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z\"\n  }));\n};\n\n// src/icons/loading-icon.tsx\n\nvar LoadingIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className: cs(\"notion-icon\", className)\n  }, rest), {\n    viewBox: \"0 0 24 24\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"linearGradient\", {\n    x1: \"28.1542969%\",\n    y1: \"63.7402344%\",\n    x2: \"74.6289062%\",\n    y2: \"17.7832031%\",\n    id: \"linearGradient-1\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"stop\", {\n    stopColor: \"rgba(164, 164, 164, 1)\",\n    offset: \"0%\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"stop\", {\n    stopColor: \"rgba(164, 164, 164, 0)\",\n    stopOpacity: \"0\",\n    offset: \"100%\"\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    id: \"Page-1\",\n    stroke: \"none\",\n    strokeWidth: \"1\",\n    fill: \"none\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(-236.000000, -286.000000)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(238.000000, 286.000000)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"circle\", {\n    id: \"Oval-2\",\n    stroke: \"url(#linearGradient-1)\",\n    strokeWidth: \"4\",\n    cx: \"10\",\n    cy: \"12\",\n    r: \"10\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10,2 C4.4771525,2 0,6.4771525 0,12\",\n    id: \"Oval-2\",\n    stroke: \"rgba(164, 164, 164, 1)\",\n    strokeWidth: \"4\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n    id: \"Rectangle-1\",\n    fill: \"rgba(164, 164, 164, 1)\",\n    x: \"8\",\n    y: \"0\",\n    width: \"4\",\n    height: \"4\",\n    rx: \"8\"\n  })))));\n};\n\n// src/components/search-dialog.tsx\nvar SearchDialog = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      query: \"\",\n      searchResult: null,\n      searchError: null\n    };\n    this._onAfterOpen = () => {\n      if (this._inputRef.current) {\n        this._inputRef.current.focus();\n      }\n    };\n    this._onChangeQuery = (e) => {\n      const query = e.target.value;\n      this.setState({ query });\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      } else {\n        this._search();\n      }\n    };\n    this._onClearQuery = () => {\n      this._onChangeQuery({ target: { value: \"\" } });\n    };\n    this._warmupSearch = () => __async(this, null, function* () {\n      const { searchNotion, rootBlockId } = this.props;\n      yield searchNotion({\n        query: \"\",\n        ancestorId: rootBlockId\n      });\n    });\n    this._searchImpl = () => __async(this, null, function* () {\n      const { searchNotion, rootBlockId } = this.props;\n      const { query } = this.state;\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      }\n      this.setState({ isLoading: true });\n      const result = yield searchNotion({\n        query,\n        ancestorId: rootBlockId\n      });\n      console.log(\"search\", query, result);\n      let searchResult = null;\n      let searchError = null;\n      if (result.error || result.errorId) {\n        searchError = result;\n      } else {\n        searchResult = __spreadValues({}, result);\n        const results = searchResult.results.map((result2) => {\n          var _a, _b;\n          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;\n          if (!block)\n            return;\n          const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockTitle)(block, searchResult.recordMap);\n          if (!title) {\n            return;\n          }\n          result2.title = title;\n          result2.block = block;\n          result2.recordMap = searchResult.recordMap;\n          result2.page = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockParentPage)(block, searchResult.recordMap, {\n            inclusive: true\n          }) || block;\n          if (!result2.page.id) {\n            return;\n          }\n          if ((_b = result2.highlight) == null ? void 0 : _b.text) {\n            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, \"<b>\").replace(/<\\/gzkNfoUU>/gi, \"</b>\");\n          }\n          return result2;\n        }).filter(Boolean);\n        const searchResultsMap = results.reduce((map, result2) => __spreadProps(__spreadValues({}, map), {\n          [result2.page.id]: result2\n        }), {});\n        searchResult.results = Object.values(searchResultsMap);\n      }\n      if (this.state.query === query) {\n        this.setState({ isLoading: false, searchResult, searchError });\n      }\n    });\n    this._inputRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  }\n  componentDidMount() {\n    this._search = (0, import_lodash.default)(this._searchImpl.bind(this), 1e3);\n    this._warmupSearch();\n  }\n  render() {\n    const { isOpen, onClose } = this.props;\n    const { isLoading, query, searchResult, searchError } = this.state;\n    const hasQuery = !!query.trim();\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextConsumer, null, (ctx2) => {\n      const { components, defaultPageIcon, mapPageUrl } = ctx2;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Modal, {\n        isOpen,\n        contentLabel: \"Search\",\n        className: \"notion-search\",\n        overlayClassName: \"notion-search-overlay\",\n        onRequestClose: onClose,\n        onAfterOpen: this._onAfterOpen\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"quickFindMenu\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"searchBar\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"inlineIcon\"\n      }, isLoading ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingIcon, {\n        className: \"loadingIcon\"\n      }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchIcon, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n        className: \"searchInput\",\n        placeholder: \"Search\",\n        value: query,\n        ref: this._inputRef,\n        onChange: this._onChangeQuery\n      }), query && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        role: \"button\",\n        className: \"clearButton\",\n        onClick: this._onClearQuery\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClearIcon, {\n        className: \"clearIcon\"\n      }))), hasQuery && searchResult && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, searchResult.results.length ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {\n        recordMap: searchResult.recordMap\n      }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"resultsPane\"\n      }, searchResult.results.map((result) => {\n        var _a;\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n          key: result.id,\n          className: cs(\"result\", \"notion-page-link\"),\n          href: mapPageUrl(result.page.id, searchResult.recordMap)\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n          block: result.page,\n          defaultIcon: defaultPageIcon\n        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"notion-search-result-highlight\",\n          dangerouslySetInnerHTML: {\n            __html: result.highlight.html\n          }\n        }));\n      })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"footer\", {\n        className: \"resultsFooter\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"resultsCount\"\n      }, searchResult.total), searchResult.total === 1 ? \" result\" : \" results\"))) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsPane\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResults\"\n      }, \"No results\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsDetail\"\n      }, \"Try different search terms\"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsPane\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResults\"\n      }, \"Search error\"))));\n    });\n  }\n};\n\n// src/components/header.tsx\nvar Header = ({ block }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"header\", {\n    className: \"notion-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-nav-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Breadcrumbs, {\n    block\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Search, {\n    block\n  })));\n};\nvar Breadcrumbs = ({ block, rootOnly = false }) => {\n  const { recordMap, mapPageUrl, components } = useNotionContext();\n  const breadcrumbs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const breadcrumbs2 = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getPageBreadcrumbs)(recordMap, block.id);\n    if (rootOnly) {\n      return [breadcrumbs2[0]].filter(Boolean);\n    }\n    return breadcrumbs2;\n  }, [recordMap, block.id, rootOnly]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"breadcrumbs\",\n    key: \"breadcrumbs\"\n  }, breadcrumbs.map((breadcrumb, index) => {\n    if (!breadcrumb) {\n      return null;\n    }\n    const pageLinkProps = {};\n    const componentMap = {\n      pageLink: components.PageLink\n    };\n    if (breadcrumb.active) {\n      componentMap.pageLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, props));\n    } else {\n      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      key: breadcrumb.pageId\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(componentMap.pageLink, __spreadValues({\n      className: cs(\"breadcrumb\", breadcrumb.active && \"active\")\n    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n      className: \"icon\",\n      block: breadcrumb.block\n    }), breadcrumb.title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"title\"\n    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"spacer\"\n    }, \"/\"));\n  }));\n};\nvar Search = ({ block, search, title = \"Search\" }) => {\n  const { searchNotion, rootPageId } = useNotionContext();\n  const onSearchNotion = search || searchNotion;\n  const [isSearchOpen, setIsSearchOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const onOpenSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(true);\n  }, []);\n  const onCloseSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(false);\n  }, []);\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_7__.useHotkeys)(\"cmd+p\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_7__.useHotkeys)(\"cmd+k\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  const hasSearch = !!onSearchNotion;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, hasSearch && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    role: \"button\",\n    className: cs(\"breadcrumb\", \"button\", \"notion-search-button\"),\n    onClick: onOpenSearch\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchIcon, {\n    className: \"searchIcon\"\n  }), title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"title\"\n  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchDialog, {\n    isOpen: isSearchOpen,\n    rootBlockId: rootPageId || (block == null ? void 0 : block.id),\n    onClose: onCloseSearch,\n    searchNotion: onSearchNotion\n  }));\n};\n\n// src/components/asset-wrapper.tsx\n\nvar urlStyle = { width: \"100%\" };\nvar AssetWrapper = ({ blockId, block }) => {\n  var _a, _b, _c, _d, _e, _f;\n  const value = block;\n  const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();\n  let isURL = false;\n  if (block.type === \"image\") {\n    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];\n    if (caption) {\n      const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(caption, { uuid: true });\n      const isPage = caption.charAt(0) === \"/\" && id;\n      if (isPage || isValidURL(caption)) {\n        isURL = true;\n      }\n    }\n  }\n  const figure = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"figure\", {\n    className: cs(\"notion-asset-wrapper\", `notion-asset-wrapper-${block.type}`, ((_d = value.format) == null ? void 0 : _d.block_full_width) && \"notion-asset-wrapper-full\", blockId)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Asset, {\n    block: value,\n    zoomable: zoom && !isURL\n  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"figcaption\", {\n    className: \"notion-asset-caption\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n    value: value.properties.caption,\n    block\n  }))));\n  if (isURL) {\n    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];\n    const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(caption, { uuid: true });\n    const isPage = caption.charAt(0) === \"/\" && id;\n    const captionHostname = extractHostname(caption);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n      style: urlStyle,\n      href: isPage ? mapPageUrl(id) : caption,\n      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith(\"/\") ? \"blank_\" : null\n    }, figure);\n  }\n  return figure;\n};\nfunction isValidURL(str) {\n  const pattern = new RegExp(\"^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$\", \"i\");\n  return !!pattern.test(str);\n}\nfunction extractHostname(url) {\n  try {\n    const hostname = new URL(url).hostname;\n    return hostname;\n  } catch (err) {\n    return \"\";\n  }\n}\n\n// src/components/checkbox.tsx\n\n\n// src/icons/check.tsx\n\nfunction SvgCheck(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z\"\n  }));\n}\nvar check_default = SvgCheck;\n\n// src/components/checkbox.tsx\nvar Checkbox = ({ isChecked }) => {\n  let content = null;\n  if (isChecked) {\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-checked\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(check_default, null));\n  } else {\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-unchecked\"\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-property notion-property-checkbox\"\n  }, content);\n};\n\n// src/context.tsx\nvar DefaultLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, props));\nvar DefaultLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultLink);\nvar DefaultPageLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({}, props));\nvar DefaultPageLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultPageLink);\nvar DefaultEmbed = AssetWrapper;\nvar DefaultHeader = Header;\nvar dummyLink = (_a) => {\n  var _b = _a, { href, rel, target, title } = _b, rest = __objRest(_b, [\"href\", \"rel\", \"target\", \"title\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({}, rest));\n};\nvar dummyComponent = (name) => () => {\n  console.warn(`Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`);\n  return null;\n};\nvar dummyOverrideFn = (_, defaultValueFn) => defaultValueFn();\nvar defaultComponents = {\n  Image: null,\n  Link: DefaultLinkMemo,\n  PageLink: DefaultPageLinkMemo,\n  Checkbox,\n  Callout: void 0,\n  Code: dummyComponent(\"Code\"),\n  Equation: dummyComponent(\"Equation\"),\n  Collection: dummyComponent(\"Collection\"),\n  Property: void 0,\n  propertyTextValue: dummyOverrideFn,\n  propertySelectValue: dummyOverrideFn,\n  propertyRelationValue: dummyOverrideFn,\n  propertyFormulaValue: dummyOverrideFn,\n  propertyTitleValue: dummyOverrideFn,\n  propertyPersonValue: dummyOverrideFn,\n  propertyFileValue: dummyOverrideFn,\n  propertyCheckboxValue: dummyOverrideFn,\n  propertyUrlValue: dummyOverrideFn,\n  propertyEmailValue: dummyOverrideFn,\n  propertyPhoneNumberValue: dummyOverrideFn,\n  propertyNumberValue: dummyOverrideFn,\n  propertyLastEditedTimeValue: dummyOverrideFn,\n  propertyCreatedTimeValue: dummyOverrideFn,\n  propertyDateValue: dummyOverrideFn,\n  Pdf: dummyComponent(\"Pdf\"),\n  Tweet: dummyComponent(\"Tweet\"),\n  Modal: dummyComponent(\"Modal\"),\n  Header: DefaultHeader,\n  Embed: DefaultEmbed\n};\nvar defaultNotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n  components: defaultComponents,\n  mapPageUrl: defaultMapPageUrl(),\n  mapImageUrl: defaultMapImageUrl,\n  searchNotion: null,\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n  linkTableTitleProperties: true,\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n  zoom: null\n};\nvar ctx = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultNotionContext);\nvar NotionContextProvider = (_a) => {\n  var _b = _a, {\n    components: themeComponents = {},\n    children,\n    mapPageUrl,\n    mapImageUrl,\n    rootPageId\n  } = _b, rest = __objRest(_b, [\n    \"components\",\n    \"children\",\n    \"mapPageUrl\",\n    \"mapImageUrl\",\n    \"rootPageId\"\n  ]);\n  for (const key of Object.keys(rest)) {\n    if (rest[key] === void 0) {\n      delete rest[key];\n    }\n  }\n  const wrappedThemeComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadValues({}, themeComponents), [themeComponents]);\n  if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage);\n  }\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink);\n  }\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!wrappedThemeComponents[key]) {\n      delete wrappedThemeComponents[key];\n    }\n  }\n  const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {\n    rootPageId,\n    mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),\n    mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,\n    components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)\n  }), [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ctx.Provider, {\n    value\n  }, children);\n};\nvar NotionContextConsumer = ctx.Consumer;\nvar useNotionContext = () => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ctx);\n};\n\n// src/third-party/eval-formula.ts\nvar import_format = __toESM(require_format(), 1);\nvar import_getDate = __toESM(require_getDate(), 1);\nvar import_getDay = __toESM(require_getDay(), 1);\nvar import_getHours = __toESM(require_getHours(), 1);\nvar import_getMinutes = __toESM(require_getMinutes(), 1);\nvar import_getMonth = __toESM(require_getMonth(), 1);\nvar import_getYear = __toESM(require_getYear(), 1);\nvar import_add = __toESM(require_add(), 1);\nvar import_sub = __toESM(require_sub(), 1);\nvar import_intervalToDuration = __toESM(require_intervalToDuration(), 1);\n\nfunction evalFormula(formula, context) {\n  const _a = context, { endDate } = _a, ctx2 = __objRest(_a, [\"endDate\"]);\n  switch (formula == null ? void 0 : formula.type) {\n    case \"symbol\":\n      return formula.name === \"true\";\n    case \"constant\": {\n      const value = formula.value;\n      switch (formula.result_type) {\n        case \"text\":\n          return value;\n        case \"number\":\n          return parseFloat(value);\n        default:\n          return value;\n      }\n    }\n    case \"property\": {\n      const value = ctx2.properties[formula.id];\n      const text = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)(value);\n      switch (formula.result_type) {\n        case \"text\":\n          return text;\n        case \"number\":\n          return parseFloat(text);\n        case \"boolean\":\n          if (typeof text === \"string\") {\n            return text === \"true\";\n          } else {\n            return !!text;\n          }\n        case \"date\": {\n          const v = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getDateValue)(value);\n          if (v) {\n            if (endDate && v.end_date) {\n              const date = new Date(v.end_date);\n              return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n            } else {\n              const date = new Date(v.start_date);\n              return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n            }\n          } else {\n            return new Date(text);\n          }\n        }\n        default:\n          return text;\n      }\n    }\n    case \"operator\":\n    case \"function\":\n      return evalFunctionFormula(formula, ctx2);\n    default:\n      throw new Error(`invalid or unsupported formula \"${formula == null ? void 0 : formula.type}`);\n  }\n}\nfunction evalFunctionFormula(formula, ctx2) {\n  const args = formula == null ? void 0 : formula.args;\n  switch (formula.name) {\n    case \"and\":\n      return evalFormula(args[0], ctx2) && evalFormula(args[1], ctx2);\n    case \"empty\":\n      return !evalFormula(args[0], ctx2);\n    case \"equal\":\n      return evalFormula(args[0], ctx2) == evalFormula(args[1], ctx2);\n    case \"if\":\n      return evalFormula(args[0], ctx2) ? evalFormula(args[1], ctx2) : evalFormula(args[2], ctx2);\n    case \"larger\":\n      return evalFormula(args[0], ctx2) > evalFormula(args[1], ctx2);\n    case \"largerEq\":\n      return evalFormula(args[0], ctx2) >= evalFormula(args[1], ctx2);\n    case \"not\":\n      return !evalFormula(args[0], ctx2);\n    case \"or\":\n      return evalFormula(args[0], ctx2) || evalFormula(args[1], ctx2);\n    case \"smaller\":\n      return evalFormula(args[0], ctx2) < evalFormula(args[1], ctx2);\n    case \"smallerEq\":\n      return evalFormula(args[0], ctx2) <= evalFormula(args[1], ctx2);\n    case \"unequal\":\n      return evalFormula(args[0], ctx2) != evalFormula(args[1], ctx2);\n    case \"abs\":\n      return Math.abs(evalFormula(args[0], ctx2));\n    case \"add\": {\n      const v0 = evalFormula(args[0], ctx2);\n      const v1 = evalFormula(args[1], ctx2);\n      if (typeof v0 === \"number\") {\n        return v0 + +v1;\n      } else if (typeof v0 === \"string\") {\n        return v0 + `${v1}`;\n      } else {\n        return v0;\n      }\n    }\n    case \"cbrt\":\n      return Math.cbrt(evalFormula(args[0], ctx2));\n    case \"ceil\":\n      return Math.ceil(evalFormula(args[0], ctx2));\n    case \"divide\":\n      return evalFormula(args[0], ctx2) / evalFormula(args[1], ctx2);\n    case \"exp\":\n      return Math.exp(evalFormula(args[0], ctx2));\n    case \"floor\":\n      return Math.floor(evalFormula(args[0], ctx2));\n    case \"ln\":\n      return Math.log(evalFormula(args[0], ctx2));\n    case \"log10\":\n      return Math.log10(evalFormula(args[0], ctx2));\n    case \"log2\":\n      return Math.log2(evalFormula(args[0], ctx2));\n    case \"max\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce((acc, value) => Math.max(acc, value), Number.NEGATIVE_INFINITY);\n    }\n    case \"min\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce((acc, value) => Math.min(acc, value), Number.POSITIVE_INFINITY);\n    }\n    case \"mod\":\n      return evalFormula(args[0], ctx2) % evalFormula(args[1], ctx2);\n    case \"multiply\":\n      return evalFormula(args[0], ctx2) * evalFormula(args[1], ctx2);\n    case \"pow\":\n      return Math.pow(evalFormula(args[0], ctx2), evalFormula(args[1], ctx2));\n    case \"round\":\n      return Math.round(evalFormula(args[0], ctx2));\n    case \"sign\":\n      return Math.sign(evalFormula(args[0], ctx2));\n    case \"sqrt\":\n      return Math.sqrt(evalFormula(args[0], ctx2));\n    case \"subtract\":\n      return evalFormula(args[0], ctx2) - evalFormula(args[1], ctx2);\n    case \"toNumber\":\n      return parseFloat(evalFormula(args[0], ctx2));\n    case \"unaryMinus\":\n      return evalFormula(args[0], ctx2) * -1;\n    case \"unaryPlus\":\n      return parseFloat(evalFormula(args[0], ctx2));\n    case \"concat\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.join(\"\");\n    }\n    case \"contains\":\n      return evalFormula(args[0], ctx2).includes(evalFormula(args[1], ctx2));\n    case \"format\": {\n      const value = evalFormula(args[0], ctx2);\n      switch (typeof value) {\n        case \"string\":\n          return value;\n        case \"object\":\n          if (value instanceof Date) {\n            return (0, import_format.default)(value, \"MMM d, YYY\");\n          } else {\n            return `${value}`;\n          }\n        case \"number\":\n        default:\n          return `${value}`;\n      }\n    }\n    case \"join\": {\n      const [delimiterArg, ...restArgs] = args;\n      const delimiter = evalFormula(delimiterArg, ctx2);\n      const values = restArgs.map((arg) => evalFormula(arg, ctx2));\n      return values.join(delimiter);\n    }\n    case \"length\":\n      return evalFormula(args[0], ctx2).length;\n    case \"replace\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replace(new RegExp(regex), replacement);\n    }\n    case \"replaceAll\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replace(new RegExp(regex, \"g\"), replacement);\n    }\n    case \"slice\": {\n      const value = evalFormula(args[0], ctx2);\n      const beginIndex = evalFormula(args[1], ctx2);\n      const endIndex = args[2] ? evalFormula(args[2], ctx2) : value.length;\n      return value.slice(beginIndex, endIndex);\n    }\n    case \"test\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      return new RegExp(regex).test(value);\n    }\n    case \"date\":\n      return (0, import_getDate.default)(evalFormula(args[0], ctx2));\n    case \"dateAdd\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return (0, import_add.default)(date, { [unit]: number });\n    }\n    case \"dateBetween\": {\n      const date1 = evalFormula(args[0], ctx2);\n      const date2 = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return (0, import_intervalToDuration.default)({\n        start: date2,\n        end: date1\n      })[unit];\n    }\n    case \"dateSubtract\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return (0, import_sub.default)(date, { [unit]: number });\n    }\n    case \"day\":\n      return (0, import_getDay.default)(evalFormula(args[0], ctx2));\n    case \"end\":\n      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: true }));\n    case \"formatDate\": {\n      const date = evalFormula(args[0], ctx2);\n      const formatValue = evalFormula(args[1], ctx2).replace(\"dddd\", \"eeee\");\n      return (0, import_format.default)(date, formatValue);\n    }\n    case \"fromTimestamp\":\n      return new Date(evalFormula(args[0], ctx2));\n    case \"hour\":\n      return (0, import_getHours.default)(evalFormula(args[0], ctx2));\n    case \"minute\":\n      return (0, import_getMinutes.default)(evalFormula(args[0], ctx2));\n    case \"month\":\n      return (0, import_getMonth.default)(evalFormula(args[0], ctx2));\n    case \"now\":\n      return new Date();\n    case \"start\":\n      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: false }));\n    case \"timestamp\":\n      return evalFormula(args[0], ctx2).getTime();\n    case \"year\":\n      return (0, import_getYear.default)(evalFormula(args[0], ctx2));\n    default:\n      throw new Error(`invalid or unsupported function formula \"${formula == null ? void 0 : formula.type}`);\n  }\n}\n\n// src/third-party/property.tsx\nvar Property = (props) => {\n  const { components } = useNotionContext();\n  if (components.Property) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Property, __spreadValues({}, props));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PropertyImplMemo, __spreadValues({}, props));\n  }\n};\nvar PropertyImpl = (props) => {\n  const { components, mapImageUrl, mapPageUrl } = useNotionContext();\n  const {\n    schema,\n    data,\n    block,\n    collection,\n    inline = false,\n    linkToTitlePage = true\n  } = props;\n  const renderTextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function TextProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderDateValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function DateProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderRelationValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function RelationProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderFormulaValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function FormulaProperty() {\n    let content2;\n    try {\n      let content3 = evalFormula(schema.formula, {\n        schema: collection == null ? void 0 : collection.schema,\n        properties: block == null ? void 0 : block.properties\n      });\n      if (isNaN(content3)) {\n      }\n      if (content3 instanceof Date) {\n        content3 = (0, import_format2.default)(content3, \"MMM d, YYY hh:mm aa\");\n      }\n    } catch (err) {\n      content2 = null;\n    }\n    return content2;\n  }, [block == null ? void 0 : block.properties, collection == null ? void 0 : collection.schema, schema]);\n  const renderTitleValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function FormulaTitle() {\n    if (block && linkToTitlePage) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n        className: cs(\"notion-page-link\"),\n        href: mapPageUrl(block.id)\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n        block\n      }));\n    } else {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n        value: data,\n        block\n      });\n    }\n  }, [block, components, data, linkToTitlePage, mapPageUrl]);\n  const renderPersonValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function PersonProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderFileValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function FileProperty() {\n    const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n    return files.map((file, i) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, {\n      key: i,\n      className: \"notion-property-file\",\n      href: mapImageUrl(file[2], block),\n      target: \"_blank\",\n      rel: \"noreferrer noopener\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n      alt: file[0],\n      src: mapImageUrl(file[2], block),\n      loading: \"lazy\"\n    })));\n  }, [block, components, data, mapImageUrl]);\n  const renderCheckboxValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function CheckboxProperty() {\n    const isChecked = data && data[0][0] === \"Yes\";\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-container\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Checkbox, {\n      isChecked,\n      blockId: void 0\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"notion-property-checkbox-text\"\n    }, schema.name));\n  }, [data, schema]);\n  const renderUrlValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function UrlProperty() {\n    const d = JSON.parse(JSON.stringify(data));\n    if (inline) {\n      try {\n        const url = new URL(d[0][0]);\n        d[0][0] = url.hostname.replace(/^www\\./, \"\");\n      } catch (err) {\n      }\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: d,\n      block,\n      inline,\n      linkProps: {\n        target: \"_blank\",\n        rel: \"noreferrer noopener\"\n      }\n    });\n  }, [block, data, inline]);\n  const renderEmailValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function EmailProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      linkProtocol: \"mailto\",\n      block\n    });\n  }, [block, data]);\n  const renderPhoneNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function PhoneNumberProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      linkProtocol: \"tel\",\n      block\n    });\n  }, [block, data]);\n  const renderNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function NumberProperty() {\n    const value = parseFloat(data[0][0] || \"0\");\n    let output = \"\";\n    if (isNaN(value)) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n        value: data,\n        block\n      });\n    } else {\n      switch (schema.number_format) {\n        case \"number_with_commas\":\n          output = (0, import_format_number.default)()(value);\n          break;\n        case \"percent\":\n          output = (0, import_format_number.default)({ suffix: \"%\" })(value * 100);\n          break;\n        case \"dollar\":\n          output = (0, import_format_number.default)({ prefix: \"$\", round: 2, padRight: 2 })(value);\n          break;\n        case \"euro\":\n          output = (0, import_format_number.default)({ prefix: \"\\u20AC\", round: 2, padRight: 2 })(value);\n          break;\n        case \"pound\":\n          output = (0, import_format_number.default)({ prefix: \"\\xA3\", round: 2, padRight: 2 })(value);\n          break;\n        case \"yen\":\n          output = (0, import_format_number.default)({ prefix: \"\\xA5\", round: 0 })(value);\n          break;\n        case \"rupee\":\n          output = (0, import_format_number.default)({ prefix: \"\\u20B9\", round: 2, padRight: 2 })(value);\n          break;\n        case \"won\":\n          output = (0, import_format_number.default)({ prefix: \"\\u20A9\", round: 0 })(value);\n          break;\n        case \"yuan\":\n          output = (0, import_format_number.default)({ prefix: \"CN\\xA5\", round: 2, padRight: 2 })(value);\n          break;\n        default:\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n            value: data,\n            block\n          });\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n        value: [[output]],\n        block\n      });\n    }\n  }, [block, data, schema]);\n  const renderCreatedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function CreatedTimeProperty() {\n    return (0, import_format2.default)(new Date(block == null ? void 0 : block.created_time), \"MMM d, YYY hh:mm aa\");\n  }, [block == null ? void 0 : block.created_time]);\n  const renderLastEditedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function LastEditedTimeProperty() {\n    return (0, import_format2.default)(new Date(block == null ? void 0 : block.last_edited_time), \"MMM d, YYY hh:mm aa\");\n  }, [block == null ? void 0 : block.last_edited_time]);\n  if (!schema) {\n    return null;\n  }\n  let content = null;\n  if (data || schema.type === \"checkbox\" || schema.type === \"title\" || schema.type === \"formula\" || schema.type === \"created_by\" || schema.type === \"last_edited_by\" || schema.type === \"created_time\" || schema.type === \"last_edited_time\") {\n    switch (schema.type) {\n      case \"relation\":\n        content = components.propertyRelationValue(props, renderRelationValue);\n        break;\n      case \"formula\":\n        content = components.propertyFormulaValue(props, renderFormulaValue);\n        break;\n      case \"title\":\n        content = components.propertyTitleValue(props, renderTitleValue);\n        break;\n      case \"select\":\n      case \"multi_select\": {\n        const values = (data[0][0] || \"\").split(\",\");\n        content = values.map((value, index) => {\n          var _a;\n          const option = (_a = schema.options) == null ? void 0 : _a.find((option2) => value === option2.value);\n          const color = option == null ? void 0 : option.color;\n          return components.propertySelectValue(__spreadProps(__spreadValues({}, props), {\n            key: index,\n            value,\n            option,\n            color\n          }), () => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            key: index,\n            className: cs(`notion-property-${schema.type}-item`, color && `notion-item-${color}`)\n          }, value));\n        });\n        break;\n      }\n      case \"person\":\n        content = components.propertyPersonValue(props, renderPersonValue);\n        break;\n      case \"file\":\n        content = components.propertyFileValue(props, renderFileValue);\n        break;\n      case \"checkbox\":\n        content = components.propertyCheckboxValue(props, renderCheckboxValue);\n        break;\n      case \"url\":\n        content = components.propertyUrlValue(props, renderUrlValue);\n        break;\n      case \"email\":\n        content = components.propertyEmailValue(props, renderEmailValue);\n        break;\n      case \"phone_number\":\n        content = components.propertyPhoneNumberValue(props, renderPhoneNumberValue);\n        break;\n      case \"number\":\n        content = components.propertyNumberValue(props, renderNumberValue);\n        break;\n      case \"created_time\":\n        content = components.propertyCreatedTimeValue(props, renderCreatedTimeValue);\n        break;\n      case \"last_edited_time\":\n        content = components.propertyLastEditedTimeValue(props, renderLastEditedTimeValue);\n        break;\n      case \"created_by\":\n        break;\n      case \"last_edited_by\":\n        break;\n      case \"text\":\n        content = components.propertyTextValue(props, renderTextValue);\n        break;\n      case \"date\":\n        content = components.propertyDateValue(props, renderDateValue);\n        break;\n      default:\n        content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n          value: data,\n          block\n        });\n        break;\n    }\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: `notion-property notion-property-${schema.type}`\n  }, content);\n};\nvar PropertyImplMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(PropertyImpl);\n\n// src/third-party/collection-row.tsx\nvar CollectionRow = ({ block, pageHeader = false, className }) => {\n  var _a, _b, _c, _d;\n  const { recordMap } = useNotionContext();\n  const collectionId = block.parent_id;\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const schemas = collection == null ? void 0 : collection.schema;\n  if (!collection || !schemas) {\n    return null;\n  }\n  let propertyIds = Object.keys(schemas).filter((id) => id !== \"title\");\n  if ((_b = collection.format) == null ? void 0 : _b.property_visibility) {\n    propertyIds = propertyIds.filter((id) => {\n      var _a2;\n      return ((_a2 = collection.format.property_visibility.find(({ property }) => property === id)) == null ? void 0 : _a2.visibility) !== \"hide\";\n    });\n  }\n  if ((_c = collection.format) == null ? void 0 : _c.collection_page_properties) {\n    const idToIndex = (_d = collection.format) == null ? void 0 : _d.collection_page_properties.reduce((acc, p, i) => __spreadProps(__spreadValues({}, acc), {\n      [p.property]: i\n    }), {});\n    propertyIds.sort((a, b) => idToIndex[a] - idToIndex[b]);\n  } else {\n    propertyIds.sort((a, b) => schemas[a].name.localeCompare(schemas[b].name));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-collection-row\", className)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-row-body\"\n  }, propertyIds.map((propertyId) => {\n    var _a2;\n    const schema = schemas[propertyId];\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-row-property\",\n      key: propertyId\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionColumnTitle, {\n      schema\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-row-value\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],\n      propertyId,\n      block,\n      collection,\n      pageHeader\n    })));\n  })));\n};\n\n// src/icons/collection-view-table.tsx\n\nfunction SvgCollectionViewTable(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z\"\n  }));\n}\nvar collection_view_table_default = SvgCollectionViewTable;\n\n// src/icons/collection-view-board.tsx\n\nfunction SvgCollectionViewBoard(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z\"\n  }));\n}\nvar collection_view_board_default = SvgCollectionViewBoard;\n\n// src/icons/collection-view-gallery.tsx\n\nfunction SvgCollectionViewGallery(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z\"\n  }));\n}\nvar collection_view_gallery_default = SvgCollectionViewGallery;\n\n// src/icons/collection-view-list.tsx\n\nfunction SvgCollectionViewList(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z\"\n  }));\n}\nvar collection_view_list_default = SvgCollectionViewList;\n\n// src/icons/collection-view-calendar.tsx\n\nfunction SvgCollectionViewCalendar(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z\"\n  }));\n}\nvar collection_view_calendar_default = SvgCollectionViewCalendar;\n\n// src/icons/collection-view-icon.tsx\nvar iconMap2 = {\n  table: collection_view_table_default,\n  board: collection_view_board_default,\n  gallery: collection_view_gallery_default,\n  list: collection_view_list_default,\n  calendar: collection_view_calendar_default\n};\nvar CollectionViewIcon = (_a) => {\n  var _b = _a, {\n    type\n  } = _b, rest = __objRest(_b, [\n    \"type\"\n  ]);\n  const icon = iconMap2[type];\n  if (!icon) {\n    return null;\n  }\n  return icon(rest);\n};\n\n// src/icons/chevron-down-icon.tsx\n\nvar ChevronDownIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className\n  }, rest), {\n    viewBox: \"0 0 30 30\",\n    width: \"10\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"polygon\", {\n    points: \"15,17.4 4.8,7 2,9.8 15,23 28,9.8 25.2,7 \"\n  }));\n};\n\n// src/third-party/collection-view.tsx\n\n\n// src/third-party/collection-view-table.tsx\n\n\n// src/third-party/collection-group.tsx\n\nvar CollectionGroup = (_a) => {\n  var _b = _a, {\n    collectionViewComponent: CollectionViewComponent,\n    collection,\n    collectionGroup,\n    schema,\n    value,\n    hidden,\n    summaryProps,\n    detailsProps\n  } = _b, rest = __objRest(_b, [\n    \"collectionViewComponent\",\n    \"collection\",\n    \"collectionGroup\",\n    \"schema\",\n    \"value\",\n    \"hidden\",\n    \"summaryProps\",\n    \"detailsProps\"\n  ]);\n  if (hidden)\n    return null;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"details\", __spreadValues({\n    open: true,\n    className: \"notion-collection-group\"\n  }, detailsProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"summary\", __spreadValues({\n    className: \"notion-collection-group-title\"\n  }, summaryProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n    schema,\n    data: [[value]],\n    collection\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-board-th-count\"\n  }, collectionGroup == null ? void 0 : collectionGroup.total))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewComponent, __spreadValues({\n    collection,\n    collectionGroup\n  }, rest)));\n};\n\n// src/third-party/collection-utils.ts\nvar import_format3 = __toESM(require_format(), 1);\nfunction getCollectionGroups(collection, collectionView, collectionData, ...rest) {\n  var _a;\n  const elems = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_groups) || [];\n  return elems == null ? void 0 : elems.map(({ property, hidden, value: { value, type } }) => {\n    var _a2, _b;\n    const isUncategorizedValue = typeof value === \"undefined\";\n    const isDateValue = value == null ? void 0 : value.range;\n    const queryLabel = isUncategorizedValue ? \"uncategorized\" : isDateValue ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) || ((_b = value.range) == null ? void 0 : _b.end_date) : (value == null ? void 0 : value.value) || value;\n    const collectionGroup = collectionData[`results:${type}:${queryLabel}`];\n    let queryValue = !isUncategorizedValue && (isDateValue || (value == null ? void 0 : value.value) || value);\n    let schema = collection.schema[property];\n    if (type === \"checkbox\" && value) {\n      queryValue = \"Yes\";\n    }\n    if (isDateValue) {\n      schema = {\n        type: \"text\",\n        name: \"text\"\n      };\n      queryValue = (0, import_format3.default)(new Date(queryLabel), \"MMM d, YYY hh:mm aa\");\n    }\n    return __spreadValues({\n      collectionGroup,\n      schema,\n      value: queryValue || \"No description\",\n      hidden,\n      collection,\n      collectionView,\n      collectionData,\n      blockIds: collectionGroup == null ? void 0 : collectionGroup.blockIds\n    }, rest);\n  });\n}\n\n// src/third-party/collection-view-table.tsx\nvar defaultBlockIds = [];\nvar CollectionViewTable = ({\n  collection,\n  collectionView,\n  collectionData,\n  padding,\n  width\n}) => {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData, padding, width);\n    return collectionGroups.map((group, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key: index\n    }, group), {\n      collectionViewComponent: (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Table, __spreadProps(__spreadValues({}, props), {\n        padding,\n        width\n      })),\n      summaryProps: {\n        style: {\n          paddingLeft: padding,\n          paddingRight: padding\n        }\n      }\n    })));\n  }\n  const blockIds = ((_c = (_b = collectionData[\"collection_group_results\"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Table, {\n    blockIds,\n    collection,\n    collectionView,\n    padding,\n    width\n  });\n};\nfunction Table({ blockIds = [], collection, collectionView, width, padding }) {\n  var _a;\n  const { recordMap, linkTableTitleProperties } = useNotionContext();\n  const tableStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    width,\n    maxWidth: width\n  }), [width]);\n  const tableViewStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    paddingLeft: padding,\n    paddingRight: padding\n  }), [padding]);\n  let properties = [];\n  if ((_a = collectionView.format) == null ? void 0 : _a.table_properties) {\n    properties = collectionView.format.table_properties.filter((p) => p.visible && collection.schema[p.property]);\n  } else {\n    properties = [{ property: \"title\" }].concat(Object.keys(collection.schema).filter((p) => p !== \"title\").map((property) => ({ property })));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table\",\n    style: tableStyle\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-view\",\n    style: tableViewStyle\n  }, !!properties.length && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-header-inner\"\n  }, properties.map((p) => {\n    var _a2;\n    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n    const isTitle = p.property === \"title\";\n    const style = {};\n    if (p.width) {\n      style.width = p.width;\n    } else if (isTitle) {\n      style.width = 280;\n    } else {\n      style.width = 200;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-table-th\",\n      key: p.property\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-table-view-header-cell\",\n      style\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-table-view-header-cell-inner\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionColumnTitle, {\n      schema\n    }))));\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-header-placeholder\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-body\"\n  }, blockIds == null ? void 0 : blockIds.map((blockId) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-row\",\n    key: blockId\n  }, properties.map((p) => {\n    var _a2, _b, _c;\n    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n    const block = (_b = recordMap.block[blockId]) == null ? void 0 : _b.value;\n    const data = (_c = block == null ? void 0 : block.properties) == null ? void 0 : _c[p.property];\n    const isTitle = p.property === \"title\";\n    const style = {};\n    if (p.width) {\n      style.width = p.width;\n    } else if (isTitle) {\n      style.width = 280;\n    } else {\n      style.width = 200;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      key: p.property,\n      className: cs(\"notion-table-cell\", `notion-table-cell-${schema.type}`),\n      style\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data,\n      block,\n      collection,\n      linkToTitlePage: linkTableTitleProperties\n    }));\n  })))))));\n}\n\n// src/third-party/collection-view-gallery.tsx\n\n\n// src/third-party/collection-card.tsx\n\n\nvar CollectionCard = (_a) => {\n  var _b = _a, {\n    collection,\n    block,\n    cover,\n    coverSize,\n    coverAspect,\n    properties,\n    className\n  } = _b, rest = __objRest(_b, [\n    \"collection\",\n    \"block\",\n    \"cover\",\n    \"coverSize\",\n    \"coverAspect\",\n    \"properties\",\n    \"className\"\n  ]);\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;\n  const ctx2 = useNotionContext();\n  const { components, recordMap, mapPageUrl, mapImageUrl } = ctx2;\n  let coverContent = null;\n  const { page_cover_position = 0.5 } = block.format || {};\n  const coverPosition = (1 - page_cover_position) * 100;\n  if ((cover == null ? void 0 : cover.type) === \"page_content\") {\n    const contentBlockId = (_a2 = block.content) == null ? void 0 : _a2.find((blockId) => {\n      var _a3;\n      const block2 = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;\n      if ((block2 == null ? void 0 : block2.type) === \"image\") {\n        return true;\n      }\n    });\n    if (contentBlockId) {\n      const contentBlock = (_b2 = recordMap.block[contentBlockId]) == null ? void 0 : _b2.value;\n      const source = (_g = (_e = (_d = (_c = contentBlock.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]) != null ? _g : (_f = contentBlock.format) == null ? void 0 : _f.display_source;\n      if (source) {\n        const src = mapImageUrl(source, contentBlock);\n        const caption = (_j = (_i = (_h = contentBlock.properties) == null ? void 0 : _h.caption) == null ? void 0 : _i[0]) == null ? void 0 : _j[0];\n        coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n          src,\n          alt: caption || \"notion image\",\n          style: {\n            objectFit: coverAspect\n          }\n        });\n      }\n    }\n    if (!coverContent) {\n      coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"notion-collection-card-cover-empty\"\n      });\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"page_cover\") {\n    const { page_cover } = block.format || {};\n    if (page_cover) {\n      const coverPosition2 = (1 - page_cover_position) * 100;\n      coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n        src: mapImageUrl(page_cover, block),\n        alt: (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)((_k = block.properties) == null ? void 0 : _k.title),\n        style: {\n          objectFit: coverAspect,\n          objectPosition: `center ${coverPosition2}%`\n        }\n      });\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"property\") {\n    const { property } = cover;\n    const schema = collection.schema[property];\n    const data = (_l = block.properties) == null ? void 0 : _l[property];\n    if (schema && data) {\n      if (schema.type === \"file\") {\n        const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n        const file = files[0];\n        if (file) {\n          coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: `notion-property-${schema.type}`\n          }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n            alt: file[0],\n            src: mapImageUrl(file[2], block),\n            style: {\n              objectFit: coverAspect,\n              objectPosition: `center ${coverPosition}%`\n            }\n          }));\n        }\n      } else {\n        coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n          propertyId: property,\n          schema,\n          data\n        });\n      }\n    }\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {\n    components: __spreadProps(__spreadValues({}, ctx2.components), {\n      Link: dummyLink,\n      PageLink: dummyLink\n    })\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadValues({\n    className: cs(\"notion-collection-card\", `notion-collection-card-size-${coverSize}`, className),\n    href: mapPageUrl(block.id)\n  }, rest), (coverContent || (cover == null ? void 0 : cover.type) !== \"none\") && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-card-cover\"\n  }, coverContent), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-card-body\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-card-property\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n    schema: collection.schema.title,\n    data: (_m = block == null ? void 0 : block.properties) == null ? void 0 : _m.title,\n    block,\n    collection\n  })), properties == null ? void 0 : properties.filter((p) => p.visible && p.property !== \"title\" && collection.schema[p.property]).map((p) => {\n    if (!block.properties)\n      return null;\n    const schema = collection.schema[p.property];\n    const data = block.properties[p.property];\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-card-property\",\n      key: p.property\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data,\n      block,\n      collection,\n      inline: true\n    }));\n  }))));\n};\n\n// src/third-party/collection-view-gallery.tsx\nvar defaultBlockIds2 = [];\nvar CollectionViewGallery = ({\n  collection,\n  collectionView,\n  collectionData\n}) => {\n  var _a, _b, _c, _d, _e;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData);\n    return collectionGroups.map((group, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key: index\n    }, group), {\n      collectionViewComponent: Gallery\n    })));\n  }\n  const blockIds = ((_e = (_d = (_b = collectionData[\"collection_group_results\"]) == null ? void 0 : _b.blockIds) != null ? _d : (_c = collectionData[\"results:relation:uncategorized\"]) == null ? void 0 : _c.blockIds) != null ? _e : collectionData.blockIds) || defaultBlockIds2;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Gallery, {\n    collectionView,\n    collection,\n    blockIds\n  });\n};\nfunction Gallery({ blockIds, collectionView, collection }) {\n  const { recordMap } = useNotionContext();\n  const {\n    gallery_cover = { type: \"none\" },\n    gallery_cover_size = \"medium\",\n    gallery_cover_aspect = \"cover\"\n  } = collectionView.format || {};\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-gallery\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-gallery-view\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-gallery-grid\", `notion-gallery-grid-size-${gallery_cover_size}`)\n  }, blockIds == null ? void 0 : blockIds.map((blockId) => {\n    var _a, _b;\n    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n    if (!block)\n      return null;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionCard, {\n      collection,\n      block,\n      cover: gallery_cover,\n      coverSize: gallery_cover_size,\n      coverAspect: gallery_cover_aspect,\n      properties: (_b = collectionView.format) == null ? void 0 : _b.gallery_properties,\n      key: blockId\n    });\n  }))));\n}\n\n// src/third-party/collection-view-list.tsx\n\nvar defaultBlockIds3 = [];\nvar CollectionViewList = ({\n  collection,\n  collectionView,\n  collectionData\n}) => {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData);\n    return collectionGroups.map((group, key) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key\n    }, group), {\n      collectionViewComponent: List\n    })));\n  }\n  const blockIds = ((_c = (_b = collectionData[\"collection_group_results\"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds3;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(List, {\n    blockIds,\n    collection,\n    collectionView\n  });\n};\nfunction List({ blockIds, collection, collectionView }) {\n  const { components, recordMap, mapPageUrl } = useNotionContext();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-list-collection\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-list-view\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-list-body\"\n  }, blockIds == null ? void 0 : blockIds.map((blockId) => {\n    var _a, _b, _c, _d;\n    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n    if (!block)\n      return null;\n    const titleSchema = collection.schema.title;\n    const titleData = (_b = block == null ? void 0 : block.properties) == null ? void 0 : _b.title;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n      className: \"notion-list-item notion-page-link\",\n      href: mapPageUrl(block.id),\n      key: blockId\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-list-item-title\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema: titleSchema,\n      data: titleData,\n      block,\n      collection\n    })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-list-item-body\"\n    }, (_d = (_c = collectionView.format) == null ? void 0 : _c.list_properties) == null ? void 0 : _d.filter((p) => p.visible).map((p) => {\n      var _a2;\n      const schema = collection.schema[p.property];\n      const data = block && ((_a2 = block.properties) == null ? void 0 : _a2[p.property]);\n      if (!schema) {\n        return null;\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"notion-list-item-property\",\n        key: p.property\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n        schema,\n        data,\n        block,\n        collection\n      }));\n    })));\n  }))));\n}\n\n// src/third-party/collection-view-board.tsx\n\n\n// src/icons/empty-icon.tsx\n\nvar EmptyIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className\n  }, rest), {\n    viewBox: \"0 0 14 14\",\n    width: \"14\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z\"\n  }));\n};\n\n// src/third-party/collection-view-board.tsx\nvar CollectionViewBoard = ({\n  collection,\n  collectionView,\n  collectionData,\n  padding\n}) => {\n  var _a;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData, padding);\n    return collectionGroups.map((group, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key: index\n    }, group), {\n      summaryProps: {\n        style: {\n          paddingLeft: padding\n        }\n      },\n      collectionViewComponent: (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Board, __spreadValues({\n        padding\n      }, props))\n    })));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Board, {\n    padding,\n    collectionView,\n    collection,\n    collectionData\n  });\n};\nfunction Board({ collectionView, collectionData, collection, padding }) {\n  var _a, _b;\n  const { recordMap } = useNotionContext();\n  const {\n    board_cover = { type: \"none\" },\n    board_cover_size = \"medium\",\n    board_cover_aspect = \"cover\"\n  } = (collectionView == null ? void 0 : collectionView.format) || {};\n  const boardGroups = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.board_columns) || ((_b = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _b.board_groups2) || [];\n  const boardStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    paddingLeft: padding\n  }), [padding]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-board-view\", `notion-board-view-size-${board_cover_size}`),\n    style: boardStyle\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-header-inner\"\n  }, boardGroups.map((p, index) => {\n    var _a2, _b2, _c;\n    if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {\n      return null;\n    }\n    const group = collectionData.board_columns.results[index];\n    const schema = collection.schema[p.property];\n    if (!group || !schema || p.hidden) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-board-th\",\n      key: index\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-board-th-body\"\n    }, ((_b2 = group.value) == null ? void 0 : _b2.value) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data: [[(_c = group.value) == null ? void 0 : _c.value]],\n      collection\n    }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EmptyIcon, {\n      className: \"notion-board-th-empty\"\n    }), \" No Select\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"notion-board-th-count\"\n    }, group.total)));\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-header-placeholder\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-body\"\n  }, boardGroups.map((p, index) => {\n    var _a2, _b2, _c;\n    if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {\n      return null;\n    }\n    const schema = collection.schema[p.property];\n    const group = collectionData[`results:select:${((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.value) || \"uncategorized\"}`];\n    if (!group || !schema || p.hidden) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-board-group\",\n      key: index\n    }, (_c = group.blockIds) == null ? void 0 : _c.map((blockId) => {\n      var _a3, _b3;\n      const block = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;\n      if (!block)\n        return null;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionCard, {\n        className: \"notion-board-group-card\",\n        collection,\n        block,\n        cover: board_cover,\n        coverSize: board_cover_size,\n        coverAspect: board_cover_aspect,\n        properties: (_b3 = collectionView.format) == null ? void 0 : _b3.board_properties,\n        key: blockId\n      });\n    }));\n  }))));\n}\n\n// src/third-party/collection-view.tsx\nvar CollectionViewImpl = (props) => {\n  const { collectionView } = props;\n  switch (collectionView.type) {\n    case \"table\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewTable, __spreadValues({}, props));\n    case \"gallery\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewGallery, __spreadValues({}, props));\n    case \"list\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewList, __spreadValues({}, props));\n    case \"board\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewBoard, __spreadValues({}, props));\n    default:\n      console.warn(\"unsupported collection view\", collectionView);\n      return null;\n  }\n};\nvar CollectionView = react__WEBPACK_IMPORTED_MODULE_0__.memo(CollectionViewImpl);\n\n// src/third-party/collection.tsx\nvar isServer2 = typeof window === \"undefined\";\nvar Collection = ({ block, className, ctx: ctx2 }) => {\n  const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadValues({}, ctx2), [ctx2]);\n  if (block.type === \"page\") {\n    if (block.parent_table !== \"collection\") {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-page-properties\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionRow, {\n      block,\n      pageHeader: true,\n      className\n    })));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewBlock, {\n      block,\n      className\n    }));\n  }\n};\nvar CollectionViewBlock = ({ block, className }) => {\n  var _a, _b, _c;\n  const { recordMap, showCollectionViewDropdown } = useNotionContext();\n  const { view_ids: viewIds } = block;\n  const collectionId = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockCollectionId)(block, recordMap);\n  const [isMounted, setIsMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  const defaultCollectionViewId = viewIds[0];\n  const [collectionState, setCollectionState] = (0,react_use__WEBPACK_IMPORTED_MODULE_2__.useLocalStorage)(block.id, {\n    collectionViewId: defaultCollectionViewId\n  });\n  const collectionViewId = isMounted && viewIds.find((id) => id === collectionState.collectionViewId) || defaultCollectionViewId;\n  const onChangeView = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((collectionViewId2) => {\n    console.log(\"change collection view\", collectionViewId2);\n    setCollectionState(__spreadProps(__spreadValues({}, collectionState), {\n      collectionViewId: collectionViewId2\n    }));\n  }, [collectionState, setCollectionState]);\n  let { width: windowWidth } = (0,react_use__WEBPACK_IMPORTED_MODULE_2__.useWindowSize)();\n  if (isServer2) {\n    windowWidth = 1024;\n  }\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const collectionView = (_b = recordMap.collection_view[collectionViewId]) == null ? void 0 : _b.value;\n  const collectionData = (_c = recordMap.collection_query[collectionId]) == null ? void 0 : _c[collectionViewId];\n  const parentPage = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockParentPage)(block, recordMap);\n  const { style, width, padding } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _a2;\n    const style2 = {};\n    if ((collectionView == null ? void 0 : collectionView.type) !== \"table\" && (collectionView == null ? void 0 : collectionView.type) !== \"board\") {\n      return {\n        style: style2,\n        width: 0,\n        padding: 0\n      };\n    }\n    const width2 = windowWidth;\n    const maxNotionBodyWidth = 708;\n    let notionBodyWidth = maxNotionBodyWidth;\n    if ((_a2 = parentPage == null ? void 0 : parentPage.format) == null ? void 0 : _a2.page_full_width) {\n      notionBodyWidth = width2 - 2 * Math.min(96, width2 * 0.08) | 0;\n    } else {\n      notionBodyWidth = width2 < maxNotionBodyWidth ? width2 - width2 * 0.02 | 0 : maxNotionBodyWidth;\n    }\n    const padding2 = isServer2 && !isMounted ? 96 : (width2 - notionBodyWidth) / 2 | 0;\n    style2.paddingLeft = padding2;\n    style2.paddingRight = padding2;\n    return {\n      style: style2,\n      width: width2,\n      padding: padding2\n    };\n  }, [windowWidth, parentPage, collectionView == null ? void 0 : collectionView.type, isMounted]);\n  if (!(collection && collectionView && collectionData)) {\n    console.warn(\"skipping missing collection view for block\", block.id, {\n      collectionId,\n      collectionViewId,\n      collectionView,\n      collectionData,\n      recordMap\n    });\n    return null;\n  }\n  const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)(collection.name).trim();\n  if (collection.icon) {\n    block.format = __spreadProps(__spreadValues({}, block.format), {\n      page_icon: collection.icon\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-collection\", className)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-header\",\n    style\n  }, title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-header-title\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n    block,\n    className: \"notion-page-title-icon\",\n    hideDefaultIcon: true\n  }), title), viewIds.length > 1 && showCollectionViewDropdown && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewDropdownMenu, {\n    collectionView,\n    collectionViewId,\n    viewIds,\n    onChangeView\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionView, {\n    collection,\n    collectionView,\n    collectionData,\n    padding,\n    width\n  }));\n};\nvar CollectionViewDropdownMenu = ({ collectionViewId, collectionView, viewIds, onChangeView }) => {\n  const { recordMap } = useNotionContext();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.Root, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.Trigger, {\n    className: \"notion-collection-view-dropdown\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewColumnDesc, {\n    collectionView\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ChevronDownIcon, {\n    className: \"notion-collection-view-dropdown-icon\"\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.Content, {\n    className: \"notion-collection-view-dropdown-content\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.RadioGroup, {\n    value: collectionViewId,\n    onValueChange: onChangeView\n  }, viewIds.map((viewId) => {\n    var _a;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.RadioItem, {\n      key: viewId,\n      value: viewId,\n      className: cs(\"notion-collection-view-dropdown-content-item\", collectionViewId === viewId && \"notion-collection-view-dropdown-content-item-active\")\n    }, collectionViewId === viewId && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-view-dropdown-content-item-active-icon\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(check_default, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewColumnDesc, {\n      collectionView: (_a = recordMap.collection_view[viewId]) == null ? void 0 : _a.value\n    }));\n  }))));\n};\nvar CollectionViewColumnDesc = (_a) => {\n  var _b = _a, { collectionView, className, children } = _b, rest = __objRest(_b, [\"collectionView\", \"className\", \"children\"]);\n  const { type } = collectionView;\n  const name = collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({\n    className: cs(\"notion-collection-view-type\", className)\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewIcon, {\n    className: \"notion-collection-view-type-icon\",\n    type\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-collection-view-type-title\"\n  }, name), children);\n};\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtbm90aW9uLXgvYnVpbGQvdGhpcmQtcGFydHkvY29sbGVjdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsYUFBYTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUcscUZBQXFGLDhCQUE4QjtBQUN0TjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOEJBQThCO0FBQ3hEO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsRUFBRTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsRUFBRTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvQkFBb0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSx1Q0FBdUMsTUFBTSwwREFBMEQsTUFBTTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4SUFBOEk7QUFDOUksUUFBUTtBQUNSLDBJQUEwSTtBQUMxSSxRQUFRO0FBQ1Isb0pBQW9KO0FBQ3BKLFFBQVE7QUFDUixzSkFBc0o7QUFDdEo7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDaUM7QUFLWDtBQUNxQztBQUNHOztBQUU5RDtBQUNpQzs7QUFFakM7QUFDaUM7O0FBRWpDO0FBQytCO0FBQy9CO0FBQ0EseUJBQXlCLGdEQUFtQjtBQUM1QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFtQjtBQUNoRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2dDO0FBQ2hDO0FBQ0EseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFvQjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2lDO0FBQ2pDO0FBQ0EseUJBQXlCLGdEQUFxQjtBQUM5QztBQUNBLEdBQUcsMEJBQTBCLGdEQUFxQjtBQUNsRDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ2lDO0FBQ2pDO0FBQ0EseUJB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Q0EsR0FBRyxrQkFBa0IsZ0RBQXFCO0FBQzFDO0FBQ0E7QUFDQSxHQUFHLDJCQUEyQixnREFBcUI7QUFDbkQ7QUFDQSxHQUFHLGtCQUFrQixnREFBcUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsR0FBRywrRUFBK0UsZ0RBQXFCO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxvQkFBb0IsZ0RBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxvQ0FBb0MseURBQXlEO0FBQzdGLFVBQVUsWUFBWTtBQUN0Qix5QkFBeUIsZ0RBQXFCLENBQUMsK0RBQWlCLHdCQUF3QixnREFBcUIsQ0FBQyxrRUFBb0I7QUFDbEk7QUFDQSxHQUFHLGtCQUFrQixnREFBcUI7QUFDMUM7QUFDQSxHQUFHLGtCQUFrQixnREFBcUI7QUFDMUM7QUFDQSxHQUFHLHFCQUFxQixnREFBcUIsQ0FBQyxrRUFBb0I7QUFDbEU7QUFDQSxHQUFHLGtCQUFrQixnREFBcUIsQ0FBQyxxRUFBdUI7QUFDbEU7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLDJCQUEyQixnREFBcUIsQ0FBQyxvRUFBc0I7QUFDdkU7QUFDQTtBQUNBO0FBQ0EsS0FBSyxpREFBaUQsZ0RBQXFCO0FBQzNFO0FBQ0EsS0FBSyxrQkFBa0IsZ0RBQXFCLHdDQUF3QyxnREFBcUI7QUFDekc7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQSxpQkFBaUIsc0NBQXNDO0FBQ3ZELFVBQVUsT0FBTztBQUNqQix5Q0FBeUMsc0JBQXNCLEVBQUUsZUFBZTtBQUNoRix5QkFBeUIsZ0RBQXFCO0FBQzlDO0FBQ0EsR0FBRyx5QkFBeUIsZ0RBQXFCO0FBQ2pEO0FBQ0E7QUFDQSxHQUFHLG1CQUFtQixnREFBcUI7QUFDM0M7QUFDQSxHQUFHO0FBQ0g7QUFJRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1ub3Rpb24tc3RhcnRlci1raXQvLi9ub2RlX21vZHVsZXMvcmVhY3Qtbm90aW9uLXgvYnVpbGQvdGhpcmQtcGFydHkvY29sbGVjdGlvbi5qcz83OWEzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2NyZWF0ZSA9IE9iamVjdC5jcmVhdGU7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmUHJvcHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydGllcztcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BEZXNjcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzO1xudmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19nZXRPd25Qcm9wU3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgX19nZXRQcm90b09mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19wcm9wSXNFbnVtID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3NwcmVhZFZhbHVlcyA9IChhLCBiKSA9PiB7XG4gIGZvciAodmFyIHByb3AgaW4gYiB8fCAoYiA9IHt9KSlcbiAgICBpZiAoX19oYXNPd25Qcm9wLmNhbGwoYiwgcHJvcCkpXG4gICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XG4gIGlmIChfX2dldE93blByb3BTeW1ib2xzKVxuICAgIGZvciAodmFyIHByb3Agb2YgX19nZXRPd25Qcm9wU3ltYm9scyhiKSkge1xuICAgICAgaWYgKF9fcHJvcElzRW51bS5jYWxsKGIsIHByb3ApKVxuICAgICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XG4gICAgfVxuICByZXR1cm4gYTtcbn07XG52YXIgX19zcHJlYWRQcm9wcyA9IChhLCBiKSA9PiBfX2RlZlByb3BzKGEsIF9fZ2V0T3duUHJvcERlc2NzKGIpKTtcbnZhciBfX29ialJlc3QgPSAoc291cmNlLCBleGNsdWRlKSA9PiB7XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpXG4gICAgaWYgKF9faGFzT3duUHJvcC5jYWxsKHNvdXJjZSwgcHJvcCkgJiYgZXhjbHVkZS5pbmRleE9mKHByb3ApIDwgMClcbiAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgaWYgKHNvdXJjZSAhPSBudWxsICYmIF9fZ2V0T3duUHJvcFN5bWJvbHMpXG4gICAgZm9yICh2YXIgcHJvcCBvZiBfX2dldE93blByb3BTeW1ib2xzKHNvdXJjZSkpIHtcbiAgICAgIGlmIChleGNsdWRlLmluZGV4T2YocHJvcCkgPCAwICYmIF9fcHJvcElzRW51bS5jYWxsKHNvdXJjZSwgcHJvcCkpXG4gICAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICB9XG4gIHJldHVybiB0YXJnZXQ7XG59O1xudmFyIF9fY29tbW9uSlMgPSAoY2IsIG1vZCkgPT4gZnVuY3Rpb24gX19yZXF1aXJlKCkge1xuICByZXR1cm4gbW9kIHx8ICgwLCBjYltfX2dldE93blByb3BOYW1lcyhjYilbMF1dKSgobW9kID0geyBleHBvcnRzOiB7fSB9KS5leHBvcnRzLCBtb2QpLCBtb2QuZXhwb3J0cztcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX190b0VTTSA9IChtb2QsIGlzTm9kZU1vZGUsIHRhcmdldCkgPT4gKHRhcmdldCA9IG1vZCAhPSBudWxsID8gX19jcmVhdGUoX19nZXRQcm90b09mKG1vZCkpIDoge30sIF9fY29weVByb3BzKGlzTm9kZU1vZGUgfHwgIW1vZCB8fCAhbW9kLl9fZXNNb2R1bGUgPyBfX2RlZlByb3AodGFyZ2V0LCBcImRlZmF1bHRcIiwgeyB2YWx1ZTogbW9kLCBlbnVtZXJhYmxlOiB0cnVlIH0pIDogdGFyZ2V0LCBtb2QpKTtcbnZhciBfX2FzeW5jID0gKF9fdGhpcywgX19hcmd1bWVudHMsIGdlbmVyYXRvcikgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHZhciBmdWxmaWxsZWQgPSAodmFsdWUpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHJlamVjdGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci50aHJvdyh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgc3RlcCA9ICh4KSA9PiB4LmRvbmUgPyByZXNvbHZlKHgudmFsdWUpIDogUHJvbWlzZS5yZXNvbHZlKHgudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7XG4gICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KF9fdGhpcywgX19hcmd1bWVudHMpKS5uZXh0KCkpO1xuICB9KTtcbn07XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9mb3JtYXQtbnVtYmVyL2luZGV4LmpzXG52YXIgcmVxdWlyZV9mb3JtYXRfbnVtYmVyID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Zvcm1hdC1udW1iZXIvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZvcm1hdHRlcjtcbiAgICBtb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gZm9ybWF0dGVyO1xuICAgIGZ1bmN0aW9uIGZvcm1hdHRlcihvcHRpb25zKSB7XG4gICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgIG9wdGlvbnMubmVnYXRpdmVUeXBlID0gb3B0aW9ucy5uZWdhdGl2ZVR5cGUgfHwgKG9wdGlvbnMubmVnYXRpdmUgPT09IFwiUlwiID8gXCJyaWdodFwiIDogXCJsZWZ0XCIpO1xuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm5lZ2F0aXZlTGVmdFN5bWJvbCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICBzd2l0Y2ggKG9wdGlvbnMubmVnYXRpdmVUeXBlKSB7XG4gICAgICAgICAgY2FzZSBcImxlZnRcIjpcbiAgICAgICAgICAgIG9wdGlvbnMubmVnYXRpdmVMZWZ0U3ltYm9sID0gXCItXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiYnJhY2tldHNcIjpcbiAgICAgICAgICAgIG9wdGlvbnMubmVnYXRpdmVMZWZ0U3ltYm9sID0gXCIoXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgb3B0aW9ucy5uZWdhdGl2ZUxlZnRTeW1ib2wgPSBcIlwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbnMubmVnYXRpdmVSaWdodFN5bWJvbCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICBzd2l0Y2ggKG9wdGlvbnMubmVnYXRpdmVUeXBlKSB7XG4gICAgICAgICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICAgICAgICBvcHRpb25zLm5lZ2F0aXZlUmlnaHRTeW1ib2wgPSBcIi1cIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJicmFja2V0c1wiOlxuICAgICAgICAgICAgb3B0aW9ucy5uZWdhdGl2ZVJpZ2h0U3ltYm9sID0gXCIpXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgb3B0aW9ucy5uZWdhdGl2ZVJpZ2h0U3ltYm9sID0gXCJcIjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm5lZ2F0aXZlTGVmdE91dCAhPT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgb3B0aW9ucy5uZWdhdGl2ZUxlZnRPdXQgPSBvcHRpb25zLm5lZ2F0aXZlT3V0ID09PSBmYWxzZSA/IGZhbHNlIDogdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5uZWdhdGl2ZVJpZ2h0T3V0ICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgICBvcHRpb25zLm5lZ2F0aXZlUmlnaHRPdXQgPSBvcHRpb25zLm5lZ2F0aXZlT3V0ID09PSBmYWxzZSA/IGZhbHNlIDogdHJ1ZTtcbiAgICAgIH1cbiAgICAgIG9wdGlvbnMucHJlZml4ID0gb3B0aW9ucy5wcmVmaXggfHwgXCJcIjtcbiAgICAgIG9wdGlvbnMuc3VmZml4ID0gb3B0aW9ucy5zdWZmaXggfHwgXCJcIjtcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnRlZ2VyU2VwYXJhdG9yICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIG9wdGlvbnMuaW50ZWdlclNlcGFyYXRvciA9IHR5cGVvZiBvcHRpb25zLnNlcGFyYXRvciA9PT0gXCJzdHJpbmdcIiA/IG9wdGlvbnMuc2VwYXJhdG9yIDogXCIsXCI7XG4gICAgICB9XG4gICAgICBvcHRpb25zLmRlY2ltYWxzU2VwYXJhdG9yID0gdHlwZW9mIG9wdGlvbnMuZGVjaW1hbHNTZXBhcmF0b3IgPT09IFwic3RyaW5nXCIgPyBvcHRpb25zLmRlY2ltYWxzU2VwYXJhdG9yIDogXCJcIjtcbiAgICAgIG9wdGlvbnMuZGVjaW1hbCA9IG9wdGlvbnMuZGVjaW1hbCB8fCBcIi5cIjtcbiAgICAgIG9wdGlvbnMucGFkTGVmdCA9IG9wdGlvbnMucGFkTGVmdCB8fCAtMTtcbiAgICAgIG9wdGlvbnMucGFkUmlnaHQgPSBvcHRpb25zLnBhZFJpZ2h0IHx8IC0xO1xuICAgICAgZnVuY3Rpb24gZm9ybWF0NChudW1iZXIsIG92ZXJyaWRlT3B0aW9ucykge1xuICAgICAgICBvdmVycmlkZU9wdGlvbnMgPSBvdmVycmlkZU9wdGlvbnMgfHwge307XG4gICAgICAgIGlmIChudW1iZXIgfHwgbnVtYmVyID09PSAwKSB7XG4gICAgICAgICAgbnVtYmVyID0gXCJcIiArIG51bWJlcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgICAgIHZhciBuZWdhdGl2ZSA9IG51bWJlci5jaGFyQXQoMCkgPT09IFwiLVwiO1xuICAgICAgICBudW1iZXIgPSBudW1iZXIucmVwbGFjZSgvXlxcLS9nLCBcIlwiKTtcbiAgICAgICAgaWYgKCFvcHRpb25zLm5lZ2F0aXZlTGVmdE91dCAmJiAhb3ZlcnJpZGVPcHRpb25zLm5vVW5pdHMpIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChvcHRpb25zLnByZWZpeCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5lZ2F0aXZlKSB7XG4gICAgICAgICAgb3V0cHV0LnB1c2gob3B0aW9ucy5uZWdhdGl2ZUxlZnRTeW1ib2wpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zLm5lZ2F0aXZlTGVmdE91dCAmJiAhb3ZlcnJpZGVPcHRpb25zLm5vVW5pdHMpIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChvcHRpb25zLnByZWZpeCk7XG4gICAgICAgIH1cbiAgICAgICAgbnVtYmVyID0gbnVtYmVyLnNwbGl0KFwiLlwiKTtcbiAgICAgICAgaWYgKG9wdGlvbnMucm91bmQgIT0gbnVsbClcbiAgICAgICAgICByb3VuZChudW1iZXIsIG9wdGlvbnMucm91bmQpO1xuICAgICAgICBpZiAob3B0aW9ucy50cnVuY2F0ZSAhPSBudWxsKVxuICAgICAgICAgIG51bWJlclsxXSA9IHRydW5jYXRlKG51bWJlclsxXSwgb3B0aW9ucy50cnVuY2F0ZSk7XG4gICAgICAgIGlmIChvcHRpb25zLnBhZExlZnQgPiAwKVxuICAgICAgICAgIG51bWJlclswXSA9IHBhZExlZnQobnVtYmVyWzBdLCBvcHRpb25zLnBhZExlZnQpO1xuICAgICAgICBpZiAob3B0aW9ucy5wYWRSaWdodCA+IDApXG4gICAgICAgICAgbnVtYmVyWzFdID0gcGFkUmlnaHQobnVtYmVyWzFdLCBvcHRpb25zLnBhZFJpZ2h0KTtcbiAgICAgICAgaWYgKCFvdmVycmlkZU9wdGlvbnMubm9TZXBhcmF0b3IgJiYgbnVtYmVyWzFdKVxuICAgICAgICAgIG51bWJlclsxXSA9IGFkZERlY2ltYWxTZXBhcmF0b3JzKG51bWJlclsxXSwgb3B0aW9ucy5kZWNpbWFsc1NlcGFyYXRvcik7XG4gICAgICAgIGlmICghb3ZlcnJpZGVPcHRpb25zLm5vU2VwYXJhdG9yICYmIG51bWJlclswXSlcbiAgICAgICAgICBudW1iZXJbMF0gPSBhZGRJbnRlZ2VyU2VwYXJhdG9ycyhudW1iZXJbMF0sIG9wdGlvbnMuaW50ZWdlclNlcGFyYXRvcik7XG4gICAgICAgIG91dHB1dC5wdXNoKG51bWJlclswXSk7XG4gICAgICAgIGlmIChudW1iZXJbMV0pIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChvcHRpb25zLmRlY2ltYWwpO1xuICAgICAgICAgIG91dHB1dC5wdXNoKG51bWJlclsxXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMubmVnYXRpdmVSaWdodE91dCAmJiAhb3ZlcnJpZGVPcHRpb25zLm5vVW5pdHMpIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChvcHRpb25zLnN1ZmZpeCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5lZ2F0aXZlKSB7XG4gICAgICAgICAgb3V0cHV0LnB1c2gob3B0aW9ucy5uZWdhdGl2ZVJpZ2h0U3ltYm9sKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW9wdGlvbnMubmVnYXRpdmVSaWdodE91dCAmJiAhb3ZlcnJpZGVPcHRpb25zLm5vVW5pdHMpIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChvcHRpb25zLnN1ZmZpeCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dHB1dC5qb2luKFwiXCIpO1xuICAgICAgfVxuICAgICAgZm9ybWF0NC5uZWdhdGl2ZSA9IG9wdGlvbnMubmVnYXRpdmU7XG4gICAgICBmb3JtYXQ0Lm5lZ2F0aXZlT3V0ID0gb3B0aW9ucy5uZWdhdGl2ZU91dDtcbiAgICAgIGZvcm1hdDQubmVnYXRpdmVUeXBlID0gb3B0aW9ucy5uZWdhdGl2ZVR5cGU7XG4gICAgICBmb3JtYXQ0Lm5lZ2F0aXZlTGVmdE91dCA9IG9wdGlvbnMubmVnYXRpdmVMZWZ0T3V0O1xuICAgICAgZm9ybWF0NC5uZWdhdGl2ZUxlZnRTeW1ib2wgPSBvcHRpb25zLm5lZ2F0aXZlTGVmdFN5bWJvbDtcbiAgICAgIGZvcm1hdDQubmVnYXRpdmVSaWdodE91dCA9IG9wdGlvbnMubmVnYXRpdmVSaWdodE91dDtcbiAgICAgIGZvcm1hdDQubmVnYXRpdmVSaWdodFN5bWJvbCA9IG9wdGlvbnMubmVnYXRpdmVSaWdodFN5bWJvbDtcbiAgICAgIGZvcm1hdDQucHJlZml4ID0gb3B0aW9ucy5wcmVmaXg7XG4gICAgICBmb3JtYXQ0LnN1ZmZpeCA9IG9wdGlvbnMuc3VmZml4O1xuICAgICAgZm9ybWF0NC5zZXBhcmF0ZSA9IG9wdGlvbnMuc2VwYXJhdGU7XG4gICAgICBmb3JtYXQ0LmludGVnZXJTZXBhcmF0b3IgPSBvcHRpb25zLmludGVnZXJTZXBhcmF0b3I7XG4gICAgICBmb3JtYXQ0LmRlY2ltYWxzU2VwYXJhdG9yID0gb3B0aW9ucy5kZWNpbWFsc1NlcGFyYXRvcjtcbiAgICAgIGZvcm1hdDQuZGVjaW1hbCA9IG9wdGlvbnMuZGVjaW1hbDtcbiAgICAgIGZvcm1hdDQucGFkTGVmdCA9IG9wdGlvbnMucGFkTGVmdDtcbiAgICAgIGZvcm1hdDQucGFkUmlnaHQgPSBvcHRpb25zLnBhZFJpZ2h0O1xuICAgICAgZm9ybWF0NC50cnVuY2F0ZSA9IG9wdGlvbnMudHJ1bmNhdGU7XG4gICAgICBmb3JtYXQ0LnJvdW5kID0gb3B0aW9ucy5yb3VuZDtcbiAgICAgIGZ1bmN0aW9uIHVuZm9ybWF0KG51bWJlciwgYWxsb3dlZFNlcGFyYXRvcnMpIHtcbiAgICAgICAgYWxsb3dlZFNlcGFyYXRvcnMgPSBhbGxvd2VkU2VwYXJhdG9ycyB8fCBbXTtcbiAgICAgICAgaWYgKG9wdGlvbnMuYWxsb3dlZFNlcGFyYXRvcnMpIHtcbiAgICAgICAgICBvcHRpb25zLmFsbG93ZWRTZXBhcmF0b3JzLmZvckVhY2goZnVuY3Rpb24ocykge1xuICAgICAgICAgICAgYWxsb3dlZFNlcGFyYXRvcnMucHVzaChzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBhbGxvd2VkU2VwYXJhdG9ycy5wdXNoKG9wdGlvbnMuaW50ZWdlclNlcGFyYXRvcik7XG4gICAgICAgIGFsbG93ZWRTZXBhcmF0b3JzLnB1c2gob3B0aW9ucy5kZWNpbWFsc1NlcGFyYXRvcik7XG4gICAgICAgIG51bWJlciA9IG51bWJlci5yZXBsYWNlKG9wdGlvbnMucHJlZml4LCBcIlwiKTtcbiAgICAgICAgbnVtYmVyID0gbnVtYmVyLnJlcGxhY2Uob3B0aW9ucy5zdWZmaXgsIFwiXCIpO1xuICAgICAgICB2YXIgbmV3TnVtYmVyID0gbnVtYmVyO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgbnVtYmVyID0gbmV3TnVtYmVyO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsb3dlZFNlcGFyYXRvcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIG5ld051bWJlciA9IG5ld051bWJlci5yZXBsYWNlKGFsbG93ZWRTZXBhcmF0b3JzW2ldLCBcIlwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gd2hpbGUgKG5ld051bWJlciAhPSBudW1iZXIpO1xuICAgICAgICByZXR1cm4gbnVtYmVyO1xuICAgICAgfVxuICAgICAgZm9ybWF0NC51bmZvcm1hdCA9IHVuZm9ybWF0O1xuICAgICAgZnVuY3Rpb24gdmFsaWRhdGUobnVtYmVyLCBhbGxvd2VkU2VwYXJhdG9ycykge1xuICAgICAgICBudW1iZXIgPSB1bmZvcm1hdChudW1iZXIsIGFsbG93ZWRTZXBhcmF0b3JzKTtcbiAgICAgICAgbnVtYmVyID0gbnVtYmVyLnNwbGl0KG9wdGlvbnMuZGVjaW1hbCk7XG4gICAgICAgIGlmIChudW1iZXIubGVuZ3RoID4gMikge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zLnRydW5jYXRlICE9IG51bGwgJiYgbnVtYmVyWzFdICYmIG51bWJlclsxXS5sZW5ndGggPiBvcHRpb25zLnRydW5jYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMucm91bmQgIT0gbnVsbCAmJiBudW1iZXJbMV0gJiYgbnVtYmVyWzFdLmxlbmd0aCA+IG9wdGlvbnMucm91bmQpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIC9eLT9cXGQrXFwuP1xcZCokLy50ZXN0KG51bWJlcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBmb3JtYXQ0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBhZGRJbnRlZ2VyU2VwYXJhdG9ycyh4LCBzZXBhcmF0b3IpIHtcbiAgICAgIHggKz0gXCJcIjtcbiAgICAgIGlmICghc2VwYXJhdG9yKVxuICAgICAgICByZXR1cm4geDtcbiAgICAgIHZhciByZ3ggPSAvKFxcZCspKFxcZHszfSkvO1xuICAgICAgd2hpbGUgKHJneC50ZXN0KHgpKSB7XG4gICAgICAgIHggPSB4LnJlcGxhY2Uocmd4LCBcIiQxXCIgKyBzZXBhcmF0b3IgKyBcIiQyXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFkZERlY2ltYWxTZXBhcmF0b3JzKHgsIHNlcGFyYXRvcikge1xuICAgICAgeCArPSBcIlwiO1xuICAgICAgaWYgKCFzZXBhcmF0b3IpXG4gICAgICAgIHJldHVybiB4O1xuICAgICAgdmFyIHJneCA9IC8oXFxkezN9KShcXGQrKS87XG4gICAgICB3aGlsZSAocmd4LnRlc3QoeCkpIHtcbiAgICAgICAgeCA9IHgucmVwbGFjZShyZ3gsIFwiJDFcIiArIHNlcGFyYXRvciArIFwiJDJcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4geDtcbiAgICB9XG4gICAgZnVuY3Rpb24gcGFkTGVmdCh4LCBwYWRkaW5nKSB7XG4gICAgICB4ID0geCArIFwiXCI7XG4gICAgICB2YXIgYnVmID0gW107XG4gICAgICB3aGlsZSAoYnVmLmxlbmd0aCArIHgubGVuZ3RoIDwgcGFkZGluZykge1xuICAgICAgICBidWYucHVzaChcIjBcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gYnVmLmpvaW4oXCJcIikgKyB4O1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYWRSaWdodCh4LCBwYWRkaW5nKSB7XG4gICAgICBpZiAoeCkge1xuICAgICAgICB4ICs9IFwiXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB4ID0gXCJcIjtcbiAgICAgIH1cbiAgICAgIHZhciBidWYgPSBbXTtcbiAgICAgIHdoaWxlIChidWYubGVuZ3RoICsgeC5sZW5ndGggPCBwYWRkaW5nKSB7XG4gICAgICAgIGJ1Zi5wdXNoKFwiMFwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB4ICsgYnVmLmpvaW4oXCJcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRydW5jYXRlKHgsIGxlbmd0aCkge1xuICAgICAgaWYgKHgpIHtcbiAgICAgICAgeCArPSBcIlwiO1xuICAgICAgfVxuICAgICAgaWYgKHggJiYgeC5sZW5ndGggPiBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHguc3Vic3RyKDAsIGxlbmd0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geDtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gcm91bmQobnVtYmVyLCBwbGFjZXMpIHtcbiAgICAgIGlmIChudW1iZXJbMV0gJiYgcGxhY2VzID49IDAgJiYgbnVtYmVyWzFdLmxlbmd0aCA+IHBsYWNlcykge1xuICAgICAgICB2YXIgZGVjaW0gPSBudW1iZXJbMV0uc2xpY2UoMCwgcGxhY2VzKTtcbiAgICAgICAgaWYgKCtudW1iZXJbMV0uc3Vic3RyKHBsYWNlcywgMSkgPj0gNSkge1xuICAgICAgICAgIHZhciBsZWFkaW5nemVyb3MgPSBcIlwiO1xuICAgICAgICAgIHdoaWxlIChkZWNpbS5jaGFyQXQoMCkgPT09IFwiMFwiKSB7XG4gICAgICAgICAgICBsZWFkaW5nemVyb3MgPSBsZWFkaW5nemVyb3MgKyBcIjBcIjtcbiAgICAgICAgICAgIGRlY2ltID0gZGVjaW0uc3Vic3RyKDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBkZWNpbSA9ICtkZWNpbSArIDEgKyBcIlwiO1xuICAgICAgICAgIGRlY2ltID0gbGVhZGluZ3plcm9zICsgZGVjaW07XG4gICAgICAgICAgaWYgKGRlY2ltLmxlbmd0aCA+IHBsYWNlcykge1xuICAgICAgICAgICAgbnVtYmVyWzBdID0gK251bWJlclswXSArICtkZWNpbS5jaGFyQXQoMCkgKyBcIlwiO1xuICAgICAgICAgICAgZGVjaW0gPSBkZWNpbS5zdWJzdHJpbmcoMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG51bWJlclsxXSA9IGRlY2ltO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bWJlcjtcbiAgICB9XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcbnZhciByZXF1aXJlX3JlcXVpcmVkQXJncyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSByZXF1aXJlZEFyZ3M7XG4gICAgZnVuY3Rpb24gcmVxdWlyZWRBcmdzKHJlcXVpcmVkLCBhcmdzKSB7XG4gICAgICBpZiAoYXJncy5sZW5ndGggPCByZXF1aXJlZCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHJlcXVpcmVkICsgXCIgYXJndW1lbnRcIiArIChyZXF1aXJlZCA+IDEgPyBcInNcIiA6IFwiXCIpICsgXCIgcmVxdWlyZWQsIGJ1dCBvbmx5IFwiICsgYXJncy5sZW5ndGggKyBcIiBwcmVzZW50XCIpO1xuICAgICAgfVxuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9pc0RhdGUvaW5kZXguanNcbnZhciByZXF1aXJlX2lzRGF0ZSA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9pc0RhdGUvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gaXNEYXRlO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNEYXRlKHZhbHVlKSB7XG4gICAgICAoMCwgX2luZGV4LmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBEYXRlIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpID09PSBcIltvYmplY3QgRGF0ZV1cIjtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvdG9EYXRlL2luZGV4LmpzXG52YXIgcmVxdWlyZV90b0RhdGUgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvdG9EYXRlL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IHRvRGF0ZTtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3JlcXVpcmVkQXJncygpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRvRGF0ZShhcmd1bWVudCkge1xuICAgICAgKDAsIF9pbmRleC5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGFyZ1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudCk7XG4gICAgICBpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBEYXRlIHx8IHR5cGVvZiBhcmd1bWVudCA9PT0gXCJvYmplY3RcIiAmJiBhcmdTdHIgPT09IFwiW29iamVjdCBEYXRlXVwiKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudC5nZXRUaW1lKCkpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgYXJndW1lbnQgPT09IFwibnVtYmVyXCIgfHwgYXJnU3RyID09PSBcIltvYmplY3QgTnVtYmVyXVwiKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoKHR5cGVvZiBhcmd1bWVudCA9PT0gXCJzdHJpbmdcIiB8fCBhcmdTdHIgPT09IFwiW29iamVjdCBTdHJpbmddXCIpICYmIHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiU3RhcnRpbmcgd2l0aCB2Mi4wLjAtYmV0YS4xIGRhdGUtZm5zIGRvZXNuJ3QgYWNjZXB0IHN0cmluZ3MgYXMgZGF0ZSBhcmd1bWVudHMuIFBsZWFzZSB1c2UgYHBhcnNlSVNPYCB0byBwYXJzZSBzdHJpbmdzLiBTZWU6IGh0dHBzOi8vZ2l0LmlvL2ZqdWxlXCIpO1xuICAgICAgICAgIGNvbnNvbGUud2FybihuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgICB9XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2lzVmFsaWQvaW5kZXguanNcbnZhciByZXF1aXJlX2lzVmFsaWQgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvaXNWYWxpZC9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBpc1ZhbGlkO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfaXNEYXRlKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc1ZhbGlkKGRpcnR5RGF0ZSkge1xuICAgICAgKDAsIF9pbmRleDMuZGVmYXVsdCkoMSwgYXJndW1lbnRzKTtcbiAgICAgIGlmICghKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUpICYmIHR5cGVvZiBkaXJ0eURhdGUgIT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgdmFyIGRhdGUgPSAoMCwgX2luZGV4Mi5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgcmV0dXJuICFpc05hTihOdW1iZXIoZGF0ZSkpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXREaXN0YW5jZS9pbmRleC5qc1xudmFyIHJlcXVpcmVfZm9ybWF0RGlzdGFuY2UgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0RGlzdGFuY2UvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuICAgIHZhciBmb3JtYXREaXN0YW5jZUxvY2FsZSA9IHtcbiAgICAgIGxlc3NUaGFuWFNlY29uZHM6IHtcbiAgICAgICAgb25lOiBcImxlc3MgdGhhbiBhIHNlY29uZFwiLFxuICAgICAgICBvdGhlcjogXCJsZXNzIHRoYW4ge3tjb3VudH19IHNlY29uZHNcIlxuICAgICAgfSxcbiAgICAgIHhTZWNvbmRzOiB7XG4gICAgICAgIG9uZTogXCIxIHNlY29uZFwiLFxuICAgICAgICBvdGhlcjogXCJ7e2NvdW50fX0gc2Vjb25kc1wiXG4gICAgICB9LFxuICAgICAgaGFsZkFNaW51dGU6IFwiaGFsZiBhIG1pbnV0ZVwiLFxuICAgICAgbGVzc1RoYW5YTWludXRlczoge1xuICAgICAgICBvbmU6IFwibGVzcyB0aGFuIGEgbWludXRlXCIsXG4gICAgICAgIG90aGVyOiBcImxlc3MgdGhhbiB7e2NvdW50fX0gbWludXRlc1wiXG4gICAgICB9LFxuICAgICAgeE1pbnV0ZXM6IHtcbiAgICAgICAgb25lOiBcIjEgbWludXRlXCIsXG4gICAgICAgIG90aGVyOiBcInt7Y291bnR9fSBtaW51dGVzXCJcbiAgICAgIH0sXG4gICAgICBhYm91dFhIb3Vyczoge1xuICAgICAgICBvbmU6IFwiYWJvdXQgMSBob3VyXCIsXG4gICAgICAgIG90aGVyOiBcImFib3V0IHt7Y291bnR9fSBob3Vyc1wiXG4gICAgICB9LFxuICAgICAgeEhvdXJzOiB7XG4gICAgICAgIG9uZTogXCIxIGhvdXJcIixcbiAgICAgICAgb3RoZXI6IFwie3tjb3VudH19IGhvdXJzXCJcbiAgICAgIH0sXG4gICAgICB4RGF5czoge1xuICAgICAgICBvbmU6IFwiMSBkYXlcIixcbiAgICAgICAgb3RoZXI6IFwie3tjb3VudH19IGRheXNcIlxuICAgICAgfSxcbiAgICAgIGFib3V0WFdlZWtzOiB7XG4gICAgICAgIG9uZTogXCJhYm91dCAxIHdlZWtcIixcbiAgICAgICAgb3RoZXI6IFwiYWJvdXQge3tjb3VudH19IHdlZWtzXCJcbiAgICAgIH0sXG4gICAgICB4V2Vla3M6IHtcbiAgICAgICAgb25lOiBcIjEgd2Vla1wiLFxuICAgICAgICBvdGhlcjogXCJ7e2NvdW50fX0gd2Vla3NcIlxuICAgICAgfSxcbiAgICAgIGFib3V0WE1vbnRoczoge1xuICAgICAgICBvbmU6IFwiYWJvdXQgMSBtb250aFwiLFxuICAgICAgICBvdGhlcjogXCJhYm91dCB7e2NvdW50fX0gbW9udGhzXCJcbiAgICAgIH0sXG4gICAgICB4TW9udGhzOiB7XG4gICAgICAgIG9uZTogXCIxIG1vbnRoXCIsXG4gICAgICAgIG90aGVyOiBcInt7Y291bnR9fSBtb250aHNcIlxuICAgICAgfSxcbiAgICAgIGFib3V0WFllYXJzOiB7XG4gICAgICAgIG9uZTogXCJhYm91dCAxIHllYXJcIixcbiAgICAgICAgb3RoZXI6IFwiYWJvdXQge3tjb3VudH19IHllYXJzXCJcbiAgICAgIH0sXG4gICAgICB4WWVhcnM6IHtcbiAgICAgICAgb25lOiBcIjEgeWVhclwiLFxuICAgICAgICBvdGhlcjogXCJ7e2NvdW50fX0geWVhcnNcIlxuICAgICAgfSxcbiAgICAgIG92ZXJYWWVhcnM6IHtcbiAgICAgICAgb25lOiBcIm92ZXIgMSB5ZWFyXCIsXG4gICAgICAgIG90aGVyOiBcIm92ZXIge3tjb3VudH19IHllYXJzXCJcbiAgICAgIH0sXG4gICAgICBhbG1vc3RYWWVhcnM6IHtcbiAgICAgICAgb25lOiBcImFsbW9zdCAxIHllYXJcIixcbiAgICAgICAgb3RoZXI6IFwiYWxtb3N0IHt7Y291bnR9fSB5ZWFyc1wiXG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgZm9ybWF0RGlzdGFuY2UgPSBmdW5jdGlvbih0b2tlbiwgY291bnQsIG9wdGlvbnMpIHtcbiAgICAgIHZhciByZXN1bHQ7XG4gICAgICB2YXIgdG9rZW5WYWx1ZSA9IGZvcm1hdERpc3RhbmNlTG9jYWxlW3Rva2VuXTtcbiAgICAgIGlmICh0eXBlb2YgdG9rZW5WYWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXN1bHQgPSB0b2tlblZhbHVlO1xuICAgICAgfSBlbHNlIGlmIChjb3VudCA9PT0gMSkge1xuICAgICAgICByZXN1bHQgPSB0b2tlblZhbHVlLm9uZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IHRva2VuVmFsdWUub3RoZXIucmVwbGFjZShcInt7Y291bnR9fVwiLCBjb3VudC50b1N0cmluZygpKTtcbiAgICAgIH1cbiAgICAgIGlmIChvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCAmJiBvcHRpb25zLmFkZFN1ZmZpeCkge1xuICAgICAgICBpZiAob3B0aW9ucy5jb21wYXJpc29uICYmIG9wdGlvbnMuY29tcGFyaXNvbiA+IDApIHtcbiAgICAgICAgICByZXR1cm4gXCJpbiBcIiArIHJlc3VsdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgXCIgYWdvXCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICB2YXIgX2RlZmF1bHQgPSBmb3JtYXREaXN0YW5jZTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvX2xpYi9idWlsZEZvcm1hdExvbmdGbi9pbmRleC5qc1xudmFyIHJlcXVpcmVfYnVpbGRGb3JtYXRMb25nRm4gPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL19saWIvYnVpbGRGb3JtYXRMb25nRm4vaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gYnVpbGRGb3JtYXRMb25nRm47XG4gICAgZnVuY3Rpb24gYnVpbGRGb3JtYXRMb25nRm4oYXJncykge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdm9pZCAwID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICAgIHZhciB3aWR0aCA9IG9wdGlvbnMud2lkdGggPyBTdHJpbmcob3B0aW9ucy53aWR0aCkgOiBhcmdzLmRlZmF1bHRXaWR0aDtcbiAgICAgICAgdmFyIGZvcm1hdDQgPSBhcmdzLmZvcm1hdHNbd2lkdGhdIHx8IGFyZ3MuZm9ybWF0c1thcmdzLmRlZmF1bHRXaWR0aF07XG4gICAgICAgIHJldHVybiBmb3JtYXQ0O1xuICAgICAgfTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0TG9uZy9pbmRleC5qc1xudmFyIHJlcXVpcmVfZm9ybWF0TG9uZyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXRMb25nL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2J1aWxkRm9ybWF0TG9uZ0ZuKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgdmFyIGRhdGVGb3JtYXRzID0ge1xuICAgICAgZnVsbDogXCJFRUVFLCBNTU1NIGRvLCB5XCIsXG4gICAgICBsb25nOiBcIk1NTU0gZG8sIHlcIixcbiAgICAgIG1lZGl1bTogXCJNTU0gZCwgeVwiLFxuICAgICAgc2hvcnQ6IFwiTU0vZGQveXl5eVwiXG4gICAgfTtcbiAgICB2YXIgdGltZUZvcm1hdHMgPSB7XG4gICAgICBmdWxsOiBcImg6bW06c3MgYSB6enp6XCIsXG4gICAgICBsb25nOiBcImg6bW06c3MgYSB6XCIsXG4gICAgICBtZWRpdW06IFwiaDptbTpzcyBhXCIsXG4gICAgICBzaG9ydDogXCJoOm1tIGFcIlxuICAgIH07XG4gICAgdmFyIGRhdGVUaW1lRm9ybWF0cyA9IHtcbiAgICAgIGZ1bGw6IFwie3tkYXRlfX0gJ2F0JyB7e3RpbWV9fVwiLFxuICAgICAgbG9uZzogXCJ7e2RhdGV9fSAnYXQnIHt7dGltZX19XCIsXG4gICAgICBtZWRpdW06IFwie3tkYXRlfX0sIHt7dGltZX19XCIsXG4gICAgICBzaG9ydDogXCJ7e2RhdGV9fSwge3t0aW1lfX1cIlxuICAgIH07XG4gICAgdmFyIGZvcm1hdExvbmcgPSB7XG4gICAgICBkYXRlOiAoMCwgX2luZGV4LmRlZmF1bHQpKHtcbiAgICAgICAgZm9ybWF0czogZGF0ZUZvcm1hdHMsXG4gICAgICAgIGRlZmF1bHRXaWR0aDogXCJmdWxsXCJcbiAgICAgIH0pLFxuICAgICAgdGltZTogKDAsIF9pbmRleC5kZWZhdWx0KSh7XG4gICAgICAgIGZvcm1hdHM6IHRpbWVGb3JtYXRzLFxuICAgICAgICBkZWZhdWx0V2lkdGg6IFwiZnVsbFwiXG4gICAgICB9KSxcbiAgICAgIGRhdGVUaW1lOiAoMCwgX2luZGV4LmRlZmF1bHQpKHtcbiAgICAgICAgZm9ybWF0czogZGF0ZVRpbWVGb3JtYXRzLFxuICAgICAgICBkZWZhdWx0V2lkdGg6IFwiZnVsbFwiXG4gICAgICB9KVxuICAgIH07XG4gICAgdmFyIF9kZWZhdWx0ID0gZm9ybWF0TG9uZztcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXRSZWxhdGl2ZS9pbmRleC5qc1xudmFyIHJlcXVpcmVfZm9ybWF0UmVsYXRpdmUgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0UmVsYXRpdmUvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuICAgIHZhciBmb3JtYXRSZWxhdGl2ZUxvY2FsZSA9IHtcbiAgICAgIGxhc3RXZWVrOiBcIidsYXN0JyBlZWVlICdhdCcgcFwiLFxuICAgICAgeWVzdGVyZGF5OiBcIid5ZXN0ZXJkYXkgYXQnIHBcIixcbiAgICAgIHRvZGF5OiBcIid0b2RheSBhdCcgcFwiLFxuICAgICAgdG9tb3Jyb3c6IFwiJ3RvbW9ycm93IGF0JyBwXCIsXG4gICAgICBuZXh0V2VlazogXCJlZWVlICdhdCcgcFwiLFxuICAgICAgb3RoZXI6IFwiUFwiXG4gICAgfTtcbiAgICB2YXIgZm9ybWF0UmVsYXRpdmUgPSBmdW5jdGlvbih0b2tlbiwgX2RhdGUsIF9iYXNlRGF0ZSwgX29wdGlvbnMpIHtcbiAgICAgIHJldHVybiBmb3JtYXRSZWxhdGl2ZUxvY2FsZVt0b2tlbl07XG4gICAgfTtcbiAgICB2YXIgX2RlZmF1bHQgPSBmb3JtYXRSZWxhdGl2ZTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvX2xpYi9idWlsZExvY2FsaXplRm4vaW5kZXguanNcbnZhciByZXF1aXJlX2J1aWxkTG9jYWxpemVGbiA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvX2xpYi9idWlsZExvY2FsaXplRm4vaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gYnVpbGRMb2NhbGl6ZUZuO1xuICAgIGZ1bmN0aW9uIGJ1aWxkTG9jYWxpemVGbihhcmdzKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oZGlydHlJbmRleCwgZGlydHlPcHRpb25zKSB7XG4gICAgICAgIHZhciBvcHRpb25zID0gZGlydHlPcHRpb25zIHx8IHt9O1xuICAgICAgICB2YXIgY29udGV4dCA9IG9wdGlvbnMuY29udGV4dCA/IFN0cmluZyhvcHRpb25zLmNvbnRleHQpIDogXCJzdGFuZGFsb25lXCI7XG4gICAgICAgIHZhciB2YWx1ZXNBcnJheTtcbiAgICAgICAgaWYgKGNvbnRleHQgPT09IFwiZm9ybWF0dGluZ1wiICYmIGFyZ3MuZm9ybWF0dGluZ1ZhbHVlcykge1xuICAgICAgICAgIHZhciBkZWZhdWx0V2lkdGggPSBhcmdzLmRlZmF1bHRGb3JtYXR0aW5nV2lkdGggfHwgYXJncy5kZWZhdWx0V2lkdGg7XG4gICAgICAgICAgdmFyIHdpZHRoID0gb3B0aW9ucy53aWR0aCA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGRlZmF1bHRXaWR0aDtcbiAgICAgICAgICB2YWx1ZXNBcnJheSA9IGFyZ3MuZm9ybWF0dGluZ1ZhbHVlc1t3aWR0aF0gfHwgYXJncy5mb3JtYXR0aW5nVmFsdWVzW2RlZmF1bHRXaWR0aF07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIF9kZWZhdWx0V2lkdGggPSBhcmdzLmRlZmF1bHRXaWR0aDtcbiAgICAgICAgICB2YXIgX3dpZHRoID0gb3B0aW9ucy53aWR0aCA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGFyZ3MuZGVmYXVsdFdpZHRoO1xuICAgICAgICAgIHZhbHVlc0FycmF5ID0gYXJncy52YWx1ZXNbX3dpZHRoXSB8fCBhcmdzLnZhbHVlc1tfZGVmYXVsdFdpZHRoXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaW5kZXggPSBhcmdzLmFyZ3VtZW50Q2FsbGJhY2sgPyBhcmdzLmFyZ3VtZW50Q2FsbGJhY2soZGlydHlJbmRleCkgOiBkaXJ0eUluZGV4O1xuICAgICAgICByZXR1cm4gdmFsdWVzQXJyYXlbaW5kZXhdO1xuICAgICAgfTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvbG9jYWxpemUvaW5kZXguanNcbnZhciByZXF1aXJlX2xvY2FsaXplID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9lbi1VUy9fbGliL2xvY2FsaXplL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2J1aWxkTG9jYWxpemVGbigpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIHZhciBlcmFWYWx1ZXMgPSB7XG4gICAgICBuYXJyb3c6IFtcIkJcIiwgXCJBXCJdLFxuICAgICAgYWJicmV2aWF0ZWQ6IFtcIkJDXCIsIFwiQURcIl0sXG4gICAgICB3aWRlOiBbXCJCZWZvcmUgQ2hyaXN0XCIsIFwiQW5ubyBEb21pbmlcIl1cbiAgICB9O1xuICAgIHZhciBxdWFydGVyVmFsdWVzID0ge1xuICAgICAgbmFycm93OiBbXCIxXCIsIFwiMlwiLCBcIjNcIiwgXCI0XCJdLFxuICAgICAgYWJicmV2aWF0ZWQ6IFtcIlExXCIsIFwiUTJcIiwgXCJRM1wiLCBcIlE0XCJdLFxuICAgICAgd2lkZTogW1wiMXN0IHF1YXJ0ZXJcIiwgXCIybmQgcXVhcnRlclwiLCBcIjNyZCBxdWFydGVyXCIsIFwiNHRoIHF1YXJ0ZXJcIl1cbiAgICB9O1xuICAgIHZhciBtb250aFZhbHVlcyA9IHtcbiAgICAgIG5hcnJvdzogW1wiSlwiLCBcIkZcIiwgXCJNXCIsIFwiQVwiLCBcIk1cIiwgXCJKXCIsIFwiSlwiLCBcIkFcIiwgXCJTXCIsIFwiT1wiLCBcIk5cIiwgXCJEXCJdLFxuICAgICAgYWJicmV2aWF0ZWQ6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiXSxcbiAgICAgIHdpZGU6IFtcIkphbnVhcnlcIiwgXCJGZWJydWFyeVwiLCBcIk1hcmNoXCIsIFwiQXByaWxcIiwgXCJNYXlcIiwgXCJKdW5lXCIsIFwiSnVseVwiLCBcIkF1Z3VzdFwiLCBcIlNlcHRlbWJlclwiLCBcIk9jdG9iZXJcIiwgXCJOb3ZlbWJlclwiLCBcIkRlY2VtYmVyXCJdXG4gICAgfTtcbiAgICB2YXIgZGF5VmFsdWVzID0ge1xuICAgICAgbmFycm93OiBbXCJTXCIsIFwiTVwiLCBcIlRcIiwgXCJXXCIsIFwiVFwiLCBcIkZcIiwgXCJTXCJdLFxuICAgICAgc2hvcnQ6IFtcIlN1XCIsIFwiTW9cIiwgXCJUdVwiLCBcIldlXCIsIFwiVGhcIiwgXCJGclwiLCBcIlNhXCJdLFxuICAgICAgYWJicmV2aWF0ZWQ6IFtcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiXSxcbiAgICAgIHdpZGU6IFtcIlN1bmRheVwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCJdXG4gICAgfTtcbiAgICB2YXIgZGF5UGVyaW9kVmFsdWVzID0ge1xuICAgICAgbmFycm93OiB7XG4gICAgICAgIGFtOiBcImFcIixcbiAgICAgICAgcG06IFwicFwiLFxuICAgICAgICBtaWRuaWdodDogXCJtaVwiLFxuICAgICAgICBub29uOiBcIm5cIixcbiAgICAgICAgbW9ybmluZzogXCJtb3JuaW5nXCIsXG4gICAgICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICAgICAgZXZlbmluZzogXCJldmVuaW5nXCIsXG4gICAgICAgIG5pZ2h0OiBcIm5pZ2h0XCJcbiAgICAgIH0sXG4gICAgICBhYmJyZXZpYXRlZDoge1xuICAgICAgICBhbTogXCJBTVwiLFxuICAgICAgICBwbTogXCJQTVwiLFxuICAgICAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgICAgICBub29uOiBcIm5vb25cIixcbiAgICAgICAgbW9ybmluZzogXCJtb3JuaW5nXCIsXG4gICAgICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICAgICAgZXZlbmluZzogXCJldmVuaW5nXCIsXG4gICAgICAgIG5pZ2h0OiBcIm5pZ2h0XCJcbiAgICAgIH0sXG4gICAgICB3aWRlOiB7XG4gICAgICAgIGFtOiBcImEubS5cIixcbiAgICAgICAgcG06IFwicC5tLlwiLFxuICAgICAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgICAgICBub29uOiBcIm5vb25cIixcbiAgICAgICAgbW9ybmluZzogXCJtb3JuaW5nXCIsXG4gICAgICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICAgICAgZXZlbmluZzogXCJldmVuaW5nXCIsXG4gICAgICAgIG5pZ2h0OiBcIm5pZ2h0XCJcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBmb3JtYXR0aW5nRGF5UGVyaW9kVmFsdWVzID0ge1xuICAgICAgbmFycm93OiB7XG4gICAgICAgIGFtOiBcImFcIixcbiAgICAgICAgcG06IFwicFwiLFxuICAgICAgICBtaWRuaWdodDogXCJtaVwiLFxuICAgICAgICBub29uOiBcIm5cIixcbiAgICAgICAgbW9ybmluZzogXCJpbiB0aGUgbW9ybmluZ1wiLFxuICAgICAgICBhZnRlcm5vb246IFwiaW4gdGhlIGFmdGVybm9vblwiLFxuICAgICAgICBldmVuaW5nOiBcImluIHRoZSBldmVuaW5nXCIsXG4gICAgICAgIG5pZ2h0OiBcImF0IG5pZ2h0XCJcbiAgICAgIH0sXG4gICAgICBhYmJyZXZpYXRlZDoge1xuICAgICAgICBhbTogXCJBTVwiLFxuICAgICAgICBwbTogXCJQTVwiLFxuICAgICAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgICAgICBub29uOiBcIm5vb25cIixcbiAgICAgICAgbW9ybmluZzogXCJpbiB0aGUgbW9ybmluZ1wiLFxuICAgICAgICBhZnRlcm5vb246IFwiaW4gdGhlIGFmdGVybm9vblwiLFxuICAgICAgICBldmVuaW5nOiBcImluIHRoZSBldmVuaW5nXCIsXG4gICAgICAgIG5pZ2h0OiBcImF0IG5pZ2h0XCJcbiAgICAgIH0sXG4gICAgICB3aWRlOiB7XG4gICAgICAgIGFtOiBcImEubS5cIixcbiAgICAgICAgcG06IFwicC5tLlwiLFxuICAgICAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgICAgICBub29uOiBcIm5vb25cIixcbiAgICAgICAgbW9ybmluZzogXCJpbiB0aGUgbW9ybmluZ1wiLFxuICAgICAgICBhZnRlcm5vb246IFwiaW4gdGhlIGFmdGVybm9vblwiLFxuICAgICAgICBldmVuaW5nOiBcImluIHRoZSBldmVuaW5nXCIsXG4gICAgICAgIG5pZ2h0OiBcImF0IG5pZ2h0XCJcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBvcmRpbmFsTnVtYmVyID0gZnVuY3Rpb24oZGlydHlOdW1iZXIsIF9vcHRpb25zKSB7XG4gICAgICB2YXIgbnVtYmVyID0gTnVtYmVyKGRpcnR5TnVtYmVyKTtcbiAgICAgIHZhciByZW0xMDAgPSBudW1iZXIgJSAxMDA7XG4gICAgICBpZiAocmVtMTAwID4gMjAgfHwgcmVtMTAwIDwgMTApIHtcbiAgICAgICAgc3dpdGNoIChyZW0xMDAgJSAxMCkge1xuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHJldHVybiBudW1iZXIgKyBcInN0XCI7XG4gICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgcmV0dXJuIG51bWJlciArIFwibmRcIjtcbiAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICByZXR1cm4gbnVtYmVyICsgXCJyZFwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVtYmVyICsgXCJ0aFwiO1xuICAgIH07XG4gICAgdmFyIGxvY2FsaXplID0ge1xuICAgICAgb3JkaW5hbE51bWJlcixcbiAgICAgIGVyYTogKDAsIF9pbmRleC5kZWZhdWx0KSh7XG4gICAgICAgIHZhbHVlczogZXJhVmFsdWVzLFxuICAgICAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiXG4gICAgICB9KSxcbiAgICAgIHF1YXJ0ZXI6ICgwLCBfaW5kZXguZGVmYXVsdCkoe1xuICAgICAgICB2YWx1ZXM6IHF1YXJ0ZXJWYWx1ZXMsXG4gICAgICAgIGRlZmF1bHRXaWR0aDogXCJ3aWRlXCIsXG4gICAgICAgIGFyZ3VtZW50Q2FsbGJhY2s6IGZ1bmN0aW9uKHF1YXJ0ZXIpIHtcbiAgICAgICAgICByZXR1cm4gcXVhcnRlciAtIDE7XG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAgbW9udGg6ICgwLCBfaW5kZXguZGVmYXVsdCkoe1xuICAgICAgICB2YWx1ZXM6IG1vbnRoVmFsdWVzLFxuICAgICAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiXG4gICAgICB9KSxcbiAgICAgIGRheTogKDAsIF9pbmRleC5kZWZhdWx0KSh7XG4gICAgICAgIHZhbHVlczogZGF5VmFsdWVzLFxuICAgICAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiXG4gICAgICB9KSxcbiAgICAgIGRheVBlcmlvZDogKDAsIF9pbmRleC5kZWZhdWx0KSh7XG4gICAgICAgIHZhbHVlczogZGF5UGVyaW9kVmFsdWVzLFxuICAgICAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiLFxuICAgICAgICBmb3JtYXR0aW5nVmFsdWVzOiBmb3JtYXR0aW5nRGF5UGVyaW9kVmFsdWVzLFxuICAgICAgICBkZWZhdWx0Rm9ybWF0dGluZ1dpZHRoOiBcIndpZGVcIlxuICAgICAgfSlcbiAgICB9O1xuICAgIHZhciBfZGVmYXVsdCA9IGxvY2FsaXplO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9fbGliL2J1aWxkTWF0Y2hGbi9pbmRleC5qc1xudmFyIHJlcXVpcmVfYnVpbGRNYXRjaEZuID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9fbGliL2J1aWxkTWF0Y2hGbi9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBidWlsZE1hdGNoRm47XG4gICAgZnVuY3Rpb24gYnVpbGRNYXRjaEZuKGFyZ3MpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHZvaWQgMCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgICAgICB2YXIgd2lkdGggPSBvcHRpb25zLndpZHRoO1xuICAgICAgICB2YXIgbWF0Y2hQYXR0ZXJuID0gd2lkdGggJiYgYXJncy5tYXRjaFBhdHRlcm5zW3dpZHRoXSB8fCBhcmdzLm1hdGNoUGF0dGVybnNbYXJncy5kZWZhdWx0TWF0Y2hXaWR0aF07XG4gICAgICAgIHZhciBtYXRjaFJlc3VsdCA9IHN0cmluZy5tYXRjaChtYXRjaFBhdHRlcm4pO1xuICAgICAgICBpZiAoIW1hdGNoUmVzdWx0KSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1hdGNoZWRTdHJpbmcgPSBtYXRjaFJlc3VsdFswXTtcbiAgICAgICAgdmFyIHBhcnNlUGF0dGVybnMgPSB3aWR0aCAmJiBhcmdzLnBhcnNlUGF0dGVybnNbd2lkdGhdIHx8IGFyZ3MucGFyc2VQYXR0ZXJuc1thcmdzLmRlZmF1bHRQYXJzZVdpZHRoXTtcbiAgICAgICAgdmFyIGtleSA9IEFycmF5LmlzQXJyYXkocGFyc2VQYXR0ZXJucykgPyBmaW5kSW5kZXgocGFyc2VQYXR0ZXJucywgZnVuY3Rpb24ocGF0dGVybikge1xuICAgICAgICAgIHJldHVybiBwYXR0ZXJuLnRlc3QobWF0Y2hlZFN0cmluZyk7XG4gICAgICAgIH0pIDogZmluZEtleShwYXJzZVBhdHRlcm5zLCBmdW5jdGlvbihwYXR0ZXJuKSB7XG4gICAgICAgICAgcmV0dXJuIHBhdHRlcm4udGVzdChtYXRjaGVkU3RyaW5nKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciB2YWx1ZTtcbiAgICAgICAgdmFsdWUgPSBhcmdzLnZhbHVlQ2FsbGJhY2sgPyBhcmdzLnZhbHVlQ2FsbGJhY2soa2V5KSA6IGtleTtcbiAgICAgICAgdmFsdWUgPSBvcHRpb25zLnZhbHVlQ2FsbGJhY2sgPyBvcHRpb25zLnZhbHVlQ2FsbGJhY2sodmFsdWUpIDogdmFsdWU7XG4gICAgICAgIHZhciByZXN0ID0gc3RyaW5nLnNsaWNlKG1hdGNoZWRTdHJpbmcubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICByZXN0XG4gICAgICAgIH07XG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBmaW5kS2V5KG9iamVjdCwgcHJlZGljYXRlKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSAmJiBwcmVkaWNhdGUob2JqZWN0W2tleV0pKSB7XG4gICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZmluZEluZGV4KGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgICAgIGZvciAodmFyIGtleSA9IDA7IGtleSA8IGFycmF5Lmxlbmd0aDsga2V5KyspIHtcbiAgICAgICAgaWYgKHByZWRpY2F0ZShhcnJheVtrZXldKSkge1xuICAgICAgICAgIHJldHVybiBrZXk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9fbGliL2J1aWxkTWF0Y2hQYXR0ZXJuRm4vaW5kZXguanNcbnZhciByZXF1aXJlX2J1aWxkTWF0Y2hQYXR0ZXJuRm4gPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL19saWIvYnVpbGRNYXRjaFBhdHRlcm5Gbi9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBidWlsZE1hdGNoUGF0dGVybkZuO1xuICAgIGZ1bmN0aW9uIGJ1aWxkTWF0Y2hQYXR0ZXJuRm4oYXJncykge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdm9pZCAwID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgICAgIHZhciBtYXRjaFJlc3VsdCA9IHN0cmluZy5tYXRjaChhcmdzLm1hdGNoUGF0dGVybik7XG4gICAgICAgIGlmICghbWF0Y2hSZXN1bHQpXG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHZhciBtYXRjaGVkU3RyaW5nID0gbWF0Y2hSZXN1bHRbMF07XG4gICAgICAgIHZhciBwYXJzZVJlc3VsdCA9IHN0cmluZy5tYXRjaChhcmdzLnBhcnNlUGF0dGVybik7XG4gICAgICAgIGlmICghcGFyc2VSZXN1bHQpXG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHZhciB2YWx1ZSA9IGFyZ3MudmFsdWVDYWxsYmFjayA/IGFyZ3MudmFsdWVDYWxsYmFjayhwYXJzZVJlc3VsdFswXSkgOiBwYXJzZVJlc3VsdFswXTtcbiAgICAgICAgdmFsdWUgPSBvcHRpb25zLnZhbHVlQ2FsbGJhY2sgPyBvcHRpb25zLnZhbHVlQ2FsbGJhY2sodmFsdWUpIDogdmFsdWU7XG4gICAgICAgIHZhciByZXN0ID0gc3RyaW5nLnNsaWNlKG1hdGNoZWRTdHJpbmcubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICByZXN0XG4gICAgICAgIH07XG4gICAgICB9O1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9tYXRjaC9pbmRleC5qc1xudmFyIHJlcXVpcmVfbWF0Y2ggPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvbWF0Y2gvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfYnVpbGRNYXRjaEZuKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2J1aWxkTWF0Y2hQYXR0ZXJuRm4oKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICB2YXIgbWF0Y2hPcmRpbmFsTnVtYmVyUGF0dGVybiA9IC9eKFxcZCspKHRofHN0fG5kfHJkKT8vaTtcbiAgICB2YXIgcGFyc2VPcmRpbmFsTnVtYmVyUGF0dGVybiA9IC9cXGQrL2k7XG4gICAgdmFyIG1hdGNoRXJhUGF0dGVybnMgPSB7XG4gICAgICBuYXJyb3c6IC9eKGJ8YSkvaSxcbiAgICAgIGFiYnJldmlhdGVkOiAvXihiXFwuP1xccz9jXFwuP3xiXFwuP1xccz9jXFwuP1xccz9lXFwuP3xhXFwuP1xccz9kXFwuP3xjXFwuP1xccz9lXFwuPykvaSxcbiAgICAgIHdpZGU6IC9eKGJlZm9yZSBjaHJpc3R8YmVmb3JlIGNvbW1vbiBlcmF8YW5ubyBkb21pbml8Y29tbW9uIGVyYSkvaVxuICAgIH07XG4gICAgdmFyIHBhcnNlRXJhUGF0dGVybnMgPSB7XG4gICAgICBhbnk6IFsvXmIvaSwgL14oYXxjKS9pXVxuICAgIH07XG4gICAgdmFyIG1hdGNoUXVhcnRlclBhdHRlcm5zID0ge1xuICAgICAgbmFycm93OiAvXlsxMjM0XS9pLFxuICAgICAgYWJicmV2aWF0ZWQ6IC9ecVsxMjM0XS9pLFxuICAgICAgd2lkZTogL15bMTIzNF0odGh8c3R8bmR8cmQpPyBxdWFydGVyL2lcbiAgICB9O1xuICAgIHZhciBwYXJzZVF1YXJ0ZXJQYXR0ZXJucyA9IHtcbiAgICAgIGFueTogWy8xL2ksIC8yL2ksIC8zL2ksIC80L2ldXG4gICAgfTtcbiAgICB2YXIgbWF0Y2hNb250aFBhdHRlcm5zID0ge1xuICAgICAgbmFycm93OiAvXltqZm1hc29uZF0vaSxcbiAgICAgIGFiYnJldmlhdGVkOiAvXihqYW58ZmVifG1hcnxhcHJ8bWF5fGp1bnxqdWx8YXVnfHNlcHxvY3R8bm92fGRlYykvaSxcbiAgICAgIHdpZGU6IC9eKGphbnVhcnl8ZmVicnVhcnl8bWFyY2h8YXByaWx8bWF5fGp1bmV8anVseXxhdWd1c3R8c2VwdGVtYmVyfG9jdG9iZXJ8bm92ZW1iZXJ8ZGVjZW1iZXIpL2lcbiAgICB9O1xuICAgIHZhciBwYXJzZU1vbnRoUGF0dGVybnMgPSB7XG4gICAgICBuYXJyb3c6IFsvXmovaSwgL15mL2ksIC9ebS9pLCAvXmEvaSwgL15tL2ksIC9eai9pLCAvXmovaSwgL15hL2ksIC9ecy9pLCAvXm8vaSwgL15uL2ksIC9eZC9pXSxcbiAgICAgIGFueTogWy9eamEvaSwgL15mL2ksIC9ebWFyL2ksIC9eYXAvaSwgL15tYXkvaSwgL15qdW4vaSwgL15qdWwvaSwgL15hdS9pLCAvXnMvaSwgL15vL2ksIC9ebi9pLCAvXmQvaV1cbiAgICB9O1xuICAgIHZhciBtYXRjaERheVBhdHRlcm5zID0ge1xuICAgICAgbmFycm93OiAvXltzbXR3Zl0vaSxcbiAgICAgIHNob3J0OiAvXihzdXxtb3x0dXx3ZXx0aHxmcnxzYSkvaSxcbiAgICAgIGFiYnJldmlhdGVkOiAvXihzdW58bW9ufHR1ZXx3ZWR8dGh1fGZyaXxzYXQpL2ksXG4gICAgICB3aWRlOiAvXihzdW5kYXl8bW9uZGF5fHR1ZXNkYXl8d2VkbmVzZGF5fHRodXJzZGF5fGZyaWRheXxzYXR1cmRheSkvaVxuICAgIH07XG4gICAgdmFyIHBhcnNlRGF5UGF0dGVybnMgPSB7XG4gICAgICBuYXJyb3c6IFsvXnMvaSwgL15tL2ksIC9edC9pLCAvXncvaSwgL150L2ksIC9eZi9pLCAvXnMvaV0sXG4gICAgICBhbnk6IFsvXnN1L2ksIC9ebS9pLCAvXnR1L2ksIC9edy9pLCAvXnRoL2ksIC9eZi9pLCAvXnNhL2ldXG4gICAgfTtcbiAgICB2YXIgbWF0Y2hEYXlQZXJpb2RQYXR0ZXJucyA9IHtcbiAgICAgIG5hcnJvdzogL14oYXxwfG1pfG58KGluIHRoZXxhdCkgKG1vcm5pbmd8YWZ0ZXJub29ufGV2ZW5pbmd8bmlnaHQpKS9pLFxuICAgICAgYW55OiAvXihbYXBdXFwuP1xccz9tXFwuP3xtaWRuaWdodHxub29ufChpbiB0aGV8YXQpIChtb3JuaW5nfGFmdGVybm9vbnxldmVuaW5nfG5pZ2h0KSkvaVxuICAgIH07XG4gICAgdmFyIHBhcnNlRGF5UGVyaW9kUGF0dGVybnMgPSB7XG4gICAgICBhbnk6IHtcbiAgICAgICAgYW06IC9eYS9pLFxuICAgICAgICBwbTogL15wL2ksXG4gICAgICAgIG1pZG5pZ2h0OiAvXm1pL2ksXG4gICAgICAgIG5vb246IC9ebm8vaSxcbiAgICAgICAgbW9ybmluZzogL21vcm5pbmcvaSxcbiAgICAgICAgYWZ0ZXJub29uOiAvYWZ0ZXJub29uL2ksXG4gICAgICAgIGV2ZW5pbmc6IC9ldmVuaW5nL2ksXG4gICAgICAgIG5pZ2h0OiAvbmlnaHQvaVxuICAgICAgfVxuICAgIH07XG4gICAgdmFyIG1hdGNoID0ge1xuICAgICAgb3JkaW5hbE51bWJlcjogKDAsIF9pbmRleDIuZGVmYXVsdCkoe1xuICAgICAgICBtYXRjaFBhdHRlcm46IG1hdGNoT3JkaW5hbE51bWJlclBhdHRlcm4sXG4gICAgICAgIHBhcnNlUGF0dGVybjogcGFyc2VPcmRpbmFsTnVtYmVyUGF0dGVybixcbiAgICAgICAgdmFsdWVDYWxsYmFjazogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICBlcmE6ICgwLCBfaW5kZXguZGVmYXVsdCkoe1xuICAgICAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaEVyYVBhdHRlcm5zLFxuICAgICAgICBkZWZhdWx0TWF0Y2hXaWR0aDogXCJ3aWRlXCIsXG4gICAgICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRXJhUGF0dGVybnMsXG4gICAgICAgIGRlZmF1bHRQYXJzZVdpZHRoOiBcImFueVwiXG4gICAgICB9KSxcbiAgICAgIHF1YXJ0ZXI6ICgwLCBfaW5kZXguZGVmYXVsdCkoe1xuICAgICAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaFF1YXJ0ZXJQYXR0ZXJucyxcbiAgICAgICAgZGVmYXVsdE1hdGNoV2lkdGg6IFwid2lkZVwiLFxuICAgICAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZVF1YXJ0ZXJQYXR0ZXJucyxcbiAgICAgICAgZGVmYXVsdFBhcnNlV2lkdGg6IFwiYW55XCIsXG4gICAgICAgIHZhbHVlQ2FsbGJhY2s6IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgcmV0dXJuIGluZGV4ICsgMTtcbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICBtb250aDogKDAsIF9pbmRleC5kZWZhdWx0KSh7XG4gICAgICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoTW9udGhQYXR0ZXJucyxcbiAgICAgICAgZGVmYXVsdE1hdGNoV2lkdGg6IFwid2lkZVwiLFxuICAgICAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZU1vbnRoUGF0dGVybnMsXG4gICAgICAgIGRlZmF1bHRQYXJzZVdpZHRoOiBcImFueVwiXG4gICAgICB9KSxcbiAgICAgIGRheTogKDAsIF9pbmRleC5kZWZhdWx0KSh7XG4gICAgICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoRGF5UGF0dGVybnMsXG4gICAgICAgIGRlZmF1bHRNYXRjaFdpZHRoOiBcIndpZGVcIixcbiAgICAgICAgcGFyc2VQYXR0ZXJuczogcGFyc2VEYXlQYXR0ZXJucyxcbiAgICAgICAgZGVmYXVsdFBhcnNlV2lkdGg6IFwiYW55XCJcbiAgICAgIH0pLFxuICAgICAgZGF5UGVyaW9kOiAoMCwgX2luZGV4LmRlZmF1bHQpKHtcbiAgICAgICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hEYXlQZXJpb2RQYXR0ZXJucyxcbiAgICAgICAgZGVmYXVsdE1hdGNoV2lkdGg6IFwiYW55XCIsXG4gICAgICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRGF5UGVyaW9kUGF0dGVybnMsXG4gICAgICAgIGRlZmF1bHRQYXJzZVdpZHRoOiBcImFueVwiXG4gICAgICB9KVxuICAgIH07XG4gICAgdmFyIF9kZWZhdWx0ID0gbWF0Y2g7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL2luZGV4LmpzXG52YXIgcmVxdWlyZV9lbl9VUyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZm9ybWF0RGlzdGFuY2UoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZm9ybWF0TG9uZygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9mb3JtYXRSZWxhdGl2ZSgpKTtcbiAgICB2YXIgX2luZGV4NCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9sb2NhbGl6ZSgpKTtcbiAgICB2YXIgX2luZGV4NSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9tYXRjaCgpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIHZhciBsb2NhbGUgPSB7XG4gICAgICBjb2RlOiBcImVuLVVTXCIsXG4gICAgICBmb3JtYXREaXN0YW5jZTogX2luZGV4LmRlZmF1bHQsXG4gICAgICBmb3JtYXRMb25nOiBfaW5kZXgyLmRlZmF1bHQsXG4gICAgICBmb3JtYXRSZWxhdGl2ZTogX2luZGV4My5kZWZhdWx0LFxuICAgICAgbG9jYWxpemU6IF9pbmRleDQuZGVmYXVsdCxcbiAgICAgIG1hdGNoOiBfaW5kZXg1LmRlZmF1bHQsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHdlZWtTdGFydHNPbjogMCxcbiAgICAgICAgZmlyc3RXZWVrQ29udGFpbnNEYXRlOiAxXG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgX2RlZmF1bHQgPSBsb2NhbGU7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi90b0ludGVnZXIvaW5kZXguanNcbnZhciByZXF1aXJlX3RvSW50ZWdlciA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL3RvSW50ZWdlci9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSB0b0ludGVnZXI7XG4gICAgZnVuY3Rpb24gdG9JbnRlZ2VyKGRpcnR5TnVtYmVyKSB7XG4gICAgICBpZiAoZGlydHlOdW1iZXIgPT09IG51bGwgfHwgZGlydHlOdW1iZXIgPT09IHRydWUgfHwgZGlydHlOdW1iZXIgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBOYU47XG4gICAgICB9XG4gICAgICB2YXIgbnVtYmVyID0gTnVtYmVyKGRpcnR5TnVtYmVyKTtcbiAgICAgIGlmIChpc05hTihudW1iZXIpKSB7XG4gICAgICAgIHJldHVybiBudW1iZXI7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVtYmVyIDwgMCA/IE1hdGguY2VpbChudW1iZXIpIDogTWF0aC5mbG9vcihudW1iZXIpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9hZGRNaWxsaXNlY29uZHMvaW5kZXguanNcbnZhciByZXF1aXJlX2FkZE1pbGxpc2Vjb25kcyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9hZGRNaWxsaXNlY29uZHMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gYWRkTWlsbGlzZWNvbmRzO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9JbnRlZ2VyKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBhZGRNaWxsaXNlY29uZHMoZGlydHlEYXRlLCBkaXJ0eUFtb3VudCkge1xuICAgICAgKDAsIF9pbmRleDMuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIHZhciB0aW1lc3RhbXAgPSAoMCwgX2luZGV4Mi5kZWZhdWx0KShkaXJ0eURhdGUpLmdldFRpbWUoKTtcbiAgICAgIHZhciBhbW91bnQgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5QW1vdW50KTtcbiAgICAgIHJldHVybiBuZXcgRGF0ZSh0aW1lc3RhbXAgKyBhbW91bnQpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9zdWJNaWxsaXNlY29uZHMvaW5kZXguanNcbnZhciByZXF1aXJlX3N1Yk1pbGxpc2Vjb25kcyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9zdWJNaWxsaXNlY29uZHMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gc3ViTWlsbGlzZWNvbmRzO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9JbnRlZ2VyKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2FkZE1pbGxpc2Vjb25kcygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdWJNaWxsaXNlY29uZHMoZGlydHlEYXRlLCBkaXJ0eUFtb3VudCkge1xuICAgICAgKDAsIF9pbmRleDMuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBhbW91bnQgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5QW1vdW50KTtcbiAgICAgIHJldHVybiAoMCwgX2luZGV4Mi5kZWZhdWx0KShkaXJ0eURhdGUsIC1hbW91bnQpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2dldFVUQ0RheU9mWWVhci9pbmRleC5qc1xudmFyIHJlcXVpcmVfZ2V0VVRDRGF5T2ZZZWFyID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0VVRDRGF5T2ZZZWFyL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IGdldFVUQ0RheU9mWWVhcjtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICB2YXIgTUlMTElTRUNPTkRTX0lOX0RBWSA9IDg2NGU1O1xuICAgIGZ1bmN0aW9uIGdldFVUQ0RheU9mWWVhcihkaXJ0eURhdGUpIHtcbiAgICAgICgwLCBfaW5kZXgyLmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlKTtcbiAgICAgIHZhciB0aW1lc3RhbXAgPSBkYXRlLmdldFRpbWUoKTtcbiAgICAgIGRhdGUuc2V0VVRDTW9udGgoMCwgMSk7XG4gICAgICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICAgICAgdmFyIHN0YXJ0T2ZZZWFyVGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gICAgICB2YXIgZGlmZmVyZW5jZSA9IHRpbWVzdGFtcCAtIHN0YXJ0T2ZZZWFyVGltZXN0YW1wO1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoZGlmZmVyZW5jZSAvIE1JTExJU0VDT05EU19JTl9EQVkpICsgMTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9zdGFydE9mVVRDSVNPV2Vlay9pbmRleC5qc1xudmFyIHJlcXVpcmVfc3RhcnRPZlVUQ0lTT1dlZWsgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9zdGFydE9mVVRDSVNPV2Vlay9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBzdGFydE9mVVRDSVNPV2VlaztcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdGFydE9mVVRDSVNPV2VlayhkaXJ0eURhdGUpIHtcbiAgICAgICgwLCBfaW5kZXgyLmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgd2Vla1N0YXJ0c09uID0gMTtcbiAgICAgIHZhciBkYXRlID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0VVRDRGF5KCk7XG4gICAgICB2YXIgZGlmZiA9IChkYXkgPCB3ZWVrU3RhcnRzT24gPyA3IDogMCkgKyBkYXkgLSB3ZWVrU3RhcnRzT247XG4gICAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgLSBkaWZmKTtcbiAgICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9nZXRVVENJU09XZWVrWWVhci9pbmRleC5qc1xudmFyIHJlcXVpcmVfZ2V0VVRDSVNPV2Vla1llYXIgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9nZXRVVENJU09XZWVrWWVhci9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBnZXRVVENJU09XZWVrWWVhcjtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfc3RhcnRPZlVUQ0lTT1dlZWsoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRVVENJU09XZWVrWWVhcihkaXJ0eURhdGUpIHtcbiAgICAgICgwLCBfaW5kZXgyLmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlKTtcbiAgICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xuICAgICAgdmFyIGZvdXJ0aE9mSmFudWFyeU9mTmV4dFllYXIgPSBuZXcgRGF0ZSgwKTtcbiAgICAgIGZvdXJ0aE9mSmFudWFyeU9mTmV4dFllYXIuc2V0VVRDRnVsbFllYXIoeWVhciArIDEsIDAsIDQpO1xuICAgICAgZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhci5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgIHZhciBzdGFydE9mTmV4dFllYXIgPSAoMCwgX2luZGV4My5kZWZhdWx0KShmb3VydGhPZkphbnVhcnlPZk5leHRZZWFyKTtcbiAgICAgIHZhciBmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyID0gbmV3IERhdGUoMCk7XG4gICAgICBmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyLnNldFVUQ0Z1bGxZZWFyKHllYXIsIDAsIDQpO1xuICAgICAgZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhci5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgIHZhciBzdGFydE9mVGhpc1llYXIgPSAoMCwgX2luZGV4My5kZWZhdWx0KShmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyKTtcbiAgICAgIGlmIChkYXRlLmdldFRpbWUoKSA+PSBzdGFydE9mTmV4dFllYXIuZ2V0VGltZSgpKSB7XG4gICAgICAgIHJldHVybiB5ZWFyICsgMTtcbiAgICAgIH0gZWxzZSBpZiAoZGF0ZS5nZXRUaW1lKCkgPj0gc3RhcnRPZlRoaXNZZWFyLmdldFRpbWUoKSkge1xuICAgICAgICByZXR1cm4geWVhcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB5ZWFyIC0gMTtcbiAgICAgIH1cbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9zdGFydE9mVVRDSVNPV2Vla1llYXIvaW5kZXguanNcbnZhciByZXF1aXJlX3N0YXJ0T2ZVVENJU09XZWVrWWVhciA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL3N0YXJ0T2ZVVENJU09XZWVrWWVhci9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBzdGFydE9mVVRDSVNPV2Vla1llYXI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9nZXRVVENJU09XZWVrWWVhcigpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9zdGFydE9mVVRDSVNPV2VlaygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdGFydE9mVVRDSVNPV2Vla1llYXIoZGlydHlEYXRlKSB7XG4gICAgICAoMCwgX2luZGV4My5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIHllYXIgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICB2YXIgZm91cnRoT2ZKYW51YXJ5ID0gbmV3IERhdGUoMCk7XG4gICAgICBmb3VydGhPZkphbnVhcnkuc2V0VVRDRnVsbFllYXIoeWVhciwgMCwgNCk7XG4gICAgICBmb3VydGhPZkphbnVhcnkuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXgyLmRlZmF1bHQpKGZvdXJ0aE9mSmFudWFyeSk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9nZXRVVENJU09XZWVrL2luZGV4LmpzXG52YXIgcmVxdWlyZV9nZXRVVENJU09XZWVrID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0VVRDSVNPV2Vlay9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBnZXRVVENJU09XZWVrO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3N0YXJ0T2ZVVENJU09XZWVrKCkpO1xuICAgIHZhciBfaW5kZXgzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3N0YXJ0T2ZVVENJU09XZWVrWWVhcigpKTtcbiAgICB2YXIgX2luZGV4NCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICB2YXIgTUlMTElTRUNPTkRTX0lOX1dFRUsgPSA2MDQ4ZTU7XG4gICAgZnVuY3Rpb24gZ2V0VVRDSVNPV2VlayhkaXJ0eURhdGUpIHtcbiAgICAgICgwLCBfaW5kZXg0LmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlKTtcbiAgICAgIHZhciBkaWZmID0gKDAsIF9pbmRleDIuZGVmYXVsdCkoZGF0ZSkuZ2V0VGltZSgpIC0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZGF0ZSkuZ2V0VGltZSgpO1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQoZGlmZiAvIE1JTExJU0VDT05EU19JTl9XRUVLKSArIDE7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvc3RhcnRPZlVUQ1dlZWsvaW5kZXguanNcbnZhciByZXF1aXJlX3N0YXJ0T2ZVVENXZWVrID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvc3RhcnRPZlVUQ1dlZWsvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gc3RhcnRPZlVUQ1dlZWs7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIHZhciBfaW5kZXgzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvSW50ZWdlcigpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0YXJ0T2ZVVENXZWVrKGRpcnR5RGF0ZSwgZGlydHlPcHRpb25zKSB7XG4gICAgICAoMCwgX2luZGV4Mi5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIG9wdGlvbnMgPSBkaXJ0eU9wdGlvbnMgfHwge307XG4gICAgICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGU7XG4gICAgICB2YXIgbG9jYWxlV2Vla1N0YXJ0c09uID0gbG9jYWxlICYmIGxvY2FsZS5vcHRpb25zICYmIGxvY2FsZS5vcHRpb25zLndlZWtTdGFydHNPbjtcbiAgICAgIHZhciBkZWZhdWx0V2Vla1N0YXJ0c09uID0gbG9jYWxlV2Vla1N0YXJ0c09uID09IG51bGwgPyAwIDogKDAsIF9pbmRleDMuZGVmYXVsdCkobG9jYWxlV2Vla1N0YXJ0c09uKTtcbiAgICAgIHZhciB3ZWVrU3RhcnRzT24gPSBvcHRpb25zLndlZWtTdGFydHNPbiA9PSBudWxsID8gZGVmYXVsdFdlZWtTdGFydHNPbiA6ICgwLCBfaW5kZXgzLmRlZmF1bHQpKG9wdGlvbnMud2Vla1N0YXJ0c09uKTtcbiAgICAgIGlmICghKHdlZWtTdGFydHNPbiA+PSAwICYmIHdlZWtTdGFydHNPbiA8PSA2KSkge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIndlZWtTdGFydHNPbiBtdXN0IGJlIGJldHdlZW4gMCBhbmQgNiBpbmNsdXNpdmVseVwiKTtcbiAgICAgIH1cbiAgICAgIHZhciBkYXRlID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0VVRDRGF5KCk7XG4gICAgICB2YXIgZGlmZiA9IChkYXkgPCB3ZWVrU3RhcnRzT24gPyA3IDogMCkgKyBkYXkgLSB3ZWVrU3RhcnRzT247XG4gICAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgLSBkaWZmKTtcbiAgICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9nZXRVVENXZWVrWWVhci9pbmRleC5qc1xudmFyIHJlcXVpcmVfZ2V0VVRDV2Vla1llYXIgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9nZXRVVENXZWVrWWVhci9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBnZXRVVENXZWVrWWVhcjtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfc3RhcnRPZlVUQ1dlZWsoKSk7XG4gICAgdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9JbnRlZ2VyKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0VVRDV2Vla1llYXIoZGlydHlEYXRlLCBkaXJ0eU9wdGlvbnMpIHtcbiAgICAgICgwLCBfaW5kZXgyLmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlKTtcbiAgICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xuICAgICAgdmFyIG9wdGlvbnMgPSBkaXJ0eU9wdGlvbnMgfHwge307XG4gICAgICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGU7XG4gICAgICB2YXIgbG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlID0gbG9jYWxlICYmIGxvY2FsZS5vcHRpb25zICYmIGxvY2FsZS5vcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZTtcbiAgICAgIHZhciBkZWZhdWx0Rmlyc3RXZWVrQ29udGFpbnNEYXRlID0gbG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlID09IG51bGwgPyAxIDogKDAsIF9pbmRleDQuZGVmYXVsdCkobG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgICAgIHZhciBmaXJzdFdlZWtDb250YWluc0RhdGUgPSBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9PSBudWxsID8gZGVmYXVsdEZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA6ICgwLCBfaW5kZXg0LmRlZmF1bHQpKG9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgICAgIGlmICghKGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA+PSAxICYmIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA8PSA3KSkge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcImZpcnN0V2Vla0NvbnRhaW5zRGF0ZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgNyBpbmNsdXNpdmVseVwiKTtcbiAgICAgIH1cbiAgICAgIHZhciBmaXJzdFdlZWtPZk5leHRZZWFyID0gbmV3IERhdGUoMCk7XG4gICAgICBmaXJzdFdlZWtPZk5leHRZZWFyLnNldFVUQ0Z1bGxZZWFyKHllYXIgKyAxLCAwLCBmaXJzdFdlZWtDb250YWluc0RhdGUpO1xuICAgICAgZmlyc3RXZWVrT2ZOZXh0WWVhci5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgIHZhciBzdGFydE9mTmV4dFllYXIgPSAoMCwgX2luZGV4My5kZWZhdWx0KShmaXJzdFdlZWtPZk5leHRZZWFyLCBkaXJ0eU9wdGlvbnMpO1xuICAgICAgdmFyIGZpcnN0V2Vla09mVGhpc1llYXIgPSBuZXcgRGF0ZSgwKTtcbiAgICAgIGZpcnN0V2Vla09mVGhpc1llYXIuc2V0VVRDRnVsbFllYXIoeWVhciwgMCwgZmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgICAgIGZpcnN0V2Vla09mVGhpc1llYXIuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICB2YXIgc3RhcnRPZlRoaXNZZWFyID0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZmlyc3RXZWVrT2ZUaGlzWWVhciwgZGlydHlPcHRpb25zKTtcbiAgICAgIGlmIChkYXRlLmdldFRpbWUoKSA+PSBzdGFydE9mTmV4dFllYXIuZ2V0VGltZSgpKSB7XG4gICAgICAgIHJldHVybiB5ZWFyICsgMTtcbiAgICAgIH0gZWxzZSBpZiAoZGF0ZS5nZXRUaW1lKCkgPj0gc3RhcnRPZlRoaXNZZWFyLmdldFRpbWUoKSkge1xuICAgICAgICByZXR1cm4geWVhcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB5ZWFyIC0gMTtcbiAgICAgIH1cbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9zdGFydE9mVVRDV2Vla1llYXIvaW5kZXguanNcbnZhciByZXF1aXJlX3N0YXJ0T2ZVVENXZWVrWWVhciA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL3N0YXJ0T2ZVVENXZWVrWWVhci9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBzdGFydE9mVVRDV2Vla1llYXI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9nZXRVVENXZWVrWWVhcigpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfc3RhcnRPZlVUQ1dlZWsoKSk7XG4gICAgdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9JbnRlZ2VyKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3RhcnRPZlVUQ1dlZWtZZWFyKGRpcnR5RGF0ZSwgZGlydHlPcHRpb25zKSB7XG4gICAgICAoMCwgX2luZGV4Mi5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIG9wdGlvbnMgPSBkaXJ0eU9wdGlvbnMgfHwge307XG4gICAgICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGU7XG4gICAgICB2YXIgbG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlID0gbG9jYWxlICYmIGxvY2FsZS5vcHRpb25zICYmIGxvY2FsZS5vcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZTtcbiAgICAgIHZhciBkZWZhdWx0Rmlyc3RXZWVrQ29udGFpbnNEYXRlID0gbG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlID09IG51bGwgPyAxIDogKDAsIF9pbmRleDQuZGVmYXVsdCkobG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgICAgIHZhciBmaXJzdFdlZWtDb250YWluc0RhdGUgPSBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9PSBudWxsID8gZGVmYXVsdEZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA6ICgwLCBfaW5kZXg0LmRlZmF1bHQpKG9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgICAgIHZhciB5ZWFyID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUsIGRpcnR5T3B0aW9ucyk7XG4gICAgICB2YXIgZmlyc3RXZWVrID0gbmV3IERhdGUoMCk7XG4gICAgICBmaXJzdFdlZWsuc2V0VVRDRnVsbFllYXIoeWVhciwgMCwgZmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgICAgIGZpcnN0V2Vlay5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgIHZhciBkYXRlID0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZmlyc3RXZWVrLCBkaXJ0eU9wdGlvbnMpO1xuICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0VVRDV2Vlay9pbmRleC5qc1xudmFyIHJlcXVpcmVfZ2V0VVRDV2VlayA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2dldFVUQ1dlZWsvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZ2V0VVRDV2VlaztcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9zdGFydE9mVVRDV2VlaygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9zdGFydE9mVVRDV2Vla1llYXIoKSk7XG4gICAgdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgdmFyIE1JTExJU0VDT05EU19JTl9XRUVLID0gNjA0OGU1O1xuICAgIGZ1bmN0aW9uIGdldFVUQ1dlZWsoZGlydHlEYXRlLCBvcHRpb25zKSB7XG4gICAgICAoMCwgX2luZGV4NC5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGRhdGUgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICB2YXIgZGlmZiA9ICgwLCBfaW5kZXgyLmRlZmF1bHQpKGRhdGUsIG9wdGlvbnMpLmdldFRpbWUoKSAtICgwLCBfaW5kZXgzLmRlZmF1bHQpKGRhdGUsIG9wdGlvbnMpLmdldFRpbWUoKTtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKGRpZmYgLyBNSUxMSVNFQ09ORFNfSU5fV0VFSykgKyAxO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2FkZExlYWRpbmdaZXJvcy9pbmRleC5qc1xudmFyIHJlcXVpcmVfYWRkTGVhZGluZ1plcm9zID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvYWRkTGVhZGluZ1plcm9zL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IGFkZExlYWRpbmdaZXJvcztcbiAgICBmdW5jdGlvbiBhZGRMZWFkaW5nWmVyb3MobnVtYmVyLCB0YXJnZXRMZW5ndGgpIHtcbiAgICAgIHZhciBzaWduID0gbnVtYmVyIDwgMCA/IFwiLVwiIDogXCJcIjtcbiAgICAgIHZhciBvdXRwdXQgPSBNYXRoLmFicyhudW1iZXIpLnRvU3RyaW5nKCk7XG4gICAgICB3aGlsZSAob3V0cHV0Lmxlbmd0aCA8IHRhcmdldExlbmd0aCkge1xuICAgICAgICBvdXRwdXQgPSBcIjBcIiArIG91dHB1dDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzaWduICsgb3V0cHV0O1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2Zvcm1hdC9saWdodEZvcm1hdHRlcnMvaW5kZXguanNcbnZhciByZXF1aXJlX2xpZ2h0Rm9ybWF0dGVycyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2Zvcm1hdC9saWdodEZvcm1hdHRlcnMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfYWRkTGVhZGluZ1plcm9zKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgdmFyIGZvcm1hdHRlcnMgPSB7XG4gICAgICB5OiBmdW5jdGlvbihkYXRlLCB0b2tlbikge1xuICAgICAgICB2YXIgc2lnbmVkWWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbiAgICAgICAgdmFyIHllYXIgPSBzaWduZWRZZWFyID4gMCA/IHNpZ25lZFllYXIgOiAxIC0gc2lnbmVkWWVhcjtcbiAgICAgICAgcmV0dXJuICgwLCBfaW5kZXguZGVmYXVsdCkodG9rZW4gPT09IFwieXlcIiA/IHllYXIgJSAxMDAgOiB5ZWFyLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIE06IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgICAgIHZhciBtb250aCA9IGRhdGUuZ2V0VVRDTW9udGgoKTtcbiAgICAgICAgcmV0dXJuIHRva2VuID09PSBcIk1cIiA/IFN0cmluZyhtb250aCArIDEpIDogKDAsIF9pbmRleC5kZWZhdWx0KShtb250aCArIDEsIDIpO1xuICAgICAgfSxcbiAgICAgIGQ6IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgICAgIHJldHVybiAoMCwgX2luZGV4LmRlZmF1bHQpKGRhdGUuZ2V0VVRDRGF0ZSgpLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIGE6IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgICAgIHZhciBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXRlLmdldFVUQ0hvdXJzKCkgLyAxMiA+PSAxID8gXCJwbVwiIDogXCJhbVwiO1xuICAgICAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAgICAgY2FzZSBcImFcIjpcbiAgICAgICAgICBjYXNlIFwiYWFcIjpcbiAgICAgICAgICAgIHJldHVybiBkYXlQZXJpb2RFbnVtVmFsdWUudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICBjYXNlIFwiYWFhXCI6XG4gICAgICAgICAgICByZXR1cm4gZGF5UGVyaW9kRW51bVZhbHVlO1xuICAgICAgICAgIGNhc2UgXCJhYWFhYVwiOlxuICAgICAgICAgICAgcmV0dXJuIGRheVBlcmlvZEVudW1WYWx1ZVswXTtcbiAgICAgICAgICBjYXNlIFwiYWFhYVwiOlxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gZGF5UGVyaW9kRW51bVZhbHVlID09PSBcImFtXCIgPyBcImEubS5cIiA6IFwicC5tLlwiO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4pIHtcbiAgICAgICAgcmV0dXJuICgwLCBfaW5kZXguZGVmYXVsdCkoZGF0ZS5nZXRVVENIb3VycygpICUgMTIgfHwgMTIsIHRva2VuLmxlbmd0aCk7XG4gICAgICB9LFxuICAgICAgSDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4pIHtcbiAgICAgICAgcmV0dXJuICgwLCBfaW5kZXguZGVmYXVsdCkoZGF0ZS5nZXRVVENIb3VycygpLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIG06IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgICAgIHJldHVybiAoMCwgX2luZGV4LmRlZmF1bHQpKGRhdGUuZ2V0VVRDTWludXRlcygpLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIHM6IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgICAgIHJldHVybiAoMCwgX2luZGV4LmRlZmF1bHQpKGRhdGUuZ2V0VVRDU2Vjb25kcygpLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIFM6IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgICAgIHZhciBudW1iZXJPZkRpZ2l0cyA9IHRva2VuLmxlbmd0aDtcbiAgICAgICAgdmFyIG1pbGxpc2Vjb25kcyA9IGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gICAgICAgIHZhciBmcmFjdGlvbmFsU2Vjb25kcyA9IE1hdGguZmxvb3IobWlsbGlzZWNvbmRzICogTWF0aC5wb3coMTAsIG51bWJlck9mRGlnaXRzIC0gMykpO1xuICAgICAgICByZXR1cm4gKDAsIF9pbmRleC5kZWZhdWx0KShmcmFjdGlvbmFsU2Vjb25kcywgdG9rZW4ubGVuZ3RoKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBfZGVmYXVsdCA9IGZvcm1hdHRlcnM7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9mb3JtYXQvZm9ybWF0dGVycy9pbmRleC5qc1xudmFyIHJlcXVpcmVfZm9ybWF0dGVycyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2Zvcm1hdC9mb3JtYXR0ZXJzL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2dldFVUQ0RheU9mWWVhcigpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9nZXRVVENJU09XZWVrKCkpO1xuICAgIHZhciBfaW5kZXgzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2dldFVUQ0lTT1dlZWtZZWFyKCkpO1xuICAgIHZhciBfaW5kZXg0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2dldFVUQ1dlZWsoKSk7XG4gICAgdmFyIF9pbmRleDUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZ2V0VVRDV2Vla1llYXIoKSk7XG4gICAgdmFyIF9pbmRleDYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfYWRkTGVhZGluZ1plcm9zKCkpO1xuICAgIHZhciBfaW5kZXg3ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2xpZ2h0Rm9ybWF0dGVycygpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIHZhciBkYXlQZXJpb2RFbnVtID0ge1xuICAgICAgYW06IFwiYW1cIixcbiAgICAgIHBtOiBcInBtXCIsXG4gICAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgICAgbm9vbjogXCJub29uXCIsXG4gICAgICBtb3JuaW5nOiBcIm1vcm5pbmdcIixcbiAgICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICAgIGV2ZW5pbmc6IFwiZXZlbmluZ1wiLFxuICAgICAgbmlnaHQ6IFwibmlnaHRcIlxuICAgIH07XG4gICAgdmFyIGZvcm1hdHRlcnMgPSB7XG4gICAgICBHOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICAgICAgdmFyIGVyYSA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKSA+IDAgPyAxIDogMDtcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJHXCI6XG4gICAgICAgICAgY2FzZSBcIkdHXCI6XG4gICAgICAgICAgY2FzZSBcIkdHR1wiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmVyYShlcmEsIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIkdHR0dHXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUuZXJhKGVyYSwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIkdHR0dcIjpcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmVyYShlcmEsIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwid2lkZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHk6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICBpZiAodG9rZW4gPT09IFwieW9cIikge1xuICAgICAgICAgIHZhciBzaWduZWRZZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xuICAgICAgICAgIHZhciB5ZWFyID0gc2lnbmVkWWVhciA+IDAgPyBzaWduZWRZZWFyIDogMSAtIHNpZ25lZFllYXI7XG4gICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoeWVhciwge1xuICAgICAgICAgICAgdW5pdDogXCJ5ZWFyXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX2luZGV4Ny5kZWZhdWx0LnkoZGF0ZSwgdG9rZW4pO1xuICAgICAgfSxcbiAgICAgIFk6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgc2lnbmVkV2Vla1llYXIgPSAoMCwgX2luZGV4NS5kZWZhdWx0KShkYXRlLCBvcHRpb25zKTtcbiAgICAgICAgdmFyIHdlZWtZZWFyID0gc2lnbmVkV2Vla1llYXIgPiAwID8gc2lnbmVkV2Vla1llYXIgOiAxIC0gc2lnbmVkV2Vla1llYXI7XG4gICAgICAgIGlmICh0b2tlbiA9PT0gXCJZWVwiKSB7XG4gICAgICAgICAgdmFyIHR3b0RpZ2l0WWVhciA9IHdlZWtZZWFyICUgMTAwO1xuICAgICAgICAgIHJldHVybiAoMCwgX2luZGV4Ni5kZWZhdWx0KSh0d29EaWdpdFllYXIsIDIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0b2tlbiA9PT0gXCJZb1wiKSB7XG4gICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIod2Vla1llYXIsIHtcbiAgICAgICAgICAgIHVuaXQ6IFwieWVhclwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCBfaW5kZXg2LmRlZmF1bHQpKHdlZWtZZWFyLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIFI6IGZ1bmN0aW9uKGRhdGUsIHRva2VuKSB7XG4gICAgICAgIHZhciBpc29XZWVrWWVhciA9ICgwLCBfaW5kZXgzLmRlZmF1bHQpKGRhdGUpO1xuICAgICAgICByZXR1cm4gKDAsIF9pbmRleDYuZGVmYXVsdCkoaXNvV2Vla1llYXIsIHRva2VuLmxlbmd0aCk7XG4gICAgICB9LFxuICAgICAgdTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4pIHtcbiAgICAgICAgdmFyIHllYXIgPSBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7XG4gICAgICAgIHJldHVybiAoMCwgX2luZGV4Ni5kZWZhdWx0KSh5ZWFyLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIFE6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICB2YXIgcXVhcnRlciA9IE1hdGguY2VpbCgoZGF0ZS5nZXRVVENNb250aCgpICsgMSkgLyAzKTtcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJRXCI6XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKHF1YXJ0ZXIpO1xuICAgICAgICAgIGNhc2UgXCJRUVwiOlxuICAgICAgICAgICAgcmV0dXJuICgwLCBfaW5kZXg2LmRlZmF1bHQpKHF1YXJ0ZXIsIDIpO1xuICAgICAgICAgIGNhc2UgXCJRb1wiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIocXVhcnRlciwge1xuICAgICAgICAgICAgICB1bml0OiBcInF1YXJ0ZXJcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIlFRUVwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIlFRUVFRXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUucXVhcnRlcihxdWFydGVyLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIm5hcnJvd1wiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIlFRUVFcIjpcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHE6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICB2YXIgcXVhcnRlciA9IE1hdGguY2VpbCgoZGF0ZS5nZXRVVENNb250aCgpICsgMSkgLyAzKTtcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJxXCI6XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKHF1YXJ0ZXIpO1xuICAgICAgICAgIGNhc2UgXCJxcVwiOlxuICAgICAgICAgICAgcmV0dXJuICgwLCBfaW5kZXg2LmRlZmF1bHQpKHF1YXJ0ZXIsIDIpO1xuICAgICAgICAgIGNhc2UgXCJxb1wiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIocXVhcnRlciwge1xuICAgICAgICAgICAgICB1bml0OiBcInF1YXJ0ZXJcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcInFxcVwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcInN0YW5kYWxvbmVcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcInFxcXFxXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUucXVhcnRlcihxdWFydGVyLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIm5hcnJvd1wiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcInN0YW5kYWxvbmVcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcInFxcXFcIjpcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIE06IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICB2YXIgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCk7XG4gICAgICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgICAgICBjYXNlIFwiTVwiOlxuICAgICAgICAgIGNhc2UgXCJNTVwiOlxuICAgICAgICAgICAgcmV0dXJuIF9pbmRleDcuZGVmYXVsdC5NKGRhdGUsIHRva2VuKTtcbiAgICAgICAgICBjYXNlIFwiTW9cIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKG1vbnRoICsgMSwge1xuICAgICAgICAgICAgICB1bml0OiBcIm1vbnRoXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJNTU1cIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIk1NTU1NXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUubW9udGgobW9udGgsIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwibmFycm93XCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIFwiTU1NTVwiOlxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUubW9udGgobW9udGgsIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwid2lkZVwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBMOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICAgICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRVVENNb250aCgpO1xuICAgICAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAgICAgY2FzZSBcIkxcIjpcbiAgICAgICAgICAgIHJldHVybiBTdHJpbmcobW9udGggKyAxKTtcbiAgICAgICAgICBjYXNlIFwiTExcIjpcbiAgICAgICAgICAgIHJldHVybiAoMCwgX2luZGV4Ni5kZWZhdWx0KShtb250aCArIDEsIDIpO1xuICAgICAgICAgIGNhc2UgXCJMb1wiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIobW9udGggKyAxLCB7XG4gICAgICAgICAgICAgIHVuaXQ6IFwibW9udGhcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIkxMTFwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm1vbnRoKG1vbnRoLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIFwiTExMTExcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJzdGFuZGFsb25lXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJMTExMXCI6XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHc6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgd2VlayA9ICgwLCBfaW5kZXg0LmRlZmF1bHQpKGRhdGUsIG9wdGlvbnMpO1xuICAgICAgICBpZiAodG9rZW4gPT09IFwid29cIikge1xuICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKHdlZWssIHtcbiAgICAgICAgICAgIHVuaXQ6IFwid2Vla1wiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCBfaW5kZXg2LmRlZmF1bHQpKHdlZWssIHRva2VuLmxlbmd0aCk7XG4gICAgICB9LFxuICAgICAgSTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgICAgIHZhciBpc29XZWVrID0gKDAsIF9pbmRleDIuZGVmYXVsdCkoZGF0ZSk7XG4gICAgICAgIGlmICh0b2tlbiA9PT0gXCJJb1wiKSB7XG4gICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoaXNvV2Vlaywge1xuICAgICAgICAgICAgdW5pdDogXCJ3ZWVrXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIF9pbmRleDYuZGVmYXVsdCkoaXNvV2VlaywgdG9rZW4ubGVuZ3RoKTtcbiAgICAgIH0sXG4gICAgICBkOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICAgICAgaWYgKHRva2VuID09PSBcImRvXCIpIHtcbiAgICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXRlLmdldFVUQ0RhdGUoKSwge1xuICAgICAgICAgICAgdW5pdDogXCJkYXRlXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX2luZGV4Ny5kZWZhdWx0LmQoZGF0ZSwgdG9rZW4pO1xuICAgICAgfSxcbiAgICAgIEQ6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICB2YXIgZGF5T2ZZZWFyID0gKDAsIF9pbmRleC5kZWZhdWx0KShkYXRlKTtcbiAgICAgICAgaWYgKHRva2VuID09PSBcIkRvXCIpIHtcbiAgICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXlPZlllYXIsIHtcbiAgICAgICAgICAgIHVuaXQ6IFwiZGF5T2ZZZWFyXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIF9pbmRleDYuZGVmYXVsdCkoZGF5T2ZZZWFyLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIEU6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICB2YXIgZGF5T2ZXZWVrID0gZGF0ZS5nZXRVVENEYXkoKTtcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJFXCI6XG4gICAgICAgICAgY2FzZSBcIkVFXCI6XG4gICAgICAgICAgY2FzZSBcIkVFRVwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJFRUVFRVwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwibmFycm93XCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIFwiRUVFRUVFXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgICAgICB3aWR0aDogXCJzaG9ydFwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIkVFRUVcIjpcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwid2lkZVwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBlOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGRheU9mV2VlayA9IGRhdGUuZ2V0VVRDRGF5KCk7XG4gICAgICAgIHZhciBsb2NhbERheU9mV2VlayA9IChkYXlPZldlZWsgLSBvcHRpb25zLndlZWtTdGFydHNPbiArIDgpICUgNyB8fCA3O1xuICAgICAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAgICAgY2FzZSBcImVcIjpcbiAgICAgICAgICAgIHJldHVybiBTdHJpbmcobG9jYWxEYXlPZldlZWspO1xuICAgICAgICAgIGNhc2UgXCJlZVwiOlxuICAgICAgICAgICAgcmV0dXJuICgwLCBfaW5kZXg2LmRlZmF1bHQpKGxvY2FsRGF5T2ZXZWVrLCAyKTtcbiAgICAgICAgICBjYXNlIFwiZW9cIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGxvY2FsRGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHVuaXQ6IFwiZGF5XCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJlZWVcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIFwiZWVlZWVcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIm5hcnJvd1wiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcImVlZWVlZVwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwic2hvcnRcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJlZWVlXCI6XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIndpZGVcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYzogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBkYXlPZldlZWsgPSBkYXRlLmdldFVUQ0RheSgpO1xuICAgICAgICB2YXIgbG9jYWxEYXlPZldlZWsgPSAoZGF5T2ZXZWVrIC0gb3B0aW9ucy53ZWVrU3RhcnRzT24gKyA4KSAlIDcgfHwgNztcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJjXCI6XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKGxvY2FsRGF5T2ZXZWVrKTtcbiAgICAgICAgICBjYXNlIFwiY2NcIjpcbiAgICAgICAgICAgIHJldHVybiAoMCwgX2luZGV4Ni5kZWZhdWx0KShsb2NhbERheU9mV2VlaywgdG9rZW4ubGVuZ3RoKTtcbiAgICAgICAgICBjYXNlIFwiY29cIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGxvY2FsRGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHVuaXQ6IFwiZGF5XCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJjY2NcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwic3RhbmRhbG9uZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIFwiY2NjY2NcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIm5hcnJvd1wiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcInN0YW5kYWxvbmVcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcImNjY2NjY1wiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwic2hvcnRcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJzdGFuZGFsb25lXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJjY2NjXCI6XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIndpZGVcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJzdGFuZGFsb25lXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgICAgIHZhciBkYXlPZldlZWsgPSBkYXRlLmdldFVUQ0RheSgpO1xuICAgICAgICB2YXIgaXNvRGF5T2ZXZWVrID0gZGF5T2ZXZWVrID09PSAwID8gNyA6IGRheU9mV2VlaztcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJpXCI6XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKGlzb0RheU9mV2Vlayk7XG4gICAgICAgICAgY2FzZSBcImlpXCI6XG4gICAgICAgICAgICByZXR1cm4gKDAsIF9pbmRleDYuZGVmYXVsdCkoaXNvRGF5T2ZXZWVrLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgICAgIGNhc2UgXCJpb1wiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoaXNvRGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHVuaXQ6IFwiZGF5XCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJpaWlcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIFwiaWlpaWlcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIm5hcnJvd1wiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcImlpaWlpaVwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwic2hvcnRcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJpaWlpXCI6XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIndpZGVcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYTogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgICAgIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKTtcbiAgICAgICAgdmFyIGRheVBlcmlvZEVudW1WYWx1ZSA9IGhvdXJzIC8gMTIgPj0gMSA/IFwicG1cIiA6IFwiYW1cIjtcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJhXCI6XG4gICAgICAgICAgY2FzZSBcImFhXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcImFhYVwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgY2FzZSBcImFhYWFhXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJhYWFhXCI6XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIndpZGVcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYjogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgICAgIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKTtcbiAgICAgICAgdmFyIGRheVBlcmlvZEVudW1WYWx1ZTtcbiAgICAgICAgaWYgKGhvdXJzID09PSAxMikge1xuICAgICAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0ubm9vbjtcbiAgICAgICAgfSBlbHNlIGlmIChob3VycyA9PT0gMCkge1xuICAgICAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0ubWlkbmlnaHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gaG91cnMgLyAxMiA+PSAxID8gXCJwbVwiIDogXCJhbVwiO1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgICAgICBjYXNlIFwiYlwiOlxuICAgICAgICAgIGNhc2UgXCJiYlwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwiYWJicmV2aWF0ZWRcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJiYmJcIjpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcImFiYnJldmlhdGVkXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIGNhc2UgXCJiYmJiYlwiOlxuICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICAgICAgd2lkdGg6IFwibmFycm93XCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIFwiYmJiYlwiOlxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJ3aWRlXCIsXG4gICAgICAgICAgICAgIGNvbnRleHQ6IFwiZm9ybWF0dGluZ1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIEI6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICB2YXIgaG91cnMgPSBkYXRlLmdldFVUQ0hvdXJzKCk7XG4gICAgICAgIHZhciBkYXlQZXJpb2RFbnVtVmFsdWU7XG4gICAgICAgIGlmIChob3VycyA+PSAxNykge1xuICAgICAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0uZXZlbmluZztcbiAgICAgICAgfSBlbHNlIGlmIChob3VycyA+PSAxMikge1xuICAgICAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0uYWZ0ZXJub29uO1xuICAgICAgICB9IGVsc2UgaWYgKGhvdXJzID49IDQpIHtcbiAgICAgICAgICBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXlQZXJpb2RFbnVtLm1vcm5pbmc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF5UGVyaW9kRW51bS5uaWdodDtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAgICAgY2FzZSBcIkJcIjpcbiAgICAgICAgICBjYXNlIFwiQkJcIjpcbiAgICAgICAgICBjYXNlIFwiQkJCXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJhYmJyZXZpYXRlZFwiLFxuICAgICAgICAgICAgICBjb250ZXh0OiBcImZvcm1hdHRpbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgY2FzZSBcIkJCQkJCXCI6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgICAgICB3aWR0aDogXCJuYXJyb3dcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIGNhc2UgXCJCQkJCXCI6XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgICAgIHdpZHRoOiBcIndpZGVcIixcbiAgICAgICAgICAgICAgY29udGV4dDogXCJmb3JtYXR0aW5nXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgICAgIGlmICh0b2tlbiA9PT0gXCJob1wiKSB7XG4gICAgICAgICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpICUgMTI7XG4gICAgICAgICAgaWYgKGhvdXJzID09PSAwKVxuICAgICAgICAgICAgaG91cnMgPSAxMjtcbiAgICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihob3Vycywge1xuICAgICAgICAgICAgdW5pdDogXCJob3VyXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX2luZGV4Ny5kZWZhdWx0LmgoZGF0ZSwgdG9rZW4pO1xuICAgICAgfSxcbiAgICAgIEg6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICBpZiAodG9rZW4gPT09IFwiSG9cIikge1xuICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGRhdGUuZ2V0VVRDSG91cnMoKSwge1xuICAgICAgICAgICAgdW5pdDogXCJob3VyXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX2luZGV4Ny5kZWZhdWx0LkgoZGF0ZSwgdG9rZW4pO1xuICAgICAgfSxcbiAgICAgIEs6IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICB2YXIgaG91cnMgPSBkYXRlLmdldFVUQ0hvdXJzKCkgJSAxMjtcbiAgICAgICAgaWYgKHRva2VuID09PSBcIktvXCIpIHtcbiAgICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihob3Vycywge1xuICAgICAgICAgICAgdW5pdDogXCJob3VyXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIF9pbmRleDYuZGVmYXVsdCkoaG91cnMsIHRva2VuLmxlbmd0aCk7XG4gICAgICB9LFxuICAgICAgazogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgICAgIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKTtcbiAgICAgICAgaWYgKGhvdXJzID09PSAwKVxuICAgICAgICAgIGhvdXJzID0gMjQ7XG4gICAgICAgIGlmICh0b2tlbiA9PT0gXCJrb1wiKSB7XG4gICAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoaG91cnMsIHtcbiAgICAgICAgICAgIHVuaXQ6IFwiaG91clwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCBfaW5kZXg2LmRlZmF1bHQpKGhvdXJzLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfSxcbiAgICAgIG06IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgICAgICBpZiAodG9rZW4gPT09IFwibW9cIikge1xuICAgICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGRhdGUuZ2V0VVRDTWludXRlcygpLCB7XG4gICAgICAgICAgICB1bml0OiBcIm1pbnV0ZVwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9pbmRleDcuZGVmYXVsdC5tKGRhdGUsIHRva2VuKTtcbiAgICAgIH0sXG4gICAgICBzOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICAgICAgaWYgKHRva2VuID09PSBcInNvXCIpIHtcbiAgICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXRlLmdldFVUQ1NlY29uZHMoKSwge1xuICAgICAgICAgICAgdW5pdDogXCJzZWNvbmRcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfaW5kZXg3LmRlZmF1bHQucyhkYXRlLCB0b2tlbik7XG4gICAgICB9LFxuICAgICAgUzogZnVuY3Rpb24oZGF0ZSwgdG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIF9pbmRleDcuZGVmYXVsdC5TKGRhdGUsIHRva2VuKTtcbiAgICAgIH0sXG4gICAgICBYOiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgX2xvY2FsaXplLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBvcmlnaW5hbERhdGUgPSBvcHRpb25zLl9vcmlnaW5hbERhdGUgfHwgZGF0ZTtcbiAgICAgICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gb3JpZ2luYWxEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gICAgICAgIGlmICh0aW1lem9uZU9mZnNldCA9PT0gMCkge1xuICAgICAgICAgIHJldHVybiBcIlpcIjtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAgICAgY2FzZSBcIlhcIjpcbiAgICAgICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXModGltZXpvbmVPZmZzZXQpO1xuICAgICAgICAgIGNhc2UgXCJYWFhYXCI6XG4gICAgICAgICAgY2FzZSBcIlhYXCI6XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0VGltZXpvbmUodGltZXpvbmVPZmZzZXQpO1xuICAgICAgICAgIGNhc2UgXCJYWFhYWFwiOlxuICAgICAgICAgIGNhc2UgXCJYWFhcIjpcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0LCBcIjpcIik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB4OiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgX2xvY2FsaXplLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBvcmlnaW5hbERhdGUgPSBvcHRpb25zLl9vcmlnaW5hbERhdGUgfHwgZGF0ZTtcbiAgICAgICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gb3JpZ2luYWxEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gICAgICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgICAgICBjYXNlIFwieFwiOlxuICAgICAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lV2l0aE9wdGlvbmFsTWludXRlcyh0aW1lem9uZU9mZnNldCk7XG4gICAgICAgICAgY2FzZSBcInh4eHhcIjpcbiAgICAgICAgICBjYXNlIFwieHhcIjpcbiAgICAgICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCk7XG4gICAgICAgICAgY2FzZSBcInh4eHh4XCI6XG4gICAgICAgICAgY2FzZSBcInh4eFwiOlxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0VGltZXpvbmUodGltZXpvbmVPZmZzZXQsIFwiOlwiKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIE86IGZ1bmN0aW9uKGRhdGUsIHRva2VuLCBfbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG9yaWdpbmFsRGF0ZSA9IG9wdGlvbnMuX29yaWdpbmFsRGF0ZSB8fCBkYXRlO1xuICAgICAgICB2YXIgdGltZXpvbmVPZmZzZXQgPSBvcmlnaW5hbERhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKTtcbiAgICAgICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgICAgIGNhc2UgXCJPXCI6XG4gICAgICAgICAgY2FzZSBcIk9PXCI6XG4gICAgICAgICAgY2FzZSBcIk9PT1wiOlxuICAgICAgICAgICAgcmV0dXJuIFwiR01UXCIgKyBmb3JtYXRUaW1lem9uZVNob3J0KHRpbWV6b25lT2Zmc2V0LCBcIjpcIik7XG4gICAgICAgICAgY2FzZSBcIk9PT09cIjpcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFwiR01UXCIgKyBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCwgXCI6XCIpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgejogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIF9sb2NhbGl6ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgb3JpZ2luYWxEYXRlID0gb3B0aW9ucy5fb3JpZ2luYWxEYXRlIHx8IGRhdGU7XG4gICAgICAgIHZhciB0aW1lem9uZU9mZnNldCA9IG9yaWdpbmFsRGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpO1xuICAgICAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAgICAgY2FzZSBcInpcIjpcbiAgICAgICAgICBjYXNlIFwienpcIjpcbiAgICAgICAgICBjYXNlIFwienp6XCI6XG4gICAgICAgICAgICByZXR1cm4gXCJHTVRcIiArIGZvcm1hdFRpbWV6b25lU2hvcnQodGltZXpvbmVPZmZzZXQsIFwiOlwiKTtcbiAgICAgICAgICBjYXNlIFwienp6elwiOlxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gXCJHTVRcIiArIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0LCBcIjpcIik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0OiBmdW5jdGlvbihkYXRlLCB0b2tlbiwgX2xvY2FsaXplLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBvcmlnaW5hbERhdGUgPSBvcHRpb25zLl9vcmlnaW5hbERhdGUgfHwgZGF0ZTtcbiAgICAgICAgdmFyIHRpbWVzdGFtcCA9IE1hdGguZmxvb3Iob3JpZ2luYWxEYXRlLmdldFRpbWUoKSAvIDFlMyk7XG4gICAgICAgIHJldHVybiAoMCwgX2luZGV4Ni5kZWZhdWx0KSh0aW1lc3RhbXAsIHRva2VuLmxlbmd0aCk7XG4gICAgICB9LFxuICAgICAgVDogZnVuY3Rpb24oZGF0ZSwgdG9rZW4sIF9sb2NhbGl6ZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgb3JpZ2luYWxEYXRlID0gb3B0aW9ucy5fb3JpZ2luYWxEYXRlIHx8IGRhdGU7XG4gICAgICAgIHZhciB0aW1lc3RhbXAgPSBvcmlnaW5hbERhdGUuZ2V0VGltZSgpO1xuICAgICAgICByZXR1cm4gKDAsIF9pbmRleDYuZGVmYXVsdCkodGltZXN0YW1wLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgfVxuICAgIH07XG4gICAgZnVuY3Rpb24gZm9ybWF0VGltZXpvbmVTaG9ydChvZmZzZXQsIGRpcnR5RGVsaW1pdGVyKSB7XG4gICAgICB2YXIgc2lnbiA9IG9mZnNldCA+IDAgPyBcIi1cIiA6IFwiK1wiO1xuICAgICAgdmFyIGFic09mZnNldCA9IE1hdGguYWJzKG9mZnNldCk7XG4gICAgICB2YXIgaG91cnMgPSBNYXRoLmZsb29yKGFic09mZnNldCAvIDYwKTtcbiAgICAgIHZhciBtaW51dGVzID0gYWJzT2Zmc2V0ICUgNjA7XG4gICAgICBpZiAobWludXRlcyA9PT0gMCkge1xuICAgICAgICByZXR1cm4gc2lnbiArIFN0cmluZyhob3Vycyk7XG4gICAgICB9XG4gICAgICB2YXIgZGVsaW1pdGVyID0gZGlydHlEZWxpbWl0ZXIgfHwgXCJcIjtcbiAgICAgIHJldHVybiBzaWduICsgU3RyaW5nKGhvdXJzKSArIGRlbGltaXRlciArICgwLCBfaW5kZXg2LmRlZmF1bHQpKG1pbnV0ZXMsIDIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXMob2Zmc2V0LCBkaXJ0eURlbGltaXRlcikge1xuICAgICAgaWYgKG9mZnNldCAlIDYwID09PSAwKSB7XG4gICAgICAgIHZhciBzaWduID0gb2Zmc2V0ID4gMCA/IFwiLVwiIDogXCIrXCI7XG4gICAgICAgIHJldHVybiBzaWduICsgKDAsIF9pbmRleDYuZGVmYXVsdCkoTWF0aC5hYnMob2Zmc2V0KSAvIDYwLCAyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZShvZmZzZXQsIGRpcnR5RGVsaW1pdGVyKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZm9ybWF0VGltZXpvbmUob2Zmc2V0LCBkaXJ0eURlbGltaXRlcikge1xuICAgICAgdmFyIGRlbGltaXRlciA9IGRpcnR5RGVsaW1pdGVyIHx8IFwiXCI7XG4gICAgICB2YXIgc2lnbiA9IG9mZnNldCA+IDAgPyBcIi1cIiA6IFwiK1wiO1xuICAgICAgdmFyIGFic09mZnNldCA9IE1hdGguYWJzKG9mZnNldCk7XG4gICAgICB2YXIgaG91cnMgPSAoMCwgX2luZGV4Ni5kZWZhdWx0KShNYXRoLmZsb29yKGFic09mZnNldCAvIDYwKSwgMik7XG4gICAgICB2YXIgbWludXRlcyA9ICgwLCBfaW5kZXg2LmRlZmF1bHQpKGFic09mZnNldCAlIDYwLCAyKTtcbiAgICAgIHJldHVybiBzaWduICsgaG91cnMgKyBkZWxpbWl0ZXIgKyBtaW51dGVzO1xuICAgIH1cbiAgICB2YXIgX2RlZmF1bHQgPSBmb3JtYXR0ZXJzO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZm9ybWF0L2xvbmdGb3JtYXR0ZXJzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9sb25nRm9ybWF0dGVycyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2Zvcm1hdC9sb25nRm9ybWF0dGVycy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG4gICAgZnVuY3Rpb24gZGF0ZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZykge1xuICAgICAgc3dpdGNoIChwYXR0ZXJuKSB7XG4gICAgICAgIGNhc2UgXCJQXCI6XG4gICAgICAgICAgcmV0dXJuIGZvcm1hdExvbmcuZGF0ZSh7XG4gICAgICAgICAgICB3aWR0aDogXCJzaG9ydFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgXCJQUFwiOlxuICAgICAgICAgIHJldHVybiBmb3JtYXRMb25nLmRhdGUoe1xuICAgICAgICAgICAgd2lkdGg6IFwibWVkaXVtXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBcIlBQUFwiOlxuICAgICAgICAgIHJldHVybiBmb3JtYXRMb25nLmRhdGUoe1xuICAgICAgICAgICAgd2lkdGg6IFwibG9uZ1wiXG4gICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgXCJQUFBQXCI6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIGZvcm1hdExvbmcuZGF0ZSh7XG4gICAgICAgICAgICB3aWR0aDogXCJmdWxsXCJcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdGltZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZykge1xuICAgICAgc3dpdGNoIChwYXR0ZXJuKSB7XG4gICAgICAgIGNhc2UgXCJwXCI6XG4gICAgICAgICAgcmV0dXJuIGZvcm1hdExvbmcudGltZSh7XG4gICAgICAgICAgICB3aWR0aDogXCJzaG9ydFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgXCJwcFwiOlxuICAgICAgICAgIHJldHVybiBmb3JtYXRMb25nLnRpbWUoe1xuICAgICAgICAgICAgd2lkdGg6IFwibWVkaXVtXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBcInBwcFwiOlxuICAgICAgICAgIHJldHVybiBmb3JtYXRMb25nLnRpbWUoe1xuICAgICAgICAgICAgd2lkdGg6IFwibG9uZ1wiXG4gICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgXCJwcHBwXCI6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIGZvcm1hdExvbmcudGltZSh7XG4gICAgICAgICAgICB3aWR0aDogXCJmdWxsXCJcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gZGF0ZVRpbWVMb25nRm9ybWF0dGVyKHBhdHRlcm4sIGZvcm1hdExvbmcpIHtcbiAgICAgIHZhciBtYXRjaFJlc3VsdCA9IHBhdHRlcm4ubWF0Y2goLyhQKykocCspPy8pIHx8IFtdO1xuICAgICAgdmFyIGRhdGVQYXR0ZXJuID0gbWF0Y2hSZXN1bHRbMV07XG4gICAgICB2YXIgdGltZVBhdHRlcm4gPSBtYXRjaFJlc3VsdFsyXTtcbiAgICAgIGlmICghdGltZVBhdHRlcm4pIHtcbiAgICAgICAgcmV0dXJuIGRhdGVMb25nRm9ybWF0dGVyKHBhdHRlcm4sIGZvcm1hdExvbmcpO1xuICAgICAgfVxuICAgICAgdmFyIGRhdGVUaW1lRm9ybWF0O1xuICAgICAgc3dpdGNoIChkYXRlUGF0dGVybikge1xuICAgICAgICBjYXNlIFwiUFwiOlxuICAgICAgICAgIGRhdGVUaW1lRm9ybWF0ID0gZm9ybWF0TG9uZy5kYXRlVGltZSh7XG4gICAgICAgICAgICB3aWR0aDogXCJzaG9ydFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJQUFwiOlxuICAgICAgICAgIGRhdGVUaW1lRm9ybWF0ID0gZm9ybWF0TG9uZy5kYXRlVGltZSh7XG4gICAgICAgICAgICB3aWR0aDogXCJtZWRpdW1cIlxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiUFBQXCI6XG4gICAgICAgICAgZGF0ZVRpbWVGb3JtYXQgPSBmb3JtYXRMb25nLmRhdGVUaW1lKHtcbiAgICAgICAgICAgIHdpZHRoOiBcImxvbmdcIlxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiUFBQUFwiOlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGRhdGVUaW1lRm9ybWF0ID0gZm9ybWF0TG9uZy5kYXRlVGltZSh7XG4gICAgICAgICAgICB3aWR0aDogXCJmdWxsXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHJldHVybiBkYXRlVGltZUZvcm1hdC5yZXBsYWNlKFwie3tkYXRlfX1cIiwgZGF0ZUxvbmdGb3JtYXR0ZXIoZGF0ZVBhdHRlcm4sIGZvcm1hdExvbmcpKS5yZXBsYWNlKFwie3t0aW1lfX1cIiwgdGltZUxvbmdGb3JtYXR0ZXIodGltZVBhdHRlcm4sIGZvcm1hdExvbmcpKTtcbiAgICB9XG4gICAgdmFyIGxvbmdGb3JtYXR0ZXJzID0ge1xuICAgICAgcDogdGltZUxvbmdGb3JtYXR0ZXIsXG4gICAgICBQOiBkYXRlVGltZUxvbmdGb3JtYXR0ZXJcbiAgICB9O1xuICAgIHZhciBfZGVmYXVsdCA9IGxvbmdGb3JtYXR0ZXJzO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy9pbmRleC5qc1xudmFyIHJlcXVpcmVfZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2dldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcztcbiAgICBmdW5jdGlvbiBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKGRhdGUpIHtcbiAgICAgIHZhciB1dGNEYXRlID0gbmV3IERhdGUoRGF0ZS5VVEMoZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCksIGRhdGUuZ2V0RGF0ZSgpLCBkYXRlLmdldEhvdXJzKCksIGRhdGUuZ2V0TWludXRlcygpLCBkYXRlLmdldFNlY29uZHMoKSwgZGF0ZS5nZXRNaWxsaXNlY29uZHMoKSkpO1xuICAgICAgdXRjRGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkpO1xuICAgICAgcmV0dXJuIGRhdGUuZ2V0VGltZSgpIC0gdXRjRGF0ZS5nZXRUaW1lKCk7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvcHJvdGVjdGVkVG9rZW5zL2luZGV4LmpzXG52YXIgcmVxdWlyZV9wcm90ZWN0ZWRUb2tlbnMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9wcm90ZWN0ZWRUb2tlbnMvaW5kZXguanNcIihleHBvcnRzKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuaXNQcm90ZWN0ZWREYXlPZlllYXJUb2tlbiA9IGlzUHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW47XG4gICAgZXhwb3J0cy5pc1Byb3RlY3RlZFdlZWtZZWFyVG9rZW4gPSBpc1Byb3RlY3RlZFdlZWtZZWFyVG9rZW47XG4gICAgZXhwb3J0cy50aHJvd1Byb3RlY3RlZEVycm9yID0gdGhyb3dQcm90ZWN0ZWRFcnJvcjtcbiAgICB2YXIgcHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW5zID0gW1wiRFwiLCBcIkREXCJdO1xuICAgIHZhciBwcm90ZWN0ZWRXZWVrWWVhclRva2VucyA9IFtcIllZXCIsIFwiWVlZWVwiXTtcbiAgICBmdW5jdGlvbiBpc1Byb3RlY3RlZERheU9mWWVhclRva2VuKHRva2VuKSB7XG4gICAgICByZXR1cm4gcHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW5zLmluZGV4T2YodG9rZW4pICE9PSAtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNQcm90ZWN0ZWRXZWVrWWVhclRva2VuKHRva2VuKSB7XG4gICAgICByZXR1cm4gcHJvdGVjdGVkV2Vla1llYXJUb2tlbnMuaW5kZXhPZih0b2tlbikgIT09IC0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0aHJvd1Byb3RlY3RlZEVycm9yKHRva2VuLCBmb3JtYXQ0LCBpbnB1dCkge1xuICAgICAgaWYgKHRva2VuID09PSBcIllZWVlcIikge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlVzZSBgeXl5eWAgaW5zdGVhZCBvZiBgWVlZWWAgKGluIGBcIi5jb25jYXQoZm9ybWF0NCwgXCJgKSBmb3IgZm9ybWF0dGluZyB5ZWFycyB0byB0aGUgaW5wdXQgYFwiKS5jb25jYXQoaW5wdXQsIFwiYDsgc2VlOiBodHRwczovL2dpdC5pby9meEN5clwiKSk7XG4gICAgICB9IGVsc2UgaWYgKHRva2VuID09PSBcIllZXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJVc2UgYHl5YCBpbnN0ZWFkIG9mIGBZWWAgKGluIGBcIi5jb25jYXQoZm9ybWF0NCwgXCJgKSBmb3IgZm9ybWF0dGluZyB5ZWFycyB0byB0aGUgaW5wdXQgYFwiKS5jb25jYXQoaW5wdXQsIFwiYDsgc2VlOiBodHRwczovL2dpdC5pby9meEN5clwiKSk7XG4gICAgICB9IGVsc2UgaWYgKHRva2VuID09PSBcIkRcIikge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlVzZSBgZGAgaW5zdGVhZCBvZiBgRGAgKGluIGBcIi5jb25jYXQoZm9ybWF0NCwgXCJgKSBmb3IgZm9ybWF0dGluZyBkYXlzIG9mIHRoZSBtb250aCB0byB0aGUgaW5wdXQgYFwiKS5jb25jYXQoaW5wdXQsIFwiYDsgc2VlOiBodHRwczovL2dpdC5pby9meEN5clwiKSk7XG4gICAgICB9IGVsc2UgaWYgKHRva2VuID09PSBcIkREXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJVc2UgYGRkYCBpbnN0ZWFkIG9mIGBERGAgKGluIGBcIi5jb25jYXQoZm9ybWF0NCwgXCJgKSBmb3IgZm9ybWF0dGluZyBkYXlzIG9mIHRoZSBtb250aCB0byB0aGUgaW5wdXQgYFwiKS5jb25jYXQoaW5wdXQsIFwiYDsgc2VlOiBodHRwczovL2dpdC5pby9meEN5clwiKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2Zvcm1hdC9pbmRleC5qc1xudmFyIHJlcXVpcmVfZm9ybWF0ID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2Zvcm1hdC9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBmb3JtYXQ0O1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfaXNWYWxpZCgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9lbl9VUygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9zdWJNaWxsaXNlY29uZHMoKSk7XG4gICAgdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXg1ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2Zvcm1hdHRlcnMoKSk7XG4gICAgdmFyIF9pbmRleDYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfbG9uZ0Zvcm1hdHRlcnMoKSk7XG4gICAgdmFyIF9pbmRleDcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcygpKTtcbiAgICB2YXIgX2luZGV4OCA9IHJlcXVpcmVfcHJvdGVjdGVkVG9rZW5zKCk7XG4gICAgdmFyIF9pbmRleDkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9JbnRlZ2VyKCkpO1xuICAgIHZhciBfaW5kZXgxMCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICB2YXIgZm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCA9IC9beVlRcU1Md0lkRGVjaWhIS2ttc11vfChcXHcpXFwxKnwnJ3wnKCcnfFteJ10pKygnfCQpfC4vZztcbiAgICB2YXIgbG9uZ0Zvcm1hdHRpbmdUb2tlbnNSZWdFeHAgPSAvUCtwK3xQK3xwK3wnJ3wnKCcnfFteJ10pKygnfCQpfC4vZztcbiAgICB2YXIgZXNjYXBlZFN0cmluZ1JlZ0V4cCA9IC9eJyhbXl0qPyknPyQvO1xuICAgIHZhciBkb3VibGVRdW90ZVJlZ0V4cCA9IC8nJy9nO1xuICAgIHZhciB1bmVzY2FwZWRMYXRpbkNoYXJhY3RlclJlZ0V4cCA9IC9bYS16QS1aXS87XG4gICAgZnVuY3Rpb24gZm9ybWF0NChkaXJ0eURhdGUsIGRpcnR5Rm9ybWF0U3RyLCBkaXJ0eU9wdGlvbnMpIHtcbiAgICAgICgwLCBfaW5kZXgxMC5kZWZhdWx0KSgyLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGZvcm1hdFN0ciA9IFN0cmluZyhkaXJ0eUZvcm1hdFN0cik7XG4gICAgICB2YXIgb3B0aW9ucyA9IGRpcnR5T3B0aW9ucyB8fCB7fTtcbiAgICAgIHZhciBsb2NhbGUgPSBvcHRpb25zLmxvY2FsZSB8fCBfaW5kZXgyLmRlZmF1bHQ7XG4gICAgICB2YXIgbG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlID0gbG9jYWxlLm9wdGlvbnMgJiYgbG9jYWxlLm9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlO1xuICAgICAgdmFyIGRlZmF1bHRGaXJzdFdlZWtDb250YWluc0RhdGUgPSBsb2NhbGVGaXJzdFdlZWtDb250YWluc0RhdGUgPT0gbnVsbCA/IDEgOiAoMCwgX2luZGV4OS5kZWZhdWx0KShsb2NhbGVGaXJzdFdlZWtDb250YWluc0RhdGUpO1xuICAgICAgdmFyIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9IG9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlID09IG51bGwgPyBkZWZhdWx0Rmlyc3RXZWVrQ29udGFpbnNEYXRlIDogKDAsIF9pbmRleDkuZGVmYXVsdCkob3B0aW9ucy5maXJzdFdlZWtDb250YWluc0RhdGUpO1xuICAgICAgaWYgKCEoZmlyc3RXZWVrQ29udGFpbnNEYXRlID49IDEgJiYgZmlyc3RXZWVrQ29udGFpbnNEYXRlIDw9IDcpKSB7XG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiZmlyc3RXZWVrQ29udGFpbnNEYXRlIG11c3QgYmUgYmV0d2VlbiAxIGFuZCA3IGluY2x1c2l2ZWx5XCIpO1xuICAgICAgfVxuICAgICAgdmFyIGxvY2FsZVdlZWtTdGFydHNPbiA9IGxvY2FsZS5vcHRpb25zICYmIGxvY2FsZS5vcHRpb25zLndlZWtTdGFydHNPbjtcbiAgICAgIHZhciBkZWZhdWx0V2Vla1N0YXJ0c09uID0gbG9jYWxlV2Vla1N0YXJ0c09uID09IG51bGwgPyAwIDogKDAsIF9pbmRleDkuZGVmYXVsdCkobG9jYWxlV2Vla1N0YXJ0c09uKTtcbiAgICAgIHZhciB3ZWVrU3RhcnRzT24gPSBvcHRpb25zLndlZWtTdGFydHNPbiA9PSBudWxsID8gZGVmYXVsdFdlZWtTdGFydHNPbiA6ICgwLCBfaW5kZXg5LmRlZmF1bHQpKG9wdGlvbnMud2Vla1N0YXJ0c09uKTtcbiAgICAgIGlmICghKHdlZWtTdGFydHNPbiA+PSAwICYmIHdlZWtTdGFydHNPbiA8PSA2KSkge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIndlZWtTdGFydHNPbiBtdXN0IGJlIGJldHdlZW4gMCBhbmQgNiBpbmNsdXNpdmVseVwiKTtcbiAgICAgIH1cbiAgICAgIGlmICghbG9jYWxlLmxvY2FsaXplKSB7XG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwibG9jYWxlIG11c3QgY29udGFpbiBsb2NhbGl6ZSBwcm9wZXJ0eVwiKTtcbiAgICAgIH1cbiAgICAgIGlmICghbG9jYWxlLmZvcm1hdExvbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJsb2NhbGUgbXVzdCBjb250YWluIGZvcm1hdExvbmcgcHJvcGVydHlcIik7XG4gICAgICB9XG4gICAgICB2YXIgb3JpZ2luYWxEYXRlID0gKDAsIF9pbmRleDQuZGVmYXVsdCkoZGlydHlEYXRlKTtcbiAgICAgIGlmICghKDAsIF9pbmRleC5kZWZhdWx0KShvcmlnaW5hbERhdGUpKSB7XG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiSW52YWxpZCB0aW1lIHZhbHVlXCIpO1xuICAgICAgfVxuICAgICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gKDAsIF9pbmRleDcuZGVmYXVsdCkob3JpZ2luYWxEYXRlKTtcbiAgICAgIHZhciB1dGNEYXRlID0gKDAsIF9pbmRleDMuZGVmYXVsdCkob3JpZ2luYWxEYXRlLCB0aW1lem9uZU9mZnNldCk7XG4gICAgICB2YXIgZm9ybWF0dGVyT3B0aW9ucyA9IHtcbiAgICAgICAgZmlyc3RXZWVrQ29udGFpbnNEYXRlLFxuICAgICAgICB3ZWVrU3RhcnRzT24sXG4gICAgICAgIGxvY2FsZSxcbiAgICAgICAgX29yaWdpbmFsRGF0ZTogb3JpZ2luYWxEYXRlXG4gICAgICB9O1xuICAgICAgdmFyIHJlc3VsdCA9IGZvcm1hdFN0ci5tYXRjaChsb25nRm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCkubWFwKGZ1bmN0aW9uKHN1YnN0cmluZykge1xuICAgICAgICB2YXIgZmlyc3RDaGFyYWN0ZXIgPSBzdWJzdHJpbmdbMF07XG4gICAgICAgIGlmIChmaXJzdENoYXJhY3RlciA9PT0gXCJwXCIgfHwgZmlyc3RDaGFyYWN0ZXIgPT09IFwiUFwiKSB7XG4gICAgICAgICAgdmFyIGxvbmdGb3JtYXR0ZXIgPSBfaW5kZXg2LmRlZmF1bHRbZmlyc3RDaGFyYWN0ZXJdO1xuICAgICAgICAgIHJldHVybiBsb25nRm9ybWF0dGVyKHN1YnN0cmluZywgbG9jYWxlLmZvcm1hdExvbmcsIGZvcm1hdHRlck9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdWJzdHJpbmc7XG4gICAgICB9KS5qb2luKFwiXCIpLm1hdGNoKGZvcm1hdHRpbmdUb2tlbnNSZWdFeHApLm1hcChmdW5jdGlvbihzdWJzdHJpbmcpIHtcbiAgICAgICAgaWYgKHN1YnN0cmluZyA9PT0gXCInJ1wiKSB7XG4gICAgICAgICAgcmV0dXJuIFwiJ1wiO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmaXJzdENoYXJhY3RlciA9IHN1YnN0cmluZ1swXTtcbiAgICAgICAgaWYgKGZpcnN0Q2hhcmFjdGVyID09PSBcIidcIikge1xuICAgICAgICAgIHJldHVybiBjbGVhbkVzY2FwZWRTdHJpbmcoc3Vic3RyaW5nKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZm9ybWF0dGVyID0gX2luZGV4NS5kZWZhdWx0W2ZpcnN0Q2hhcmFjdGVyXTtcbiAgICAgICAgaWYgKGZvcm1hdHRlcikge1xuICAgICAgICAgIGlmICghb3B0aW9ucy51c2VBZGRpdGlvbmFsV2Vla1llYXJUb2tlbnMgJiYgKDAsIF9pbmRleDguaXNQcm90ZWN0ZWRXZWVrWWVhclRva2VuKShzdWJzdHJpbmcpKSB7XG4gICAgICAgICAgICAoMCwgX2luZGV4OC50aHJvd1Byb3RlY3RlZEVycm9yKShzdWJzdHJpbmcsIGRpcnR5Rm9ybWF0U3RyLCBkaXJ0eURhdGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIW9wdGlvbnMudXNlQWRkaXRpb25hbERheU9mWWVhclRva2VucyAmJiAoMCwgX2luZGV4OC5pc1Byb3RlY3RlZERheU9mWWVhclRva2VuKShzdWJzdHJpbmcpKSB7XG4gICAgICAgICAgICAoMCwgX2luZGV4OC50aHJvd1Byb3RlY3RlZEVycm9yKShzdWJzdHJpbmcsIGRpcnR5Rm9ybWF0U3RyLCBkaXJ0eURhdGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyKHV0Y0RhdGUsIHN1YnN0cmluZywgbG9jYWxlLmxvY2FsaXplLCBmb3JtYXR0ZXJPcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZmlyc3RDaGFyYWN0ZXIubWF0Y2godW5lc2NhcGVkTGF0aW5DaGFyYWN0ZXJSZWdFeHApKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJGb3JtYXQgc3RyaW5nIGNvbnRhaW5zIGFuIHVuZXNjYXBlZCBsYXRpbiBhbHBoYWJldCBjaGFyYWN0ZXIgYFwiICsgZmlyc3RDaGFyYWN0ZXIgKyBcImBcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN1YnN0cmluZztcbiAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGVhbkVzY2FwZWRTdHJpbmcoaW5wdXQpIHtcbiAgICAgIHJldHVybiBpbnB1dC5tYXRjaChlc2NhcGVkU3RyaW5nUmVnRXhwKVsxXS5yZXBsYWNlKGRvdWJsZVF1b3RlUmVnRXhwLCBcIidcIik7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC50aHJvdHRsZS9pbmRleC5qc1xudmFyIHJlcXVpcmVfbG9kYXNoID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC50aHJvdHRsZS9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIHZhciBGVU5DX0VSUk9SX1RFWFQgPSBcIkV4cGVjdGVkIGEgZnVuY3Rpb25cIjtcbiAgICB2YXIgTkFOID0gMCAvIDA7XG4gICAgdmFyIHN5bWJvbFRhZyA9IFwiW29iamVjdCBTeW1ib2xdXCI7XG4gICAgdmFyIHJlVHJpbSA9IC9eXFxzK3xcXHMrJC9nO1xuICAgIHZhciByZUlzQmFkSGV4ID0gL15bLStdMHhbMC05YS1mXSskL2k7XG4gICAgdmFyIHJlSXNCaW5hcnkgPSAvXjBiWzAxXSskL2k7XG4gICAgdmFyIHJlSXNPY3RhbCA9IC9eMG9bMC03XSskL2k7XG4gICAgdmFyIGZyZWVQYXJzZUludCA9IHBhcnNlSW50O1xuICAgIHZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSBcIm9iamVjdFwiICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuICAgIHZhciBmcmVlU2VsZiA9IHR5cGVvZiBzZWxmID09IFwib2JqZWN0XCIgJiYgc2VsZiAmJiBzZWxmLk9iamVjdCA9PT0gT2JqZWN0ICYmIHNlbGY7XG4gICAgdmFyIHJvb3QgPSBmcmVlR2xvYmFsIHx8IGZyZWVTZWxmIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbiAgICB2YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuICAgIHZhciBvYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuICAgIHZhciBuYXRpdmVNYXggPSBNYXRoLm1heDtcbiAgICB2YXIgbmF0aXZlTWluID0gTWF0aC5taW47XG4gICAgdmFyIG5vdyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHJvb3QuRGF0ZS5ub3coKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgICAgIHZhciBsYXN0QXJncywgbGFzdFRoaXMsIG1heFdhaXQsIHJlc3VsdCwgdGltZXJJZCwgbGFzdENhbGxUaW1lLCBsYXN0SW52b2tlVGltZSA9IDAsIGxlYWRpbmcgPSBmYWxzZSwgbWF4aW5nID0gZmFsc2UsIHRyYWlsaW5nID0gdHJ1ZTtcbiAgICAgIGlmICh0eXBlb2YgZnVuYyAhPSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgICAgfVxuICAgICAgd2FpdCA9IHRvTnVtYmVyKHdhaXQpIHx8IDA7XG4gICAgICBpZiAoaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICAgICAgbGVhZGluZyA9ICEhb3B0aW9ucy5sZWFkaW5nO1xuICAgICAgICBtYXhpbmcgPSBcIm1heFdhaXRcIiBpbiBvcHRpb25zO1xuICAgICAgICBtYXhXYWl0ID0gbWF4aW5nID8gbmF0aXZlTWF4KHRvTnVtYmVyKG9wdGlvbnMubWF4V2FpdCkgfHwgMCwgd2FpdCkgOiBtYXhXYWl0O1xuICAgICAgICB0cmFpbGluZyA9IFwidHJhaWxpbmdcIiBpbiBvcHRpb25zID8gISFvcHRpb25zLnRyYWlsaW5nIDogdHJhaWxpbmc7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBpbnZva2VGdW5jKHRpbWUpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBsYXN0QXJncywgdGhpc0FyZyA9IGxhc3RUaGlzO1xuICAgICAgICBsYXN0QXJncyA9IGxhc3RUaGlzID0gdm9pZCAwO1xuICAgICAgICBsYXN0SW52b2tlVGltZSA9IHRpbWU7XG4gICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsZWFkaW5nRWRnZSh0aW1lKSB7XG4gICAgICAgIGxhc3RJbnZva2VUaW1lID0gdGltZTtcbiAgICAgICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCB3YWl0KTtcbiAgICAgICAgcmV0dXJuIGxlYWRpbmcgPyBpbnZva2VGdW5jKHRpbWUpIDogcmVzdWx0O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmVtYWluaW5nV2FpdCh0aW1lKSB7XG4gICAgICAgIHZhciB0aW1lU2luY2VMYXN0Q2FsbCA9IHRpbWUgLSBsYXN0Q2FsbFRpbWUsIHRpbWVTaW5jZUxhc3RJbnZva2UgPSB0aW1lIC0gbGFzdEludm9rZVRpbWUsIHJlc3VsdDIgPSB3YWl0IC0gdGltZVNpbmNlTGFzdENhbGw7XG4gICAgICAgIHJldHVybiBtYXhpbmcgPyBuYXRpdmVNaW4ocmVzdWx0MiwgbWF4V2FpdCAtIHRpbWVTaW5jZUxhc3RJbnZva2UpIDogcmVzdWx0MjtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHNob3VsZEludm9rZSh0aW1lKSB7XG4gICAgICAgIHZhciB0aW1lU2luY2VMYXN0Q2FsbCA9IHRpbWUgLSBsYXN0Q2FsbFRpbWUsIHRpbWVTaW5jZUxhc3RJbnZva2UgPSB0aW1lIC0gbGFzdEludm9rZVRpbWU7XG4gICAgICAgIHJldHVybiBsYXN0Q2FsbFRpbWUgPT09IHZvaWQgMCB8fCB0aW1lU2luY2VMYXN0Q2FsbCA+PSB3YWl0IHx8IHRpbWVTaW5jZUxhc3RDYWxsIDwgMCB8fCBtYXhpbmcgJiYgdGltZVNpbmNlTGFzdEludm9rZSA+PSBtYXhXYWl0O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gdGltZXJFeHBpcmVkKCkge1xuICAgICAgICB2YXIgdGltZSA9IG5vdygpO1xuICAgICAgICBpZiAoc2hvdWxkSW52b2tlKHRpbWUpKSB7XG4gICAgICAgICAgcmV0dXJuIHRyYWlsaW5nRWRnZSh0aW1lKTtcbiAgICAgICAgfVxuICAgICAgICB0aW1lcklkID0gc2V0VGltZW91dCh0aW1lckV4cGlyZWQsIHJlbWFpbmluZ1dhaXQodGltZSkpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gdHJhaWxpbmdFZGdlKHRpbWUpIHtcbiAgICAgICAgdGltZXJJZCA9IHZvaWQgMDtcbiAgICAgICAgaWYgKHRyYWlsaW5nICYmIGxhc3RBcmdzKSB7XG4gICAgICAgICAgcmV0dXJuIGludm9rZUZ1bmModGltZSk7XG4gICAgICAgIH1cbiAgICAgICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHZvaWQgMDtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGNhbmNlbCgpIHtcbiAgICAgICAgaWYgKHRpbWVySWQgIT09IHZvaWQgMCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICAgICAgfVxuICAgICAgICBsYXN0SW52b2tlVGltZSA9IDA7XG4gICAgICAgIGxhc3RBcmdzID0gbGFzdENhbGxUaW1lID0gbGFzdFRoaXMgPSB0aW1lcklkID0gdm9pZCAwO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgICAgIHJldHVybiB0aW1lcklkID09PSB2b2lkIDAgPyByZXN1bHQgOiB0cmFpbGluZ0VkZ2Uobm93KCkpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gZGVib3VuY2VkKCkge1xuICAgICAgICB2YXIgdGltZSA9IG5vdygpLCBpc0ludm9raW5nID0gc2hvdWxkSW52b2tlKHRpbWUpO1xuICAgICAgICBsYXN0QXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgbGFzdFRoaXMgPSB0aGlzO1xuICAgICAgICBsYXN0Q2FsbFRpbWUgPSB0aW1lO1xuICAgICAgICBpZiAoaXNJbnZva2luZykge1xuICAgICAgICAgIGlmICh0aW1lcklkID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgIHJldHVybiBsZWFkaW5nRWRnZShsYXN0Q2FsbFRpbWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAobWF4aW5nKSB7XG4gICAgICAgICAgICB0aW1lcklkID0gc2V0VGltZW91dCh0aW1lckV4cGlyZWQsIHdhaXQpO1xuICAgICAgICAgICAgcmV0dXJuIGludm9rZUZ1bmMobGFzdENhbGxUaW1lKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRpbWVySWQgPT09IHZvaWQgMCkge1xuICAgICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGRlYm91bmNlZC5jYW5jZWwgPSBjYW5jZWw7XG4gICAgICBkZWJvdW5jZWQuZmx1c2ggPSBmbHVzaDtcbiAgICAgIHJldHVybiBkZWJvdW5jZWQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRocm90dGxlMihmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gICAgICB2YXIgbGVhZGluZyA9IHRydWUsIHRyYWlsaW5nID0gdHJ1ZTtcbiAgICAgIGlmICh0eXBlb2YgZnVuYyAhPSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgICAgfVxuICAgICAgaWYgKGlzT2JqZWN0KG9wdGlvbnMpKSB7XG4gICAgICAgIGxlYWRpbmcgPSBcImxlYWRpbmdcIiBpbiBvcHRpb25zID8gISFvcHRpb25zLmxlYWRpbmcgOiBsZWFkaW5nO1xuICAgICAgICB0cmFpbGluZyA9IFwidHJhaWxpbmdcIiBpbiBvcHRpb25zID8gISFvcHRpb25zLnRyYWlsaW5nIDogdHJhaWxpbmc7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGVib3VuY2UoZnVuYywgd2FpdCwge1xuICAgICAgICBcImxlYWRpbmdcIjogbGVhZGluZyxcbiAgICAgICAgXCJtYXhXYWl0XCI6IHdhaXQsXG4gICAgICAgIFwidHJhaWxpbmdcIjogdHJhaWxpbmdcbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAgICAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gICAgICByZXR1cm4gISF2YWx1ZSAmJiAodHlwZSA9PSBcIm9iamVjdFwiIHx8IHR5cGUgPT0gXCJmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gICAgICByZXR1cm4gISF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIjtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gXCJzeW1ib2xcIiB8fCBpc09iamVjdExpa2UodmFsdWUpICYmIG9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpID09IHN5bWJvbFRhZztcbiAgICB9XG4gICAgZnVuY3Rpb24gdG9OdW1iZXIodmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgICBpZiAoaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiBOQU47XG4gICAgICB9XG4gICAgICBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICAgIHZhciBvdGhlciA9IHR5cGVvZiB2YWx1ZS52YWx1ZU9mID09IFwiZnVuY3Rpb25cIiA/IHZhbHVlLnZhbHVlT2YoKSA6IHZhbHVlO1xuICAgICAgICB2YWx1ZSA9IGlzT2JqZWN0KG90aGVyKSA/IG90aGVyICsgXCJcIiA6IG90aGVyO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA9PT0gMCA/IHZhbHVlIDogK3ZhbHVlO1xuICAgICAgfVxuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKHJlVHJpbSwgXCJcIik7XG4gICAgICB2YXIgaXNCaW5hcnkgPSByZUlzQmluYXJ5LnRlc3QodmFsdWUpO1xuICAgICAgcmV0dXJuIGlzQmluYXJ5IHx8IHJlSXNPY3RhbC50ZXN0KHZhbHVlKSA/IGZyZWVQYXJzZUludCh2YWx1ZS5zbGljZSgyKSwgaXNCaW5hcnkgPyAyIDogOCkgOiByZUlzQmFkSGV4LnRlc3QodmFsdWUpID8gTkFOIDogK3ZhbHVlO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IHRocm90dGxlMjtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9nZXREYXRlL2luZGV4LmpzXG52YXIgcmVxdWlyZV9nZXREYXRlID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldERhdGUvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZ2V0RGF0ZTI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0RGF0ZTIoZGlydHlEYXRlKSB7XG4gICAgICAoMCwgX2luZGV4Mi5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGRhdGUgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICB2YXIgZGF5T2ZNb250aCA9IGRhdGUuZ2V0RGF0ZSgpO1xuICAgICAgcmV0dXJuIGRheU9mTW9udGg7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldERheS9pbmRleC5qc1xudmFyIHJlcXVpcmVfZ2V0RGF5ID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldERheS9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBnZXREYXkyO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3JlcXVpcmVkQXJncygpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldERheTIoZGlydHlEYXRlKSB7XG4gICAgICAoMCwgX2luZGV4Mi5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGRhdGUgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKTtcbiAgICAgIHJldHVybiBkYXk7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldEhvdXJzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9nZXRIb3VycyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9nZXRIb3Vycy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBnZXRIb3VyczI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0SG91cnMyKGRpcnR5RGF0ZSkge1xuICAgICAgKDAsIF9pbmRleDIuZGVmYXVsdCkoMSwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkYXRlID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xuICAgICAgcmV0dXJuIGhvdXJzO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9nZXRNaW51dGVzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9nZXRNaW51dGVzID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldE1pbnV0ZXMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZ2V0TWludXRlczI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0TWludXRlczIoZGlydHlEYXRlKSB7XG4gICAgICAoMCwgX2luZGV4Mi5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGRhdGUgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICB2YXIgbWludXRlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xuICAgICAgcmV0dXJuIG1pbnV0ZXM7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldE1vbnRoL2luZGV4LmpzXG52YXIgcmVxdWlyZV9nZXRNb250aCA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9nZXRNb250aC9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBnZXRNb250aDI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0TW9udGgyKGRpcnR5RGF0ZSkge1xuICAgICAgKDAsIF9pbmRleDIuZGVmYXVsdCkoMSwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkYXRlID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgcmV0dXJuIG1vbnRoO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9nZXRZZWFyL2luZGV4LmpzXG52YXIgcmVxdWlyZV9nZXRZZWFyID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2dldFllYXIvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZ2V0WWVhcjI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0WWVhcjIoZGlydHlEYXRlKSB7XG4gICAgICAoMCwgX2luZGV4Mi5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlKS5nZXRGdWxsWWVhcigpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9hZGREYXlzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9hZGREYXlzID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2FkZERheXMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gYWRkRGF5cztcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvSW50ZWdlcigpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYWRkRGF5cyhkaXJ0eURhdGUsIGRpcnR5QW1vdW50KSB7XG4gICAgICAoMCwgX2luZGV4My5kZWZhdWx0KSgyLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGRhdGUgPSAoMCwgX2luZGV4Mi5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgdmFyIGFtb3VudCA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlBbW91bnQpO1xuICAgICAgaWYgKGlzTmFOKGFtb3VudCkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgICB9XG4gICAgICBpZiAoIWFtb3VudCkge1xuICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICAgIH1cbiAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIGFtb3VudCk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvYWRkTW9udGhzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9hZGRNb250aHMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvYWRkTW9udGhzL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IGFkZE1vbnRocztcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvSW50ZWdlcigpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYWRkTW9udGhzKGRpcnR5RGF0ZSwgZGlydHlBbW91bnQpIHtcbiAgICAgICgwLCBfaW5kZXgzLmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXgyLmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICB2YXIgYW1vdW50ID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eUFtb3VudCk7XG4gICAgICBpZiAoaXNOYU4oYW1vdW50KSkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgICAgIH1cbiAgICAgIGlmICghYW1vdW50KSB7XG4gICAgICAgIHJldHVybiBkYXRlO1xuICAgICAgfVxuICAgICAgdmFyIGRheU9mTW9udGggPSBkYXRlLmdldERhdGUoKTtcbiAgICAgIHZhciBlbmRPZkRlc2lyZWRNb250aCA9IG5ldyBEYXRlKGRhdGUuZ2V0VGltZSgpKTtcbiAgICAgIGVuZE9mRGVzaXJlZE1vbnRoLnNldE1vbnRoKGRhdGUuZ2V0TW9udGgoKSArIGFtb3VudCArIDEsIDApO1xuICAgICAgdmFyIGRheXNJbk1vbnRoID0gZW5kT2ZEZXNpcmVkTW9udGguZ2V0RGF0ZSgpO1xuICAgICAgaWYgKGRheU9mTW9udGggPj0gZGF5c0luTW9udGgpIHtcbiAgICAgICAgcmV0dXJuIGVuZE9mRGVzaXJlZE1vbnRoO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGF0ZS5zZXRGdWxsWWVhcihlbmRPZkRlc2lyZWRNb250aC5nZXRGdWxsWWVhcigpLCBlbmRPZkRlc2lyZWRNb250aC5nZXRNb250aCgpLCBkYXlPZk1vbnRoKTtcbiAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgICB9XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2FkZC9pbmRleC5qc1xudmFyIHJlcXVpcmVfYWRkID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2FkZC9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBhZGQyO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfYWRkRGF5cygpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9hZGRNb250aHMoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXg0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3JlcXVpcmVkQXJncygpKTtcbiAgICB2YXIgX2luZGV4NSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0ludGVnZXIoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBhZGQyKGRpcnR5RGF0ZSwgZHVyYXRpb24pIHtcbiAgICAgICgwLCBfaW5kZXg0LmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICBpZiAoIWR1cmF0aW9uIHx8IHR5cGVvZiBkdXJhdGlvbiAhPT0gXCJvYmplY3RcIilcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgICB2YXIgeWVhcnMgPSBkdXJhdGlvbi55ZWFycyA/ICgwLCBfaW5kZXg1LmRlZmF1bHQpKGR1cmF0aW9uLnllYXJzKSA6IDA7XG4gICAgICB2YXIgbW9udGhzID0gZHVyYXRpb24ubW9udGhzID8gKDAsIF9pbmRleDUuZGVmYXVsdCkoZHVyYXRpb24ubW9udGhzKSA6IDA7XG4gICAgICB2YXIgd2Vla3MgPSBkdXJhdGlvbi53ZWVrcyA/ICgwLCBfaW5kZXg1LmRlZmF1bHQpKGR1cmF0aW9uLndlZWtzKSA6IDA7XG4gICAgICB2YXIgZGF5cyA9IGR1cmF0aW9uLmRheXMgPyAoMCwgX2luZGV4NS5kZWZhdWx0KShkdXJhdGlvbi5kYXlzKSA6IDA7XG4gICAgICB2YXIgaG91cnMgPSBkdXJhdGlvbi5ob3VycyA/ICgwLCBfaW5kZXg1LmRlZmF1bHQpKGR1cmF0aW9uLmhvdXJzKSA6IDA7XG4gICAgICB2YXIgbWludXRlcyA9IGR1cmF0aW9uLm1pbnV0ZXMgPyAoMCwgX2luZGV4NS5kZWZhdWx0KShkdXJhdGlvbi5taW51dGVzKSA6IDA7XG4gICAgICB2YXIgc2Vjb25kcyA9IGR1cmF0aW9uLnNlY29uZHMgPyAoMCwgX2luZGV4NS5kZWZhdWx0KShkdXJhdGlvbi5zZWNvbmRzKSA6IDA7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXgzLmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICB2YXIgZGF0ZVdpdGhNb250aHMgPSBtb250aHMgfHwgeWVhcnMgPyAoMCwgX2luZGV4Mi5kZWZhdWx0KShkYXRlLCBtb250aHMgKyB5ZWFycyAqIDEyKSA6IGRhdGU7XG4gICAgICB2YXIgZGF0ZVdpdGhEYXlzID0gZGF5cyB8fCB3ZWVrcyA/ICgwLCBfaW5kZXguZGVmYXVsdCkoZGF0ZVdpdGhNb250aHMsIGRheXMgKyB3ZWVrcyAqIDcpIDogZGF0ZVdpdGhNb250aHM7XG4gICAgICB2YXIgbWludXRlc1RvQWRkID0gbWludXRlcyArIGhvdXJzICogNjA7XG4gICAgICB2YXIgc2Vjb25kc1RvQWRkID0gc2Vjb25kcyArIG1pbnV0ZXNUb0FkZCAqIDYwO1xuICAgICAgdmFyIG1zVG9BZGQgPSBzZWNvbmRzVG9BZGQgKiAxZTM7XG4gICAgICB2YXIgZmluYWxEYXRlID0gbmV3IERhdGUoZGF0ZVdpdGhEYXlzLmdldFRpbWUoKSArIG1zVG9BZGQpO1xuICAgICAgcmV0dXJuIGZpbmFsRGF0ZTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViRGF5cy9pbmRleC5qc1xudmFyIHJlcXVpcmVfc3ViRGF5cyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9zdWJEYXlzL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IHN1YkRheXM7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0ludGVnZXIoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfYWRkRGF5cygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdWJEYXlzKGRpcnR5RGF0ZSwgZGlydHlBbW91bnQpIHtcbiAgICAgICgwLCBfaW5kZXgzLmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgYW1vdW50ID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eUFtb3VudCk7XG4gICAgICByZXR1cm4gKDAsIF9pbmRleDIuZGVmYXVsdCkoZGlydHlEYXRlLCAtYW1vdW50KTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViTW9udGhzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9zdWJNb250aHMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViTW9udGhzL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IHN1Yk1vbnRocztcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvSW50ZWdlcigpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9hZGRNb250aHMoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3ViTW9udGhzKGRpcnR5RGF0ZSwgZGlydHlBbW91bnQpIHtcbiAgICAgICgwLCBfaW5kZXgzLmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgYW1vdW50ID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eUFtb3VudCk7XG4gICAgICByZXR1cm4gKDAsIF9pbmRleDIuZGVmYXVsdCkoZGlydHlEYXRlLCAtYW1vdW50KTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViL2luZGV4LmpzXG52YXIgcmVxdWlyZV9zdWIgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3ViL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IHN1YjI7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9zdWJEYXlzKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3N1Yk1vbnRocygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9JbnRlZ2VyKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3ViMihkYXRlLCBkdXJhdGlvbikge1xuICAgICAgKDAsIF9pbmRleDMuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIGlmICghZHVyYXRpb24gfHwgdHlwZW9mIGR1cmF0aW9uICE9PSBcIm9iamVjdFwiKVxuICAgICAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgICAgIHZhciB5ZWFycyA9IGR1cmF0aW9uLnllYXJzID8gKDAsIF9pbmRleDQuZGVmYXVsdCkoZHVyYXRpb24ueWVhcnMpIDogMDtcbiAgICAgIHZhciBtb250aHMgPSBkdXJhdGlvbi5tb250aHMgPyAoMCwgX2luZGV4NC5kZWZhdWx0KShkdXJhdGlvbi5tb250aHMpIDogMDtcbiAgICAgIHZhciB3ZWVrcyA9IGR1cmF0aW9uLndlZWtzID8gKDAsIF9pbmRleDQuZGVmYXVsdCkoZHVyYXRpb24ud2Vla3MpIDogMDtcbiAgICAgIHZhciBkYXlzID0gZHVyYXRpb24uZGF5cyA/ICgwLCBfaW5kZXg0LmRlZmF1bHQpKGR1cmF0aW9uLmRheXMpIDogMDtcbiAgICAgIHZhciBob3VycyA9IGR1cmF0aW9uLmhvdXJzID8gKDAsIF9pbmRleDQuZGVmYXVsdCkoZHVyYXRpb24uaG91cnMpIDogMDtcbiAgICAgIHZhciBtaW51dGVzID0gZHVyYXRpb24ubWludXRlcyA/ICgwLCBfaW5kZXg0LmRlZmF1bHQpKGR1cmF0aW9uLm1pbnV0ZXMpIDogMDtcbiAgICAgIHZhciBzZWNvbmRzID0gZHVyYXRpb24uc2Vjb25kcyA/ICgwLCBfaW5kZXg0LmRlZmF1bHQpKGR1cmF0aW9uLnNlY29uZHMpIDogMDtcbiAgICAgIHZhciBkYXRlV2l0aG91dE1vbnRocyA9ICgwLCBfaW5kZXgyLmRlZmF1bHQpKGRhdGUsIG1vbnRocyArIHllYXJzICogMTIpO1xuICAgICAgdmFyIGRhdGVXaXRob3V0RGF5cyA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGF0ZVdpdGhvdXRNb250aHMsIGRheXMgKyB3ZWVrcyAqIDcpO1xuICAgICAgdmFyIG1pbnV0ZXN0b1N1YiA9IG1pbnV0ZXMgKyBob3VycyAqIDYwO1xuICAgICAgdmFyIHNlY29uZHN0b1N1YiA9IHNlY29uZHMgKyBtaW51dGVzdG9TdWIgKiA2MDtcbiAgICAgIHZhciBtc3RvU3ViID0gc2Vjb25kc3RvU3ViICogMWUzO1xuICAgICAgdmFyIGZpbmFsRGF0ZSA9IG5ldyBEYXRlKGRhdGVXaXRob3V0RGF5cy5nZXRUaW1lKCkgLSBtc3RvU3ViKTtcbiAgICAgIHJldHVybiBmaW5hbERhdGU7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2NvbXBhcmVBc2MvaW5kZXguanNcbnZhciByZXF1aXJlX2NvbXBhcmVBc2MgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29tcGFyZUFzYy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBjb21wYXJlQXNjO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3JlcXVpcmVkQXJncygpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNvbXBhcmVBc2MoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgICAgICgwLCBfaW5kZXgyLmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZUxlZnQgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZUxlZnQpO1xuICAgICAgdmFyIGRhdGVSaWdodCA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlUmlnaHQpO1xuICAgICAgdmFyIGRpZmYgPSBkYXRlTGVmdC5nZXRUaW1lKCkgLSBkYXRlUmlnaHQuZ2V0VGltZSgpO1xuICAgICAgaWYgKGRpZmYgPCAwKSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICAgIH0gZWxzZSBpZiAoZGlmZiA+IDApIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGlmZjtcbiAgICAgIH1cbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFycy9pbmRleC5qc1xudmFyIHJlcXVpcmVfZGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFycyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IGRpZmZlcmVuY2VJbkNhbGVuZGFyWWVhcnM7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFycyhkaXJ0eURhdGVMZWZ0LCBkaXJ0eURhdGVSaWdodCkge1xuICAgICAgKDAsIF9pbmRleDIuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkYXRlTGVmdCA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlTGVmdCk7XG4gICAgICB2YXIgZGF0ZVJpZ2h0ID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGVSaWdodCk7XG4gICAgICByZXR1cm4gZGF0ZUxlZnQuZ2V0RnVsbFllYXIoKSAtIGRhdGVSaWdodC5nZXRGdWxsWWVhcigpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5ZZWFycy9pbmRleC5qc1xudmFyIHJlcXVpcmVfZGlmZmVyZW5jZUluWWVhcnMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluWWVhcnMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZGlmZmVyZW5jZUluWWVhcnM7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFycygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9jb21wYXJlQXNjKCkpO1xuICAgIHZhciBfaW5kZXg0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3JlcXVpcmVkQXJncygpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRpZmZlcmVuY2VJblllYXJzKGRpcnR5RGF0ZUxlZnQsIGRpcnR5RGF0ZVJpZ2h0KSB7XG4gICAgICAoMCwgX2luZGV4NC5kZWZhdWx0KSgyLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGRhdGVMZWZ0ID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGVMZWZ0KTtcbiAgICAgIHZhciBkYXRlUmlnaHQgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZVJpZ2h0KTtcbiAgICAgIHZhciBzaWduID0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCk7XG4gICAgICB2YXIgZGlmZmVyZW5jZSA9IE1hdGguYWJzKCgwLCBfaW5kZXgyLmRlZmF1bHQpKGRhdGVMZWZ0LCBkYXRlUmlnaHQpKTtcbiAgICAgIGRhdGVMZWZ0LnNldEZ1bGxZZWFyKDE1ODQpO1xuICAgICAgZGF0ZVJpZ2h0LnNldEZ1bGxZZWFyKDE1ODQpO1xuICAgICAgdmFyIGlzTGFzdFllYXJOb3RGdWxsID0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCkgPT09IC1zaWduO1xuICAgICAgdmFyIHJlc3VsdCA9IHNpZ24gKiAoZGlmZmVyZW5jZSAtIE51bWJlcihpc0xhc3RZZWFyTm90RnVsbCkpO1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gMCA/IDAgOiByZXN1bHQ7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9kaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocztcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhkaXJ0eURhdGVMZWZ0LCBkaXJ0eURhdGVSaWdodCkge1xuICAgICAgKDAsIF9pbmRleDIuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkYXRlTGVmdCA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlTGVmdCk7XG4gICAgICB2YXIgZGF0ZVJpZ2h0ID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGVSaWdodCk7XG4gICAgICB2YXIgeWVhckRpZmYgPSBkYXRlTGVmdC5nZXRGdWxsWWVhcigpIC0gZGF0ZVJpZ2h0LmdldEZ1bGxZZWFyKCk7XG4gICAgICB2YXIgbW9udGhEaWZmID0gZGF0ZUxlZnQuZ2V0TW9udGgoKSAtIGRhdGVSaWdodC5nZXRNb250aCgpO1xuICAgICAgcmV0dXJuIHllYXJEaWZmICogMTIgKyBtb250aERpZmY7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VuZE9mRGF5L2luZGV4LmpzXG52YXIgcmVxdWlyZV9lbmRPZkRheSA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lbmRPZkRheS9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBlbmRPZkRheTtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBlbmRPZkRheShkaXJ0eURhdGUpIHtcbiAgICAgICgwLCBfaW5kZXgyLmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlKTtcbiAgICAgIGRhdGUuc2V0SG91cnMoMjMsIDU5LCA1OSwgOTk5KTtcbiAgICAgIHJldHVybiBkYXRlO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lbmRPZk1vbnRoL2luZGV4LmpzXG52YXIgcmVxdWlyZV9lbmRPZk1vbnRoID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VuZE9mTW9udGgvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZW5kT2ZNb250aDtcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBlbmRPZk1vbnRoKGRpcnR5RGF0ZSkge1xuICAgICAgKDAsIF9pbmRleDIuZGVmYXVsdCkoMSwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkYXRlID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCksIG1vbnRoICsgMSwgMCk7XG4gICAgICBkYXRlLnNldEhvdXJzKDIzLCA1OSwgNTksIDk5OSk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvaXNMYXN0RGF5T2ZNb250aC9pbmRleC5qc1xudmFyIHJlcXVpcmVfaXNMYXN0RGF5T2ZNb250aCA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9pc0xhc3REYXlPZk1vbnRoL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IGlzTGFzdERheU9mTW9udGg7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV90b0RhdGUoKSk7XG4gICAgdmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZW5kT2ZEYXkoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZW5kT2ZNb250aCgpKTtcbiAgICB2YXIgX2luZGV4NCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc0xhc3REYXlPZk1vbnRoKGRpcnR5RGF0ZSkge1xuICAgICAgKDAsIF9pbmRleDQuZGVmYXVsdCkoMSwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkYXRlID0gKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGUpO1xuICAgICAgcmV0dXJuICgwLCBfaW5kZXgyLmRlZmF1bHQpKGRhdGUpLmdldFRpbWUoKSA9PT0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZGF0ZSkuZ2V0VGltZSgpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5Nb250aHMvaW5kZXguanNcbnZhciByZXF1aXJlX2RpZmZlcmVuY2VJbk1vbnRocyA9IF9fY29tbW9uSlMoe1xuICBcIi4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5Nb250aHMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZGlmZmVyZW5jZUluTW9udGhzO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2RpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzKCkpO1xuICAgIHZhciBfaW5kZXgzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2NvbXBhcmVBc2MoKSk7XG4gICAgdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIHZhciBfaW5kZXg1ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2lzTGFzdERheU9mTW9udGgoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBkaWZmZXJlbmNlSW5Nb250aHMoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgICAgICgwLCBfaW5kZXg0LmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZUxlZnQgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZUxlZnQpO1xuICAgICAgdmFyIGRhdGVSaWdodCA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlUmlnaHQpO1xuICAgICAgdmFyIHNpZ24gPSAoMCwgX2luZGV4My5kZWZhdWx0KShkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgICAgIHZhciBkaWZmZXJlbmNlID0gTWF0aC5hYnMoKDAsIF9pbmRleDIuZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCkpO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIGlmIChkaWZmZXJlbmNlIDwgMSkge1xuICAgICAgICByZXN1bHQgPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGRhdGVMZWZ0LmdldE1vbnRoKCkgPT09IDEgJiYgZGF0ZUxlZnQuZ2V0RGF0ZSgpID4gMjcpIHtcbiAgICAgICAgICBkYXRlTGVmdC5zZXREYXRlKDMwKTtcbiAgICAgICAgfVxuICAgICAgICBkYXRlTGVmdC5zZXRNb250aChkYXRlTGVmdC5nZXRNb250aCgpIC0gc2lnbiAqIGRpZmZlcmVuY2UpO1xuICAgICAgICB2YXIgaXNMYXN0TW9udGhOb3RGdWxsID0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCkgPT09IC1zaWduO1xuICAgICAgICBpZiAoKDAsIF9pbmRleDUuZGVmYXVsdCkoKDAsIF9pbmRleC5kZWZhdWx0KShkaXJ0eURhdGVMZWZ0KSkgJiYgZGlmZmVyZW5jZSA9PT0gMSAmJiAoMCwgX2luZGV4My5kZWZhdWx0KShkaXJ0eURhdGVMZWZ0LCBkYXRlUmlnaHQpID09PSAxKSB7XG4gICAgICAgICAgaXNMYXN0TW9udGhOb3RGdWxsID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gc2lnbiAqIChkaWZmZXJlbmNlIC0gTnVtYmVyKGlzTGFzdE1vbnRoTm90RnVsbCkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gMCA/IDAgOiByZXN1bHQ7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL3N0YXJ0T2ZEYXkvaW5kZXguanNcbnZhciByZXF1aXJlX3N0YXJ0T2ZEYXkgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3RhcnRPZkRheS9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBzdGFydE9mRGF5O1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3JlcXVpcmVkQXJncygpKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0YXJ0T2ZEYXkoZGlydHlEYXRlKSB7XG4gICAgICAoMCwgX2luZGV4Mi5kZWZhdWx0KSgxLCBhcmd1bWVudHMpO1xuICAgICAgdmFyIGRhdGUgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZSk7XG4gICAgICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cy9pbmRleC5qc1xudmFyIHJlcXVpcmVfZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXM7XG4gICAgdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9nZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3N0YXJ0T2ZEYXkoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgdmFyIE1JTExJU0VDT05EU19JTl9EQVkgPSA4NjRlNTtcbiAgICBmdW5jdGlvbiBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgICAgICgwLCBfaW5kZXgzLmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgc3RhcnRPZkRheUxlZnQgPSAoMCwgX2luZGV4Mi5kZWZhdWx0KShkaXJ0eURhdGVMZWZ0KTtcbiAgICAgIHZhciBzdGFydE9mRGF5UmlnaHQgPSAoMCwgX2luZGV4Mi5kZWZhdWx0KShkaXJ0eURhdGVSaWdodCk7XG4gICAgICB2YXIgdGltZXN0YW1wTGVmdCA9IHN0YXJ0T2ZEYXlMZWZ0LmdldFRpbWUoKSAtICgwLCBfaW5kZXguZGVmYXVsdCkoc3RhcnRPZkRheUxlZnQpO1xuICAgICAgdmFyIHRpbWVzdGFtcFJpZ2h0ID0gc3RhcnRPZkRheVJpZ2h0LmdldFRpbWUoKSAtICgwLCBfaW5kZXguZGVmYXVsdCkoc3RhcnRPZkRheVJpZ2h0KTtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKCh0aW1lc3RhbXBMZWZ0IC0gdGltZXN0YW1wUmlnaHQpIC8gTUlMTElTRUNPTkRTX0lOX0RBWSk7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkRheXMvaW5kZXguanNcbnZhciByZXF1aXJlX2RpZmZlcmVuY2VJbkRheXMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluRGF5cy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBkaWZmZXJlbmNlSW5EYXlzO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfdG9EYXRlKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2RpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBjb21wYXJlTG9jYWxBc2MoZGF0ZUxlZnQsIGRhdGVSaWdodCkge1xuICAgICAgdmFyIGRpZmYgPSBkYXRlTGVmdC5nZXRGdWxsWWVhcigpIC0gZGF0ZVJpZ2h0LmdldEZ1bGxZZWFyKCkgfHwgZGF0ZUxlZnQuZ2V0TW9udGgoKSAtIGRhdGVSaWdodC5nZXRNb250aCgpIHx8IGRhdGVMZWZ0LmdldERhdGUoKSAtIGRhdGVSaWdodC5nZXREYXRlKCkgfHwgZGF0ZUxlZnQuZ2V0SG91cnMoKSAtIGRhdGVSaWdodC5nZXRIb3VycygpIHx8IGRhdGVMZWZ0LmdldE1pbnV0ZXMoKSAtIGRhdGVSaWdodC5nZXRNaW51dGVzKCkgfHwgZGF0ZUxlZnQuZ2V0U2Vjb25kcygpIC0gZGF0ZVJpZ2h0LmdldFNlY29uZHMoKSB8fCBkYXRlTGVmdC5nZXRNaWxsaXNlY29uZHMoKSAtIGRhdGVSaWdodC5nZXRNaWxsaXNlY29uZHMoKTtcbiAgICAgIGlmIChkaWZmIDwgMCkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgICB9IGVsc2UgaWYgKGRpZmYgPiAwKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRpZmY7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRpZmZlcmVuY2VJbkRheXMoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgICAgICgwLCBfaW5kZXgzLmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZUxlZnQgPSAoMCwgX2luZGV4LmRlZmF1bHQpKGRpcnR5RGF0ZUxlZnQpO1xuICAgICAgdmFyIGRhdGVSaWdodCA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGlydHlEYXRlUmlnaHQpO1xuICAgICAgdmFyIHNpZ24gPSBjb21wYXJlTG9jYWxBc2MoZGF0ZUxlZnQsIGRhdGVSaWdodCk7XG4gICAgICB2YXIgZGlmZmVyZW5jZSA9IE1hdGguYWJzKCgwLCBfaW5kZXgyLmRlZmF1bHQpKGRhdGVMZWZ0LCBkYXRlUmlnaHQpKTtcbiAgICAgIGRhdGVMZWZ0LnNldERhdGUoZGF0ZUxlZnQuZ2V0RGF0ZSgpIC0gc2lnbiAqIGRpZmZlcmVuY2UpO1xuICAgICAgdmFyIGlzTGFzdERheU5vdEZ1bGwgPSBOdW1iZXIoY29tcGFyZUxvY2FsQXNjKGRhdGVMZWZ0LCBkYXRlUmlnaHQpID09PSAtc2lnbik7XG4gICAgICB2YXIgcmVzdWx0ID0gc2lnbiAqIChkaWZmZXJlbmNlIC0gaXNMYXN0RGF5Tm90RnVsbCk7XG4gICAgICByZXR1cm4gcmVzdWx0ID09PSAwID8gMCA6IHJlc3VsdDtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29uc3RhbnRzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9jb25zdGFudHMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29uc3RhbnRzL2luZGV4LmpzXCIoZXhwb3J0cykge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLnNlY29uZHNJbk1pbnV0ZSA9IGV4cG9ydHMuc2Vjb25kc0luSG91ciA9IGV4cG9ydHMucXVhcnRlcnNJblllYXIgPSBleHBvcnRzLm1vbnRoc0luWWVhciA9IGV4cG9ydHMubW9udGhzSW5RdWFydGVyID0gZXhwb3J0cy5taW51dGVzSW5Ib3VyID0gZXhwb3J0cy5taW5UaW1lID0gZXhwb3J0cy5taWxsaXNlY29uZHNJblNlY29uZCA9IGV4cG9ydHMubWlsbGlzZWNvbmRzSW5Ib3VyID0gZXhwb3J0cy5taWxsaXNlY29uZHNJbk1pbnV0ZSA9IGV4cG9ydHMubWF4VGltZSA9IGV4cG9ydHMuZGF5c0luV2VlayA9IHZvaWQgMDtcbiAgICB2YXIgZGF5c0luV2VlayA9IDc7XG4gICAgZXhwb3J0cy5kYXlzSW5XZWVrID0gZGF5c0luV2VlaztcbiAgICB2YXIgbWF4VGltZSA9IE1hdGgucG93KDEwLCA4KSAqIDI0ICogNjAgKiA2MCAqIDFlMztcbiAgICBleHBvcnRzLm1heFRpbWUgPSBtYXhUaW1lO1xuICAgIHZhciBtaWxsaXNlY29uZHNJbk1pbnV0ZSA9IDZlNDtcbiAgICBleHBvcnRzLm1pbGxpc2Vjb25kc0luTWludXRlID0gbWlsbGlzZWNvbmRzSW5NaW51dGU7XG4gICAgdmFyIG1pbGxpc2Vjb25kc0luSG91ciA9IDM2ZTU7XG4gICAgZXhwb3J0cy5taWxsaXNlY29uZHNJbkhvdXIgPSBtaWxsaXNlY29uZHNJbkhvdXI7XG4gICAgdmFyIG1pbGxpc2Vjb25kc0luU2Vjb25kID0gMWUzO1xuICAgIGV4cG9ydHMubWlsbGlzZWNvbmRzSW5TZWNvbmQgPSBtaWxsaXNlY29uZHNJblNlY29uZDtcbiAgICB2YXIgbWluVGltZSA9IC1tYXhUaW1lO1xuICAgIGV4cG9ydHMubWluVGltZSA9IG1pblRpbWU7XG4gICAgdmFyIG1pbnV0ZXNJbkhvdXIgPSA2MDtcbiAgICBleHBvcnRzLm1pbnV0ZXNJbkhvdXIgPSBtaW51dGVzSW5Ib3VyO1xuICAgIHZhciBtb250aHNJblF1YXJ0ZXIgPSAzO1xuICAgIGV4cG9ydHMubW9udGhzSW5RdWFydGVyID0gbW9udGhzSW5RdWFydGVyO1xuICAgIHZhciBtb250aHNJblllYXIgPSAxMjtcbiAgICBleHBvcnRzLm1vbnRoc0luWWVhciA9IG1vbnRoc0luWWVhcjtcbiAgICB2YXIgcXVhcnRlcnNJblllYXIgPSA0O1xuICAgIGV4cG9ydHMucXVhcnRlcnNJblllYXIgPSBxdWFydGVyc0luWWVhcjtcbiAgICB2YXIgc2Vjb25kc0luSG91ciA9IDM2MDA7XG4gICAgZXhwb3J0cy5zZWNvbmRzSW5Ib3VyID0gc2Vjb25kc0luSG91cjtcbiAgICB2YXIgc2Vjb25kc0luTWludXRlID0gNjA7XG4gICAgZXhwb3J0cy5zZWNvbmRzSW5NaW51dGUgPSBzZWNvbmRzSW5NaW51dGU7XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9kaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IGRpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcztcbiAgICB2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMoZGF0ZUxlZnQsIGRhdGVSaWdodCkge1xuICAgICAgKDAsIF9pbmRleDIuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiAoMCwgX2luZGV4LmRlZmF1bHQpKGRhdGVMZWZ0KS5nZXRUaW1lKCkgLSAoMCwgX2luZGV4LmRlZmF1bHQpKGRhdGVSaWdodCkuZ2V0VGltZSgpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL3JvdW5kaW5nTWV0aG9kcy9pbmRleC5qc1xudmFyIHJlcXVpcmVfcm91bmRpbmdNZXRob2RzID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvcm91bmRpbmdNZXRob2RzL2luZGV4LmpzXCIoZXhwb3J0cykge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmdldFJvdW5kaW5nTWV0aG9kID0gZ2V0Um91bmRpbmdNZXRob2Q7XG4gICAgdmFyIHJvdW5kaW5nTWFwID0ge1xuICAgICAgY2VpbDogTWF0aC5jZWlsLFxuICAgICAgcm91bmQ6IE1hdGgucm91bmQsXG4gICAgICBmbG9vcjogTWF0aC5mbG9vcixcbiAgICAgIHRydW5jOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgPCAwID8gTWF0aC5jZWlsKHZhbHVlKSA6IE1hdGguZmxvb3IodmFsdWUpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIGRlZmF1bHRSb3VuZGluZ01ldGhvZCA9IFwidHJ1bmNcIjtcbiAgICBmdW5jdGlvbiBnZXRSb3VuZGluZ01ldGhvZChtZXRob2QpIHtcbiAgICAgIHJldHVybiBtZXRob2QgPyByb3VuZGluZ01hcFttZXRob2RdIDogcm91bmRpbmdNYXBbZGVmYXVsdFJvdW5kaW5nTWV0aG9kXTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vLyAuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluSG91cnMvaW5kZXguanNcbnZhciByZXF1aXJlX2RpZmZlcmVuY2VJbkhvdXJzID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkhvdXJzL2luZGV4LmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgICB2YWx1ZTogdHJ1ZVxuICAgIH0pO1xuICAgIGV4cG9ydHMuZGVmYXVsdCA9IGRpZmZlcmVuY2VJbkhvdXJzO1xuICAgIHZhciBfaW5kZXggPSByZXF1aXJlX2NvbnN0YW50cygpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2RpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgdmFyIF9pbmRleDQgPSByZXF1aXJlX3JvdW5kaW5nTWV0aG9kcygpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGlmZmVyZW5jZUluSG91cnMoZGF0ZUxlZnQsIGRhdGVSaWdodCwgb3B0aW9ucykge1xuICAgICAgKDAsIF9pbmRleDMuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkaWZmID0gKDAsIF9pbmRleDIuZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCkgLyBfaW5kZXgubWlsbGlzZWNvbmRzSW5Ib3VyO1xuICAgICAgcmV0dXJuICgwLCBfaW5kZXg0LmdldFJvdW5kaW5nTWV0aG9kKShvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucm91bmRpbmdNZXRob2QpKGRpZmYpO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbi8vIC4uLy4uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5NaW51dGVzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9kaWZmZXJlbmNlSW5NaW51dGVzID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbk1pbnV0ZXMvaW5kZXguanNcIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgZXhwb3J0cy5kZWZhdWx0ID0gZGlmZmVyZW5jZUluTWludXRlcztcbiAgICB2YXIgX2luZGV4ID0gcmVxdWlyZV9jb25zdGFudHMoKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9kaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMoKSk7XG4gICAgdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfcmVxdWlyZWRBcmdzKCkpO1xuICAgIHZhciBfaW5kZXg0ID0gcmVxdWlyZV9yb3VuZGluZ01ldGhvZHMoKTtcbiAgICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRpZmZlcmVuY2VJbk1pbnV0ZXMoZGF0ZUxlZnQsIGRhdGVSaWdodCwgb3B0aW9ucykge1xuICAgICAgKDAsIF9pbmRleDMuZGVmYXVsdCkoMiwgYXJndW1lbnRzKTtcbiAgICAgIHZhciBkaWZmID0gKDAsIF9pbmRleDIuZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCkgLyBfaW5kZXgubWlsbGlzZWNvbmRzSW5NaW51dGU7XG4gICAgICByZXR1cm4gKDAsIF9pbmRleDQuZ2V0Um91bmRpbmdNZXRob2QpKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5yb3VuZGluZ01ldGhvZCkoZGlmZik7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJblNlY29uZHMvaW5kZXguanNcbnZhciByZXF1aXJlX2RpZmZlcmVuY2VJblNlY29uZHMgPSBfX2NvbW1vbkpTKHtcbiAgXCIuLi8uLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZGlmZmVyZW5jZUluU2Vjb25kcy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBkaWZmZXJlbmNlSW5TZWNvbmRzO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzKCkpO1xuICAgIHZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3JlcXVpcmVkQXJncygpKTtcbiAgICB2YXIgX2luZGV4MyA9IHJlcXVpcmVfcm91bmRpbmdNZXRob2RzKCk7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBkaWZmZXJlbmNlSW5TZWNvbmRzKGRhdGVMZWZ0LCBkYXRlUmlnaHQsIG9wdGlvbnMpIHtcbiAgICAgICgwLCBfaW5kZXgyLmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGlmZiA9ICgwLCBfaW5kZXguZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCkgLyAxZTM7XG4gICAgICByZXR1cm4gKDAsIF9pbmRleDMuZ2V0Um91bmRpbmdNZXRob2QpKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5yb3VuZGluZ01ldGhvZCkoZGlmZik7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xuICB9XG59KTtcblxuLy8gLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2ludGVydmFsVG9EdXJhdGlvbi9pbmRleC5qc1xudmFyIHJlcXVpcmVfaW50ZXJ2YWxUb0R1cmF0aW9uID0gX19jb21tb25KUyh7XG4gIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2ludGVydmFsVG9EdXJhdGlvbi9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICBleHBvcnRzLmRlZmF1bHQgPSBpbnRlcnZhbFRvRHVyYXRpb24yO1xuICAgIHZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfY29tcGFyZUFzYygpKTtcbiAgICB2YXIgX2luZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9kaWZmZXJlbmNlSW5ZZWFycygpKTtcbiAgICB2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9kaWZmZXJlbmNlSW5Nb250aHMoKSk7XG4gICAgdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfZGlmZmVyZW5jZUluRGF5cygpKTtcbiAgICB2YXIgX2luZGV4NSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9kaWZmZXJlbmNlSW5Ib3VycygpKTtcbiAgICB2YXIgX2luZGV4NiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9kaWZmZXJlbmNlSW5NaW51dGVzKCkpO1xuICAgIHZhciBfaW5kZXg3ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX2RpZmZlcmVuY2VJblNlY29uZHMoKSk7XG4gICAgdmFyIF9pbmRleDggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfaXNWYWxpZCgpKTtcbiAgICB2YXIgX2luZGV4OSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZV9yZXF1aXJlZEFyZ3MoKSk7XG4gICAgdmFyIF9pbmRleDEwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlX3RvRGF0ZSgpKTtcbiAgICB2YXIgX2luZGV4MTEgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVfc3ViKCkpO1xuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW50ZXJ2YWxUb0R1cmF0aW9uMihfcmVmKSB7XG4gICAgICB2YXIgc3RhcnQgPSBfcmVmLnN0YXJ0LCBlbmQgPSBfcmVmLmVuZDtcbiAgICAgICgwLCBfaW5kZXg5LmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gICAgICB2YXIgZGF0ZUxlZnQgPSAoMCwgX2luZGV4MTAuZGVmYXVsdCkoc3RhcnQpO1xuICAgICAgdmFyIGRhdGVSaWdodCA9ICgwLCBfaW5kZXgxMC5kZWZhdWx0KShlbmQpO1xuICAgICAgaWYgKCEoMCwgX2luZGV4OC5kZWZhdWx0KShkYXRlTGVmdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJTdGFydCBEYXRlIGlzIGludmFsaWRcIik7XG4gICAgICB9XG4gICAgICBpZiAoISgwLCBfaW5kZXg4LmRlZmF1bHQpKGRhdGVSaWdodCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJFbmQgRGF0ZSBpcyBpbnZhbGlkXCIpO1xuICAgICAgfVxuICAgICAgdmFyIGR1cmF0aW9uID0ge1xuICAgICAgICB5ZWFyczogMCxcbiAgICAgICAgbW9udGhzOiAwLFxuICAgICAgICBkYXlzOiAwLFxuICAgICAgICBob3VyczogMCxcbiAgICAgICAgbWludXRlczogMCxcbiAgICAgICAgc2Vjb25kczogMFxuICAgICAgfTtcbiAgICAgIHZhciBzaWduID0gKDAsIF9pbmRleC5kZWZhdWx0KShkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgICAgIGR1cmF0aW9uLnllYXJzID0gTWF0aC5hYnMoKDAsIF9pbmRleDIuZGVmYXVsdCkoZGF0ZUxlZnQsIGRhdGVSaWdodCkpO1xuICAgICAgdmFyIHJlbWFpbmluZ01vbnRocyA9ICgwLCBfaW5kZXgxMS5kZWZhdWx0KShkYXRlTGVmdCwge1xuICAgICAgICB5ZWFyczogc2lnbiAqIGR1cmF0aW9uLnllYXJzXG4gICAgICB9KTtcbiAgICAgIGR1cmF0aW9uLm1vbnRocyA9IE1hdGguYWJzKCgwLCBfaW5kZXgzLmRlZmF1bHQpKHJlbWFpbmluZ01vbnRocywgZGF0ZVJpZ2h0KSk7XG4gICAgICB2YXIgcmVtYWluaW5nRGF5cyA9ICgwLCBfaW5kZXgxMS5kZWZhdWx0KShyZW1haW5pbmdNb250aHMsIHtcbiAgICAgICAgbW9udGhzOiBzaWduICogZHVyYXRpb24ubW9udGhzXG4gICAgICB9KTtcbiAgICAgIGR1cmF0aW9uLmRheXMgPSBNYXRoLmFicygoMCwgX2luZGV4NC5kZWZhdWx0KShyZW1haW5pbmdEYXlzLCBkYXRlUmlnaHQpKTtcbiAgICAgIHZhciByZW1haW5pbmdIb3VycyA9ICgwLCBfaW5kZXgxMS5kZWZhdWx0KShyZW1haW5pbmdEYXlzLCB7XG4gICAgICAgIGRheXM6IHNpZ24gKiBkdXJhdGlvbi5kYXlzXG4gICAgICB9KTtcbiAgICAgIGR1cmF0aW9uLmhvdXJzID0gTWF0aC5hYnMoKDAsIF9pbmRleDUuZGVmYXVsdCkocmVtYWluaW5nSG91cnMsIGRhdGVSaWdodCkpO1xuICAgICAgdmFyIHJlbWFpbmluZ01pbnV0ZXMgPSAoMCwgX2luZGV4MTEuZGVmYXVsdCkocmVtYWluaW5nSG91cnMsIHtcbiAgICAgICAgaG91cnM6IHNpZ24gKiBkdXJhdGlvbi5ob3Vyc1xuICAgICAgfSk7XG4gICAgICBkdXJhdGlvbi5taW51dGVzID0gTWF0aC5hYnMoKDAsIF9pbmRleDYuZGVmYXVsdCkocmVtYWluaW5nTWludXRlcywgZGF0ZVJpZ2h0KSk7XG4gICAgICB2YXIgcmVtYWluaW5nU2Vjb25kcyA9ICgwLCBfaW5kZXgxMS5kZWZhdWx0KShyZW1haW5pbmdNaW51dGVzLCB7XG4gICAgICAgIG1pbnV0ZXM6IHNpZ24gKiBkdXJhdGlvbi5taW51dGVzXG4gICAgICB9KTtcbiAgICAgIGR1cmF0aW9uLnNlY29uZHMgPSBNYXRoLmFicygoMCwgX2luZGV4Ny5kZWZhdWx0KShyZW1haW5pbmdTZWNvbmRzLCBkYXRlUmlnaHQpKTtcbiAgICAgIHJldHVybiBkdXJhdGlvbjtcbiAgICB9XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi50c3hcbmltcG9ydCAqIGFzIFJlYWN0NTQgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICBnZXRCbG9ja0NvbGxlY3Rpb25JZCxcbiAgZ2V0QmxvY2tQYXJlbnRQYWdlIGFzIGdldEJsb2NrUGFyZW50UGFnZTIsXG4gIGdldFRleHRDb250ZW50IGFzIGdldFRleHRDb250ZW50NFxufSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5pbXBvcnQgeyB1c2VMb2NhbFN0b3JhZ2UsIHVzZVdpbmRvd1NpemUgfSBmcm9tIFwicmVhY3QtdXNlXCI7XG5pbXBvcnQgKiBhcyBEcm9wZG93bk1lbnUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1kcm9wZG93bi1tZW51XCI7XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLXJvdy50c3hcbmltcG9ydCAqIGFzIFJlYWN0MzkgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLWNvbHVtbi10aXRsZS50c3hcbmltcG9ydCAqIGFzIFJlYWN0MTcgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy9pY29ucy90eXBlLXRpdGxlLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlVGl0bGUocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk03Ljc0IDguNjk3YS44MS44MSAwIDAxLjA3My4zMDguODk0Ljg5NCAwIDAxLS45Ljg4OC44NjcuODY3IDAgMDEtLjgyNS0uNTkybC0uMzMzLS45NjFIMi4wNThsLS4zMzMuOTYxYS44ODIuODgyIDAgMDEtLjgzOC41OTJBLjg4NC44ODQgMCAwMTAgOS4wMDVjMC0uMTEuMDI1LS4yMjIuMDYyLS4zMDhsMi40MDMtNi4yMTFjLjIyMi0uNTguNzc2LS45ODYgMS40NDItLjk4Ni42NTMgMCAxLjIyLjQwNyAxLjQ0Mi45ODZsMi4zOSA2LjIxMXpNMi42IDYuODI0aDIuNjEzTDMuOTA3IDMuMTAyIDIuNiA2LjgyNHptOC44LTMuMTE4YzEuMzU1IDAgMi42LjU0MiAyLjYgMi4yNTVWOS4wOGEuOC44IDAgMDEtLjc4OS44MTQuNzk3Ljc5NyAwIDAxLS43ODgtLjcwM2MtLjM5NS40NjgtMS4wOTcuNzY0LTEuODc0Ljc2NC0uOTQ5IDAtMi4wNy0uNjQtMi4wNy0xLjk3MiAwLTEuMzkyIDEuMTIxLTEuODk3IDIuMDctMS44OTcuNzg5IDAgMS40OTEuMjQ2IDEuODg2LjcyN3YtLjgyNmMwLS42MDQtLjUxOC0uOTk4LTEuMzA2LS45OTgtLjQ2OSAwLS44ODguMTIzLTEuMzIuMzk0YS42NC42NCAwIDAxLS4zMDcuMDg2LjYwMi42MDIgMCAwMS0uNTkyLS42MDRjMC0uMjIxLjEyMy0uNDE5LjI4NC0uNTE3YTMuOTYzIDMuOTYzIDAgMDEyLjIwNi0uNjQxem0tLjIyMiA1LjE4OGMuNTA1IDAgLjk5OC0uMTcyIDEuMjU3LS41MTd2LS43NGMtLjI1OS0uMzQ1LS43NTItLjUxNy0xLjI1Ny0uNTE3LS42MTYgMC0xLjEyMi4zMzItMS4xMjIuOSAwIC41NTQuNTA2Ljg3NCAxLjEyMi44NzR6TS42NTYgMTEuMTI1aDEyLjY4OGEuNjU2LjY1NiAwIDExMCAxLjMxM0guNjU2YS42NTYuNjU2IDAgMTEwLTEuMzEzelwiXG4gIH0pKTtcbn1cbnZhciB0eXBlX3RpdGxlX2RlZmF1bHQgPSBTdmdUeXBlVGl0bGU7XG5cbi8vIHNyYy9pY29ucy90eXBlLXRleHQudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDIgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlVGV4dChwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0Mi5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0Mi5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNNyA0LjU2OGEuNS41IDAgMDAtLjUtLjVoLTZhLjUuNSAwIDAwLS41LjV2MS4wNDZhLjUuNSAwIDAwLjUuNWg2YS41LjUgMCAwMC41LS41VjQuNTY4ek0uNSAxYS41LjUgMCAwMC0uNS41djEuMDQ1YS41LjUgMCAwMC41LjVoMTJhLjUuNSAwIDAwLjUtLjVWMS41YS41LjUgMCAwMC0uNS0uNUguNXpNMCA4LjY4MmEuNS41IDAgMDAuNS41aDExYS41LjUgMCAwMC41LS41VjcuNjM2YS41LjUgMCAwMC0uNS0uNUguNWEuNS41IDAgMDAtLjUuNXYxLjA0NnptMCAzLjA2OGEuNS41IDAgMDAuNS41aDlhLjUuNSAwIDAwLjUtLjV2LTEuMDQ1YS41LjUgMCAwMC0uNS0uNWgtOWEuNS41IDAgMDAtLjUuNXYxLjA0NXpcIlxuICB9KSk7XG59XG52YXIgdHlwZV90ZXh0X2RlZmF1bHQgPSBTdmdUeXBlVGV4dDtcblxuLy8gc3JjL2ljb25zL3R5cGUtbnVtYmVyLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QzIGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnVHlwZU51bWJlcihwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0My5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0My5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNNC40NjIgMGMtLjU5NSAwLTEuMDc4LjQ4Mi0xLjA3OCAxLjA3OHYyLjMwNkgxLjA3OGExLjA3OCAxLjA3OCAwIDEwMCAyLjE1NWgyLjMwNnYyLjkyMkgxLjA3OGExLjA3OCAxLjA3OCAwIDEwMCAyLjE1NWgyLjMwNnYyLjMwNmExLjA3OCAxLjA3OCAwIDAwMi4xNTUgMHYtMi4zMDZIOC40NnYyLjMwNmExLjA3OCAxLjA3OCAwIDAwMi4xNTYgMHYtMi4zMDZoMi4zMDZhMS4wNzggMS4wNzggMCAxMDAtMi4xNTVoLTIuMzA2VjUuNTM5aDIuMzA2YTEuMDc4IDEuMDc4IDAgMTAwLTIuMTU1aC0yLjMwNlYxLjA3OGExLjA3OCAxLjA3OCAwIDAwLTIuMTU2IDB2Mi4zMDZINS41NFYxLjA3OEM1LjU0LjQ4MiA1LjA1NiAwIDQuNDYxIDB6bTEuMDc3IDguNDZWNS41NEg4LjQ2djIuOTJINS41NHpcIlxuICB9KSk7XG59XG52YXIgdHlwZV9udW1iZXJfZGVmYXVsdCA9IFN2Z1R5cGVOdW1iZXI7XG5cbi8vIHNyYy9pY29ucy90eXBlLXNlbGVjdC50c3hcbmltcG9ydCAqIGFzIFJlYWN0NCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIFN2Z1R5cGVTZWxlY3QocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgdmlld0JveDogXCIwIDAgMTQgMTRcIlxuICB9LCBwcm9wcyksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTcgMTNBNiA2IDAgMTA3IDFhNiA2IDAgMDAwIDEyek0zLjc1MSA1LjMyM0EuMi4yIDAgMDEzLjkwOSA1aDYuMTgyYS4yLjIgMCAwMS4xNTguMzIzTDcuMTU4IDkuMjk3YS4yLjIgMCAwMS0uMzE2IDBMMy43NTEgNS4zMjN6XCJcbiAgfSkpO1xufVxudmFyIHR5cGVfc2VsZWN0X2RlZmF1bHQgPSBTdmdUeXBlU2VsZWN0O1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1tdWx0aS1zZWxlY3QudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDUgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlTXVsdGlTZWxlY3QocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgdmlld0JveDogXCIwIDAgMTQgMTRcIlxuICB9LCBwcm9wcyksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTQgM2ExIDEgMCAwMTEtMWg3YTEgMSAwIDExMCAySDVhMSAxIDAgMDEtMS0xem0wIDRhMSAxIDAgMDExLTFoN2ExIDEgMCAxMTAgMkg1YTEgMSAwIDAxLTEtMXptMCA0YTEgMSAwIDAxMS0xaDdhMSAxIDAgMTEwIDJINWExIDEgMCAwMS0xLTF6TTIgNGExIDEgMCAxMTAtMiAxIDEgMCAwMTAgMnptMCA0YTEgMSAwIDExMC0yIDEgMSAwIDAxMCAyem0wIDRhMSAxIDAgMTEwLTIgMSAxIDAgMDEwIDJ6XCJcbiAgfSkpO1xufVxudmFyIHR5cGVfbXVsdGlfc2VsZWN0X2RlZmF1bHQgPSBTdmdUeXBlTXVsdGlTZWxlY3Q7XG5cbi8vIHNyYy9pY29ucy90eXBlLWRhdGUudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDYgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlRGF0ZShwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0Ni5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0Ni5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTAuODg5IDUuNUgzLjExdjEuNTU2aDcuNzc4VjUuNXptMS41NTUtNC40NDRoLS43NzdWMEgxMC4xMXYxLjA1NkgzLjg5VjBIMi4zMzN2MS4wNTZoLS43NzdjLS44NjQgMC0xLjU0OC43LTEuNTQ4IDEuNTU1TDAgMTIuNWMwIC44NTYuNjkyIDEuNSAxLjU1NiAxLjVoMTAuODg4QzEzLjMgMTQgMTQgMTMuMzU2IDE0IDEyLjVWMi42MTFjMC0uODU1LS43LTEuNTU1LTEuNTU2LTEuNTU1em0wIDExLjQ0NEgxLjU1NlYzLjk0NGgxMC44ODhWMTIuNXpNOC41NTYgOC42MTFIMy4xMXYxLjU1Nmg1LjQ0NVY4LjYxelwiXG4gIH0pKTtcbn1cbnZhciB0eXBlX2RhdGVfZGVmYXVsdCA9IFN2Z1R5cGVEYXRlO1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1wZXJzb24udHN4XG5pbXBvcnQgKiBhcyBSZWFjdDcgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlUGVyc29uKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q3LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q3LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk05LjYyNSAxMC44NDdDOC45MTIgMTAuMjg5IDguMTIxIDkuOTI2IDcgOS4yNnYtLjU0YTMuMzMgMy4zMyAwIDAwLjUzOC0uODg4Yy40MDgtLjEuNzc0LS40OTguNzc0LS44MzIgMC0uNDgyLS4yMDItLjY3My0uNDQtLjgyOSAwLS4wMTUuMDAzLS4wMy4wMDMtLjA0NiAwLS43MTEtLjQzOC0yLjYyNS0yLjYyNS0yLjYyNS0yLjE4OCAwLTIuNjI1IDEuOTE1LTIuNjI1IDIuNjI1IDAgLjAxNy4wMDMuMDMuMDAzLjA0Ni0uMjM4LjE1Ni0uNDQuMzQ3LS40NC44MjkgMCAuMzM0LjM2Ni43MzEuNzc0LjgzMy4xNDYuMzQzLjMyNi42NDMuNTM4Ljg4NnYuNTQxYy0xLjEyLjY2NS0xLjkxMiAxLjAyOC0yLjYyNSAxLjU4N0MuMDQxIDExLjQ5OCAwIDEyLjQ2OSAwIDE0aDEwLjVjMC0xLjUzMS0uMDQxLTIuNTAyLS44NzUtMy4xNTN6bTMuNS0zLjVjLS43MTMtLjU1OC0xLjUwNC0uOTIxLTIuNjI1LTEuNTg3di0uNTRjLjIxMi0uMjQ0LjM5Mi0uNTQ0LjUzOC0uODg4LjQwOC0uMS43NzQtLjQ5OC43NzQtLjgzMiAwLS40ODItLjIwMi0uNjczLS40NC0uODI5IDAtLjAxNS4wMDMtLjAzLjAwMy0uMDQ2QzExLjM3NSAxLjkxNCAxMC45MzcgMCA4Ljc1IDAgNi41NjIgMCA2LjEyNSAxLjkxNSA2LjEyNSAyLjYyNWMwIC4wMTcuMDAzLjAzLjAwMy4wNDYtLjAxNi4wMTItLjAzLjAyNS0uMDQ3LjAzNiAxLjc1MS4zNTkgMi41MTYgMS44NDEgMi42NDcgMy4wNC4yNDguMjYyLjQ2LjY1LjQ2IDEuMjUzIDAgLjYwMy0uNDE3IDEuMjAzLTEuMDA0IDEuNTE1LS4wNTcuMTA5LS4xMTcuMjE0LS4xODEuMzE1bC40MzcuMjQ1Yy42NC4zNTcgMS4xOTQuNjY2IDEuNzI0IDEuMDgxLjEzOC4xMDguMjU2LjIyNC4zNjUuMzQzSDE0YzAtMS41My0uMDQxLTIuNS0uODc1LTMuMTUzelwiXG4gIH0pKTtcbn1cbnZhciB0eXBlX3BlcnNvbl9kZWZhdWx0ID0gU3ZnVHlwZVBlcnNvbjtcblxuLy8gc3JjL2ljb25zL3R5cGUtZmlsZS50c3hcbmltcG9ydCAqIGFzIFJlYWN0OCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIFN2Z1R5cGVGaWxlKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q4LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q4LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk01Ljk0NiAxNGE0Ljk3NSA0Ljk3NSAwIDAxLTMuNDk3LTEuNDE1QTQuNzMxIDQuNzMxIDAgMDExIDkuMTc0YzAtMS4yODguNTE1LTIuNSAxLjQ0OS0zLjQxTDcuNDU2Ljk4NmMxLjM0NS0xLjMxMyAzLjcyMi0xLjMxOCA1LjA4LjAwN2EzLjQ1MyAzLjQ1MyAwIDAxMCA0Ljk2MUw4LjAzIDEwLjI0MWMtLjg2Ny44NDctMi4yOTMuODQ4LTMuMTctLjAwNmEyLjE1OCAyLjE1OCAwIDAxMC0zLjEwMmwxLjc0NC0xLjcwMSAxLjI3MiAxLjI0LTEuNzQ0IDEuNzAxYS40My40MyAwIDAwMCAuNjIxYy4yMy4yMjMuNDA1LjIyMy42MzYgMGw0LjUwMy00LjI4OGExLjcyMyAxLjcyMyAwIDAwLS4wMDctMi40NzNjLS42OC0uNjYzLTEuODY0LS42NjMtMi41NDMgMEwzLjcxMyA3LjAxMWEzLjAwNiAzLjAwNiAwIDAwLS45MTUgMi4xNjNjMCAuODIuMzI4IDEuNTkxLjkyMiAyLjE3IDEuMTkgMS4xNjIgMy4yNjIgMS4xNjIgNC40NTEgMGwyLjI0OC0yLjE5MiAxLjI3MiAxLjI0LTIuMjQ4IDIuMTkzQTQuOTc4IDQuOTc4IDAgMDE1Ljk0NiAxNHpcIlxuICB9KSk7XG59XG52YXIgdHlwZV9maWxlX2RlZmF1bHQgPSBTdmdUeXBlRmlsZTtcblxuLy8gc3JjL2ljb25zL3R5cGUtY2hlY2tib3gudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDkgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlQ2hlY2tib3gocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDkuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgdmlld0JveDogXCIwIDAgMTQgMTRcIlxuICB9LCBwcm9wcyksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDkuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTAgM2EzIDMgMCAwMTMtM2g4YTMgMyAwIDAxMyAzdjhhMyAzIDAgMDEtMyAzSDNhMyAzIDAgMDEtMy0zVjN6bTMtMS41QTEuNSAxLjUgMCAwMDEuNSAzdjhBMS41IDEuNSAwIDAwMyAxMi41aDhhMS41IDEuNSAwIDAwMS41LTEuNVYzQTEuNSAxLjUgMCAwMDExIDEuNUgzem0tLjE2NyA1LjMxNmwuNTY2LS41NDIuMTc3LS4xNy4zNDctLjMzMi4zNDYuMzM0LjE3Ni4xNyAxLjEzOSAxLjA5OCAzLjY5OS0zLjU2My4xNzctLjE3LjM0Ny0uMzM1LjM0Ny4zMzQuMTc3LjE3LjU2My41NDMuMTc3LjE3MS4zNzIuMzYtLjM3Mi4zNi0uMTc3LjE3LTQuNzg2IDQuNjE1LS4xNzcuMTcxLS4zNDcuMzM0LS4zNDctLjMzNC0uMTc3LS4xNy0yLjIzLTIuMTUtLjE3Ny0uMTcyLS4zNzUtLjM2MS4zNzYtLjM2LjE3OS0uMTd6XCJcbiAgfSkpO1xufVxudmFyIHR5cGVfY2hlY2tib3hfZGVmYXVsdCA9IFN2Z1R5cGVDaGVja2JveDtcblxuLy8gc3JjL2ljb25zL3R5cGUtdXJsLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QxMCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIFN2Z1R5cGVVcmwocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDEwLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3QxMC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMy43MzMgMy44NjdoMy43MzRjMS4wMyAwIDEuODY2LjgzNyAxLjg2NiAxLjg2NiAwIDEuMDMtLjgzNyAxLjg2Ny0xLjg2NiAxLjg2N2gtLjkzNGEuOTM0LjkzNCAwIDAwMCAxLjg2N2guOTM0YTMuNzM0IDMuNzM0IDAgMDAwLTcuNDY3SDMuNzMzQTMuNzMgMy43MyAwIDAwMS44OSA4Ljk3N2E0LjYzNyA0LjYzNyAwIDAxLjMxNC0yLjE4IDEuODU0IDEuODU0IDAgMDEtLjMzNi0xLjA2NGMwLTEuMDMuODM3LTEuODY2IDEuODY2LTEuODY2em04LjM3NyAxLjQyMmE0LjYgNC42IDAgMDEtLjMxNiAyLjE3NmMuMjEyLjMwMy4zNC42Ny4zNCAxLjA2OCAwIDEuMDMtLjgzOCAxLjg2Ny0xLjg2NyAxLjg2N0g2LjUzM2ExLjg2OSAxLjg2OSAwIDAxLTEuODY2LTEuODY3YzAtMS4wMy44MzctMS44NjYgMS44NjYtMS44NjZoLjkzNGEuOTM0LjkzNCAwIDAwMC0xLjg2N2gtLjkzNGEzLjczMyAzLjczMyAwIDAwMCA3LjQ2N2gzLjczNGEzLjczIDMuNzMgMCAwMDEuODQzLTYuOTc4elwiXG4gIH0pKTtcbn1cbnZhciB0eXBlX3VybF9kZWZhdWx0ID0gU3ZnVHlwZVVybDtcblxuLy8gc3JjL2ljb25zL3R5cGUtZW1haWwudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDExIGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnVHlwZUVtYWlsKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QxMS5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0MTEuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTE0IDYuMjI1YzAgLjgyMi0uMTMzIDEuNTc0LS40IDIuMjU2LS4yNjcuNjgzLS42NDQgMS4yMTgtMS4xMyAxLjYwNi0uNDg4LjM4OC0uOTQ2LjYtMS40OTQuNi0uNDI5IDAtLjgwOC0uMTAyLTEuMTM5LS4zMDVhMS43NTMgMS43NTMgMCAwMS0uNzEzLS44Yy0uNjEzLjczNi0xLjU2MyAxLjEwNC0yLjUzMSAxLjEwNC0xLjAyNyAwLTEuODM1LS4zMDQtMi40MjctLjkxMi0uNTkxLS42MDgtLjg4Ny0xLjQ0LS44ODctMi40OTYgMC0xLjIwNC4zODktMi4xNzUgMS4xNjYtMi45MTEuNzc2LS43MzYgMS43OTEtMS4xMDUgMy4wNDQtMS4xMDUuNDk4IDAgMi4wMzIuMjEyIDIuMjUyLjI2OC41MS4xMy44Ni41OTMuODM1IDEuMTEybC0uMTU2IDMuMjg3YzAgLjc5NC4yMiAxLjE5LjY2IDEuMTkuMzcyIDAgLjY2OC0uMjY3Ljg4OC0uOC4yMi0uNTM0LjMzLTEuMjMyLjMzLTIuMDk0IDAtLjkxOS0uMTk0LTEuNzMxLS41ODItMi40MzZhMy45MjQgMy45MjQgMCAwMC0xLjY0LTEuNjE0Yy0uNzA0LS4zNzEtMS41MDktLjU1Ny0yLjQxMy0uNTU3LTEuMTcyIDAtMi4xOS4yMzctMy4wNTMuNzExYTQuNzg1IDQuNzg1IDAgMDAtMS45ODggMi4wNWMtLjQ2Ljg5NC0uNjkxIDEuOTI2LS42OTEgMy4wOTYgMCAxLjU3Ni40MjggMi43ODQgMS4yODMgMy42MjcuODU1Ljg0MSAyLjA5NCAxLjI2MiAzLjcxOCAxLjI2Mi42MTUgMCAxLjI5LS4wNjcgMi4wMjctLjIuMjI1LS4wNDIuNTE4LS4xMDguODc3LS4yYS44NjMuODYzIDAgMDExLjAyNS41MjcuNzYuNzYgMCAwMS0uNTAyLjk5M2MtMS4wNTIuMzE2LTIuMTcuNDg4LTMuMzU3LjUxNi0yLjIwNCAwLTMuOTIyLS41Ny01LjE1NC0xLjcxM0MuNjE2IDExLjE0NiAwIDkuNTYgMCA3LjUyN2MwLTEuNDEuMzE1LTIuNjkuOTQ0LTMuODRBNi43OTIgNi43OTIgMCAwMTMuNjMuOThDNC43OTQuMzI3IDYuMTMxIDAgNy42NDUgMGMxLjI3NiAwIDIuNTE0LjI5IDMuNDE4Ljc3LjkwNS40ODEgMS41NzQgMS4yMjggMi4xMiAyLjE3Ni41NDQuOTQ3LjgxNyAyLjA0LjgxNyAzLjI4em0tOC42MTUgMS4wMWMwIDEuMjA4LjQ4OCAxLjgxMSAxLjQ2NiAxLjgxMS41MTEgMCAuOS0uMTgxIDEuMTY4LS41NDUuMjY3LS4zNjMuNDI5LS45NTQuNDg2LTEuNzcybC4xMS0xLjg5NmE0LjYzOCA0LjYzOCAwIDAwLS45OC0uMDk1Yy0uNzEgMC0xLjI2My4yMjQtMS42NTguNjctLjM5NS40NDYtLjU5MiAxLjA1NS0uNTkyIDEuODI4elwiXG4gIH0pKTtcbn1cbnZhciB0eXBlX2VtYWlsX2RlZmF1bHQgPSBTdmdUeXBlRW1haWw7XG5cbi8vIHNyYy9pY29ucy90eXBlLXBob25lLW51bWJlci50c3hcbmltcG9ydCAqIGFzIFJlYWN0MTIgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlUGhvbmVOdW1iZXIocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDEyLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3QxMi5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMi4yMDcuMDEzYS40ODcuNDg3IDAgMDAtLjI5LjAyQy44Ny40MzguMjEzIDEuOTMuMDU4IDIuOTU1Yy0uNDg0IDMuMzMgMi4xNSA2LjIxNSA0LjU3IDguMTEzIDIuMTQ5IDEuNjg0IDYuMjczIDQuNDUzIDguNzEzIDEuNzgxLjMxLS4zMjkuNjc4LS44MTMuNjU4LTEuMjk3LS4wNTgtLjgxMy0uODEzLTEuMzk0LTEuMzk0LTEuODQtLjQ0NS0uMzI5LTEuMzc1LTEuMjM5LTEuOTU2LTEuMjItLjUyMi4wMi0uODUxLjU2Mi0xLjE4Ljg5MWwtLjU4Mi41ODFjLS4wOTYuMDk3LTEuMzM2LS43MTYtMS40NzEtLjgxM2E5Ljg4MSA5Ljg4MSAwIDAxLTEuNDE0LTEuMTA0QTkuMTMgOS4xMyAwIDAxNC44NiA2LjczMmMtLjA5Ny0uMTM2LS44OS0xLjMxNy0uODEzLTEuNDE0IDAgMCAuNjc3LS43MzYuODcxLTEuMDI2LjQwNy0uNjIuNzE3LTEuMTA0LjI1Mi0xLjg0LS4xNzQtLjI3LS4zODctLjQ4NC0uNjItLjcxNi0uNDA2LS4zODctLjgxMy0uNzk0LTEuMjc4LTEuMTIzLS4yNTEtLjE5NC0uNjc3LS41NDItMS4wNjUtLjZ6XCJcbiAgfSkpO1xufVxudmFyIHR5cGVfcGhvbmVfbnVtYmVyX2RlZmF1bHQgPSBTdmdUeXBlUGhvbmVOdW1iZXI7XG5cbi8vIHNyYy9pY29ucy90eXBlLWZvcm11bGEudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDEzIGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnVHlwZUZvcm11bGEocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDEzLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3QxMy5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNNy43NzkgNy4wNjNsLTMuMTU3IDQuMjI0YS40OS40OSAwIDAwLS4wNzIuMjE4LjM1LjM1IDAgMDAuMzQ2LjM1N2g2LjI0MmMuNDc2IDAgLjg2Mi4zOTguODYyLjg4OXYuMzZjMCAuNDkxLS4zODYuODg5LS44NjIuODg5SDEuODYyQS44NzYuODc2IDAgMDExIDEzLjExMXYtLjQyNWEuODIuODIgMCAwMS4xNzctLjU0TDQuMzkzIDcuOGExLjM2NyAxLjM2NyAwIDAwLS4wMDYtMS42MjVMMS40IDIuMTk0YS44MjIuODIyIDAgMDEtLjE4LS41NDRWLjg5QzEuMjIuMzk4IDEuNjA0IDAgMi4wOCAwaDguODM4Yy40NzYgMCAuODYxLjM5OC44NjEuODg5di4zNmMwIC40OTEtLjM4NS44OS0uODYuODlINS4xMzVjLS4xOSAwLS4zNDUuMTU5LS4zNDUuMzU2YS40ODkuNDg5IDAgMDAuMDcuMjE2bDIuOTIgMy45NzVjLjA0OS4wNjIuMDYzLjEwNy4wNi4xODhhLjI0Ni4yNDYgMCAwMS0uMDYyLjE4OXpcIlxuICB9KSk7XG59XG52YXIgdHlwZV9mb3JtdWxhX2RlZmF1bHQgPSBTdmdUeXBlRm9ybXVsYTtcblxuLy8gc3JjL2ljb25zL3R5cGUtcmVsYXRpb24udHN4XG5pbXBvcnQgKiBhcyBSZWFjdDE0IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnVHlwZVJlbGF0aW9uKHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QxNC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0MTQuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTQuNSAxdjJoNS4wODZMMSAxMS41ODYgMi40MTQgMTMgMTEgNC40MTRWOS41aDJWMXpcIlxuICB9KSk7XG59XG52YXIgdHlwZV9yZWxhdGlvbl9kZWZhdWx0ID0gU3ZnVHlwZVJlbGF0aW9uO1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1wZXJzb24tMi50c3hcbmltcG9ydCAqIGFzIFJlYWN0MTUgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdUeXBlUGVyc29uMihwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MTUuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgdmlld0JveDogXCIwIDAgMTQgMTRcIlxuICB9LCBwcm9wcyksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDE1LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk0xMy4xMjUgMTAuMDM1Yy0uNTcxLS41NS0yLjMyNC0xLjUwNC0zLjUtMi4xNnYtLjgzNGMuMjI0LS4zMjIuNDItLjY3MS41NjYtMS4wNTUuMzk0LS4yNDIuNzQ2LS43MDIuNzQ2LTEuMTczIDAtLjQ1OC0uMDA1LS44Ny0uNDctMS4yMDhDMTAuMzA1IDEuNTU4IDkuNDM2IDAgNyAwUzMuNjk1IDEuNTU4IDMuNTMzIDMuNjA1Yy0uNDY1LjMzOC0uNDcuNzUtLjQ3IDEuMjA4IDAgLjQ3MS4zNTIuOTMuNzQ2IDEuMTczLjE0Ni4zODQuMzQyLjczMy41NjYgMS4wNTV2LjgzNGMtMS4xNzYuNjU2LTIuOTI5IDEuNjEtMy41IDIuMTZDLjE2NSAxMC43MiAwIDExLjgxMiAwIDE0aDE0YzAtMi4xODgtLjE2NC0zLjI4MS0uODc1LTMuOTY1elwiXG4gIH0pKTtcbn1cbnZhciB0eXBlX3BlcnNvbl8yX2RlZmF1bHQgPSBTdmdUeXBlUGVyc29uMjtcblxuLy8gc3JjL2ljb25zL3R5cGUtdGltZXN0YW1wLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QxNiBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIFN2Z1R5cGVUaW1lc3RhbXAocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDE2LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3QxNi5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNNi45ODYgMTRjLTEuNzkgMC0zLjU4Mi0uNjktNC45NDQtMi4wNjgtMi43MjMtMi43Mi0yLjcyMy03LjE3MiAwLTkuODkyIDIuNzI1LTIuNzIgNy4xODItMi43MiA5LjkwNiAwQTYuOTcyIDYuOTcyIDAgMDExNCA2Ljk5NmMwIDEuODgtLjcyOCAzLjYzMy0yLjA1MiA0Ljk1NUE3LjA1OCA3LjA1OCAwIDAxNi45ODYgMTR6bTMuMjg1LTYuOTl2MS42NDVINS41MjZ2LTUuNDdoMS44NDF2My42M2gyLjkwNHYuMTk0em0xLjg5LS4wMTRjMC0xLjM3OS0uNTQyLTIuNjctMS41MjItMy42NDgtMi4wMDYtMi4wMDUtNS4yODctMi4wMDctNy4yOTctLjAwOWwtLjAwOS4wMDlhNS4xNjggNS4xNjggMCAwMDAgNy4yOTVjMi4wMSAyLjAwNyA1LjI5NyAyLjAwNyA3LjMwNiAwYTUuMTE5IDUuMTE5IDAgMDAxLjUyMS0zLjY0N3pcIlxuICB9KSk7XG59XG52YXIgdHlwZV90aW1lc3RhbXBfZGVmYXVsdCA9IFN2Z1R5cGVUaW1lc3RhbXA7XG5cbi8vIHNyYy9pY29ucy9wcm9wZXJ0eS1pY29uLnRzeFxudmFyIGljb25NYXAgPSB7XG4gIHRpdGxlOiB0eXBlX3RpdGxlX2RlZmF1bHQsXG4gIHRleHQ6IHR5cGVfdGV4dF9kZWZhdWx0LFxuICBudW1iZXI6IHR5cGVfbnVtYmVyX2RlZmF1bHQsXG4gIHNlbGVjdDogdHlwZV9zZWxlY3RfZGVmYXVsdCxcbiAgbXVsdGlfc2VsZWN0OiB0eXBlX211bHRpX3NlbGVjdF9kZWZhdWx0LFxuICBkYXRlOiB0eXBlX2RhdGVfZGVmYXVsdCxcbiAgcGVyc29uOiB0eXBlX3BlcnNvbl9kZWZhdWx0LFxuICBmaWxlOiB0eXBlX2ZpbGVfZGVmYXVsdCxcbiAgY2hlY2tib3g6IHR5cGVfY2hlY2tib3hfZGVmYXVsdCxcbiAgdXJsOiB0eXBlX3VybF9kZWZhdWx0LFxuICBlbWFpbDogdHlwZV9lbWFpbF9kZWZhdWx0LFxuICBwaG9uZV9udW1iZXI6IHR5cGVfcGhvbmVfbnVtYmVyX2RlZmF1bHQsXG4gIGZvcm11bGE6IHR5cGVfZm9ybXVsYV9kZWZhdWx0LFxuICByZWxhdGlvbjogdHlwZV9yZWxhdGlvbl9kZWZhdWx0LFxuICBjcmVhdGVkX3RpbWU6IHR5cGVfdGltZXN0YW1wX2RlZmF1bHQsXG4gIGxhc3RfZWRpdGVkX3RpbWU6IHR5cGVfdGltZXN0YW1wX2RlZmF1bHQsXG4gIGNyZWF0ZWRfYnk6IHR5cGVfcGVyc29uXzJfZGVmYXVsdCxcbiAgbGFzdF9lZGl0ZWRfYnk6IHR5cGVfcGVyc29uXzJfZGVmYXVsdFxufTtcbnZhciBQcm9wZXJ0eUljb24gPSAoX2EpID0+IHtcbiAgdmFyIF9iID0gX2EsIHtcbiAgICB0eXBlXG4gIH0gPSBfYiwgcmVzdCA9IF9fb2JqUmVzdChfYiwgW1xuICAgIFwidHlwZVwiXG4gIF0pO1xuICBjb25zdCBpY29uID0gaWNvbk1hcFt0eXBlXTtcbiAgaWYgKCFpY29uKVxuICAgIHJldHVybiBudWxsO1xuICByZXR1cm4gaWNvbihyZXN0KTtcbn07XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLWNvbHVtbi10aXRsZS50c3hcbnZhciBDb2xsZWN0aW9uQ29sdW1uVGl0bGUgPSAoeyBzY2hlbWEgfSkgPT4ge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MTcuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLWNvbHVtbi10aXRsZVwiXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDE3LmNyZWF0ZUVsZW1lbnQoUHJvcGVydHlJY29uLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLWNvbHVtbi10aXRsZS1pY29uXCIsXG4gICAgdHlwZTogc2NoZW1hLnR5cGVcbiAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDE3LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jb2x1bW4tdGl0bGUtYm9keVwiXG4gIH0sIHNjaGVtYS5uYW1lKSk7XG59O1xuXG4vLyBzcmMvdGhpcmQtcGFydHkvcHJvcGVydHkudHN4XG52YXIgaW1wb3J0X2Zvcm1hdF9udW1iZXIgPSBfX3RvRVNNKHJlcXVpcmVfZm9ybWF0X251bWJlcigpLCAxKTtcbnZhciBpbXBvcnRfZm9ybWF0MiA9IF9fdG9FU00ocmVxdWlyZV9mb3JtYXQoKSwgMSk7XG5pbXBvcnQgKiBhcyBSZWFjdDM4IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvdXRpbHMudHNcbmltcG9ydCB7IGlzVXJsLCBmb3JtYXREYXRlLCBmb3JtYXROb3Rpb25EYXRlVGltZSB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcblxuLy8gc3JjL21hcC1pbWFnZS11cmwudHNcbnZhciBkZWZhdWx0TWFwSW1hZ2VVcmwgPSAodXJsLCBibG9jaykgPT4ge1xuICBpZiAoIXVybCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmICh1cmwuc3RhcnRzV2l0aChcImRhdGE6XCIpKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICBpZiAodXJsLnN0YXJ0c1dpdGgoXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb21cIikpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIHRyeSB7XG4gICAgY29uc3QgdSA9IG5ldyBVUkwodXJsKTtcbiAgICBpZiAodS5wYXRobmFtZS5zdGFydHNXaXRoKFwiL3NlY3VyZS5ub3Rpb24tc3RhdGljLmNvbVwiKSAmJiB1Lmhvc3RuYW1lLmVuZHNXaXRoKFwiLmFtYXpvbmF3cy5jb21cIikpIHtcbiAgICAgIGlmICh1LnNlYXJjaFBhcmFtcy5oYXMoXCJYLUFtei1DcmVkZW50aWFsXCIpICYmIHUuc2VhcmNoUGFyYW1zLmhhcyhcIlgtQW16LVNpZ25hdHVyZVwiKSAmJiB1LnNlYXJjaFBhcmFtcy5oYXMoXCJYLUFtei1BbGdvcml0aG1cIikpIHtcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgfVxuICBpZiAodXJsLnN0YXJ0c1dpdGgoXCIvaW1hZ2VzXCIpKSB7XG4gICAgdXJsID0gYGh0dHBzOi8vd3d3Lm5vdGlvbi5zbyR7dXJsfWA7XG4gIH1cbiAgdXJsID0gYGh0dHBzOi8vd3d3Lm5vdGlvbi5zbyR7dXJsLnN0YXJ0c1dpdGgoXCIvaW1hZ2VcIikgPyB1cmwgOiBgL2ltYWdlLyR7ZW5jb2RlVVJJQ29tcG9uZW50KHVybCl9YH1gO1xuICBjb25zdCBub3Rpb25JbWFnZVVybFYyID0gbmV3IFVSTCh1cmwpO1xuICBsZXQgdGFibGUgPSBibG9jay5wYXJlbnRfdGFibGUgPT09IFwic3BhY2VcIiA/IFwiYmxvY2tcIiA6IGJsb2NrLnBhcmVudF90YWJsZTtcbiAgaWYgKHRhYmxlID09PSBcImNvbGxlY3Rpb25cIikge1xuICAgIHRhYmxlID0gXCJibG9ja1wiO1xuICB9XG4gIG5vdGlvbkltYWdlVXJsVjIuc2VhcmNoUGFyYW1zLnNldChcInRhYmxlXCIsIHRhYmxlKTtcbiAgbm90aW9uSW1hZ2VVcmxWMi5zZWFyY2hQYXJhbXMuc2V0KFwiaWRcIiwgYmxvY2suaWQpO1xuICBub3Rpb25JbWFnZVVybFYyLnNlYXJjaFBhcmFtcy5zZXQoXCJjYWNoZVwiLCBcInYyXCIpO1xuICB1cmwgPSBub3Rpb25JbWFnZVVybFYyLnRvU3RyaW5nKCk7XG4gIHJldHVybiB1cmw7XG59O1xuXG4vLyBzcmMvbWFwLXBhZ2UtdXJsLnRzXG52YXIgZGVmYXVsdE1hcFBhZ2VVcmwgPSAocm9vdFBhZ2VJZCkgPT4gKHBhZ2VJZCkgPT4ge1xuICBwYWdlSWQgPSAocGFnZUlkIHx8IFwiXCIpLnJlcGxhY2UoLy0vZywgXCJcIik7XG4gIGlmIChyb290UGFnZUlkICYmIHBhZ2VJZCA9PT0gcm9vdFBhZ2VJZCkge1xuICAgIHJldHVybiBcIi9cIjtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYC8ke3BhZ2VJZH1gO1xuICB9XG59O1xuXG4vLyBzcmMvdXRpbHMudHNcbnZhciBjcyA9ICguLi5jbGFzc2VzKSA9PiBjbGFzc2VzLmZpbHRlcigoYSkgPT4gISFhKS5qb2luKFwiIFwiKTtcbnZhciBnZXRIYXNoRnJhZ21lbnRWYWx1ZSA9ICh1cmwpID0+IHtcbiAgcmV0dXJuIHVybC5pbmNsdWRlcyhcIiNcIikgPyB1cmwucmVwbGFjZSgvXi4rKCMuKykkLywgXCIkMVwiKSA6IFwiXCI7XG59O1xudmFyIGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XG52YXIgeW91dHViZURvbWFpbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gIFwieW91dHUuYmVcIixcbiAgXCJ5b3V0dWJlLmNvbVwiLFxuICBcInd3dy55b3V0dWJlLmNvbVwiLFxuICBcInlvdXR1YmUtbm9jb29raWUuY29tXCIsXG4gIFwid3d3LnlvdXR1YmUtbm9jb29raWUuY29tXCJcbl0pO1xudmFyIGdldFlvdXR1YmVJZCA9ICh1cmwpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGhvc3RuYW1lIH0gPSBuZXcgVVJMKHVybCk7XG4gICAgaWYgKCF5b3V0dWJlRG9tYWlucy5oYXMoaG9zdG5hbWUpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgcmVnRXhwID0gL14uKih5b3V0dVxcLmJlXFwvfHZcXC98dVxcL1xcd1xcL3xlbWJlZFxcL3x3YXRjaFxcP3Y9fCZ2PSkoW14jJj9dKikuKi9pO1xuICAgIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKHJlZ0V4cCk7XG4gICAgaWYgKG1hdGNoICYmIG1hdGNoWzJdLmxlbmd0aCA9PSAxMSkge1xuICAgICAgcmV0dXJuIG1hdGNoWzJdO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICB9XG4gIHJldHVybiBudWxsO1xufTtcblxuLy8gc3JjL2NvbnRleHQudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDM3IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvbmV4dC50c3hcbmltcG9ydCAqIGFzIFJlYWN0MTggZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgaXNFcXVhbCBmcm9tIFwicmVhY3QtZmFzdC1jb21wYXJlXCI7XG52YXIgd3JhcE5leHRJbWFnZSA9IChOZXh0SW1hZ2UpID0+IHtcbiAgcmV0dXJuIFJlYWN0MTgubWVtbyhmdW5jdGlvbiBSZWFjdE5vdGlvblhOZXh0SW1hZ2UoX2EpIHtcbiAgICB2YXIgX2IgPSBfYSwge1xuICAgICAgc3JjLFxuICAgICAgYWx0LFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBzdHlsZSxcbiAgICAgIGxheW91dFxuICAgIH0gPSBfYiwgcmVzdCA9IF9fb2JqUmVzdChfYiwgW1xuICAgICAgXCJzcmNcIixcbiAgICAgIFwiYWx0XCIsXG4gICAgICBcIndpZHRoXCIsXG4gICAgICBcImhlaWdodFwiLFxuICAgICAgXCJjbGFzc05hbWVcIixcbiAgICAgIFwic3R5bGVcIixcbiAgICAgIFwibGF5b3V0XCJcbiAgICBdKTtcbiAgICBpZiAoIWxheW91dCkge1xuICAgICAgbGF5b3V0ID0gd2lkdGggJiYgaGVpZ2h0ID8gXCJpbnRyaW5zaWNcIiA6IFwiZmlsbFwiO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MTguY3JlYXRlRWxlbWVudChOZXh0SW1hZ2UsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIHNyYyxcbiAgICAgIGFsdCxcbiAgICAgIHdpZHRoOiBsYXlvdXQgPT09IFwiaW50cmluc2ljXCIgJiYgd2lkdGgsXG4gICAgICBoZWlnaHQ6IGxheW91dCA9PT0gXCJpbnRyaW5zaWNcIiAmJiBoZWlnaHQsXG4gICAgICBvYmplY3RGaXQ6IHN0eWxlID09IG51bGwgPyB2b2lkIDAgOiBzdHlsZS5vYmplY3RGaXQsXG4gICAgICBvYmplY3RQb3NpdGlvbjogc3R5bGUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0eWxlLm9iamVjdFBvc2l0aW9uLFxuICAgICAgbGF5b3V0XG4gICAgfSwgcmVzdCkpO1xuICB9LCBpc0VxdWFsKTtcbn07XG52YXIgd3JhcE5leHRMaW5rID0gKE5leHRMaW5rKSA9PiBmdW5jdGlvbiBSZWFjdE5vdGlvblhOZXh0TGluayhfYSkge1xuICB2YXIgX2IgPSBfYSwge1xuICAgIGhyZWYsXG4gICAgYXMsXG4gICAgcGFzc0hyZWYsXG4gICAgcHJlZmV0Y2gsXG4gICAgcmVwbGFjZSxcbiAgICBzY3JvbGwsXG4gICAgc2hhbGxvdyxcbiAgICBsb2NhbGVcbiAgfSA9IF9iLCBsaW5rUHJvcHMgPSBfX29ialJlc3QoX2IsIFtcbiAgICBcImhyZWZcIixcbiAgICBcImFzXCIsXG4gICAgXCJwYXNzSHJlZlwiLFxuICAgIFwicHJlZmV0Y2hcIixcbiAgICBcInJlcGxhY2VcIixcbiAgICBcInNjcm9sbFwiLFxuICAgIFwic2hhbGxvd1wiLFxuICAgIFwibG9jYWxlXCJcbiAgXSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QxOC5jcmVhdGVFbGVtZW50KE5leHRMaW5rLCB7XG4gICAgaHJlZixcbiAgICBhcyxcbiAgICBwYXNzSHJlZixcbiAgICBwcmVmZXRjaCxcbiAgICByZXBsYWNlLFxuICAgIHNjcm9sbCxcbiAgICBzaGFsbG93LFxuICAgIGxvY2FsZVxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QxOC5jcmVhdGVFbGVtZW50KFwiYVwiLCBfX3NwcmVhZFZhbHVlcyh7fSwgbGlua1Byb3BzKSkpO1xufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvYXNzZXQtd3JhcHBlci50c3hcbmltcG9ydCAqIGFzIFJlYWN0MzQgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy9jb21wb25lbnRzL2Fzc2V0LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QyMSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdldFRleHRDb250ZW50IH0gZnJvbSBcIm5vdGlvbi11dGlsc1wiO1xuXG4vLyBzcmMvY29tcG9uZW50cy9sYXp5LWltYWdlLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QxOSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IExhenlJbWFnZUZ1bGwsIEltYWdlU3RhdGUgfSBmcm9tIFwicmVhY3QtbGF6eS1pbWFnZXNcIjtcbmltcG9ydCB7IG5vcm1hbGl6ZVVybCB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbnZhciBMYXp5SW1hZ2UgPSAoX2EpID0+IHtcbiAgdmFyIF9iID0gX2EsIHtcbiAgICBzcmMsXG4gICAgYWx0LFxuICAgIGNsYXNzTmFtZSxcbiAgICBzdHlsZSxcbiAgICB6b29tYWJsZSA9IGZhbHNlLFxuICAgIHByaW9yaXR5ID0gZmFsc2UsXG4gICAgaGVpZ2h0XG4gIH0gPSBfYiwgcmVzdCA9IF9fb2JqUmVzdChfYiwgW1xuICAgIFwic3JjXCIsXG4gICAgXCJhbHRcIixcbiAgICBcImNsYXNzTmFtZVwiLFxuICAgIFwic3R5bGVcIixcbiAgICBcInpvb21hYmxlXCIsXG4gICAgXCJwcmlvcml0eVwiLFxuICAgIFwiaGVpZ2h0XCJcbiAgXSk7XG4gIHZhciBfYTIsIF9iMiwgX2M7XG4gIGNvbnN0IHsgcmVjb3JkTWFwLCB6b29tLCBwcmV2aWV3SW1hZ2VzLCBmb3JjZUN1c3RvbUltYWdlcywgY29tcG9uZW50cyB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCB6b29tUmVmID0gUmVhY3QxOS51c2VSZWYoem9vbSA/IHpvb20uY2xvbmUoKSA6IG51bGwpO1xuICBjb25zdCBwcmV2aWV3SW1hZ2UgPSBwcmV2aWV3SW1hZ2VzID8gKF9jID0gKF9hMiA9IHJlY29yZE1hcCA9PSBudWxsID8gdm9pZCAwIDogcmVjb3JkTWFwLnByZXZpZXdfaW1hZ2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyW3NyY10pICE9IG51bGwgPyBfYyA6IChfYjIgPSByZWNvcmRNYXAgPT0gbnVsbCA/IHZvaWQgMCA6IHJlY29yZE1hcC5wcmV2aWV3X2ltYWdlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iMltub3JtYWxpemVVcmwoc3JjKV0gOiBudWxsO1xuICBjb25zdCBvbkxvYWQgPSBSZWFjdDE5LnVzZUNhbGxiYWNrKChlKSA9PiB7XG4gICAgaWYgKHpvb21hYmxlICYmIChlLnRhcmdldC5zcmMgfHwgZS50YXJnZXQuc3Jjc2V0KSkge1xuICAgICAgaWYgKHpvb21SZWYuY3VycmVudCkge1xuICAgICAgICA7XG4gICAgICAgIHpvb21SZWYuY3VycmVudC5hdHRhY2goZS50YXJnZXQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3pvb21SZWYsIHpvb21hYmxlXSk7XG4gIGNvbnN0IGF0dGFjaFpvb20gPSBSZWFjdDE5LnVzZUNhbGxiYWNrKChpbWFnZSkgPT4ge1xuICAgIGlmICh6b29tUmVmLmN1cnJlbnQgJiYgaW1hZ2UpIHtcbiAgICAgIDtcbiAgICAgIHpvb21SZWYuY3VycmVudC5hdHRhY2goaW1hZ2UpO1xuICAgIH1cbiAgfSwgW3pvb21SZWZdKTtcbiAgY29uc3QgYXR0YWNoWm9vbVJlZiA9IFJlYWN0MTkudXNlTWVtbygoKSA9PiB6b29tYWJsZSA/IGF0dGFjaFpvb20gOiB2b2lkIDAsIFt6b29tYWJsZSwgYXR0YWNoWm9vbV0pO1xuICBpZiAocHJldmlld0ltYWdlKSB7XG4gICAgY29uc3QgYXNwZWN0UmF0aW8gPSBwcmV2aWV3SW1hZ2Uub3JpZ2luYWxIZWlnaHQgLyBwcmV2aWV3SW1hZ2Uub3JpZ2luYWxXaWR0aDtcbiAgICBpZiAoY29tcG9uZW50cy5JbWFnZSkge1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDE5LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cy5JbWFnZSwge1xuICAgICAgICBzcmMsXG4gICAgICAgIGFsdCxcbiAgICAgICAgc3R5bGUsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgd2lkdGg6IHByZXZpZXdJbWFnZS5vcmlnaW5hbFdpZHRoLFxuICAgICAgICBoZWlnaHQ6IHByZXZpZXdJbWFnZS5vcmlnaW5hbEhlaWdodCxcbiAgICAgICAgYmx1ckRhdGFVUkw6IHByZXZpZXdJbWFnZS5kYXRhVVJJQmFzZTY0LFxuICAgICAgICBwbGFjZWhvbGRlcjogXCJibHVyXCIsXG4gICAgICAgIHByaW9yaXR5LFxuICAgICAgICBvbkxvYWRcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MTkuY3JlYXRlRWxlbWVudChMYXp5SW1hZ2VGdWxsLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgIHNyY1xuICAgIH0sIHJlc3QpLCB7XG4gICAgICBleHBlcmltZW50YWxEZWNvZGU6IHRydWVcbiAgICB9KSwgKHsgaW1hZ2VTdGF0ZSwgcmVmIH0pID0+IHtcbiAgICAgIGNvbnN0IGlzTG9hZGVkID0gaW1hZ2VTdGF0ZSA9PT0gSW1hZ2VTdGF0ZS5Mb2FkU3VjY2VzcztcbiAgICAgIGNvbnN0IHdyYXBwZXJTdHlsZSA9IHtcbiAgICAgICAgd2lkdGg6IFwiMTAwJVwiXG4gICAgICB9O1xuICAgICAgY29uc3QgaW1nU3R5bGUgPSB7fTtcbiAgICAgIGlmIChoZWlnaHQpIHtcbiAgICAgICAgd3JhcHBlclN0eWxlLmhlaWdodCA9IGhlaWdodDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGltZ1N0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICB3cmFwcGVyU3R5bGUucGFkZGluZ0JvdHRvbSA9IGAke2FzcGVjdFJhdGlvICogMTAwfSVgO1xuICAgICAgfVxuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDE5LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IGNzKFwibGF6eS1pbWFnZS13cmFwcGVyXCIsIGlzTG9hZGVkICYmIFwibGF6eS1pbWFnZS1sb2FkZWRcIiwgY2xhc3NOYW1lKSxcbiAgICAgICAgc3R5bGU6IHdyYXBwZXJTdHlsZVxuICAgICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MTkuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYXp5LWltYWdlLXByZXZpZXdcIixcbiAgICAgICAgc3JjOiBwcmV2aWV3SW1hZ2UuZGF0YVVSSUJhc2U2NCxcbiAgICAgICAgYWx0LFxuICAgICAgICByZWYsXG4gICAgICAgIHN0eWxlLFxuICAgICAgICBkZWNvZGluZzogXCJhc3luY1wiXG4gICAgICB9KSwgLyogQF9fUFVSRV9fICovIFJlYWN0MTkuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsYXp5LWltYWdlLXJlYWxcIixcbiAgICAgICAgc3JjLFxuICAgICAgICBhbHQsXG4gICAgICAgIHJlZjogYXR0YWNoWm9vbVJlZixcbiAgICAgICAgc3R5bGU6IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBzdHlsZSksIGltZ1N0eWxlKSxcbiAgICAgICAgd2lkdGg6IHByZXZpZXdJbWFnZS5vcmlnaW5hbFdpZHRoLFxuICAgICAgICBoZWlnaHQ6IHByZXZpZXdJbWFnZS5vcmlnaW5hbEhlaWdodCxcbiAgICAgICAgZGVjb2Rpbmc6IFwiYXN5bmNcIixcbiAgICAgICAgbG9hZGluZzogXCJsYXp5XCJcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoY29tcG9uZW50cy5JbWFnZSAmJiBmb3JjZUN1c3RvbUltYWdlcykge1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDE5LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cy5JbWFnZSwge1xuICAgICAgICBzcmMsXG4gICAgICAgIGFsdCxcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICBzdHlsZSxcbiAgICAgICAgd2lkdGg6IG51bGwsXG4gICAgICAgIGhlaWdodDogaGVpZ2h0IHx8IG51bGwsXG4gICAgICAgIHByaW9yaXR5LFxuICAgICAgICBvbkxvYWRcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MTkuY3JlYXRlRWxlbWVudChcImltZ1wiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBzdHlsZSxcbiAgICAgIHNyYyxcbiAgICAgIGFsdCxcbiAgICAgIHJlZjogYXR0YWNoWm9vbVJlZixcbiAgICAgIGxvYWRpbmc6IFwibGF6eVwiLFxuICAgICAgZGVjb2Rpbmc6IFwiYXN5bmNcIlxuICAgIH0sIHJlc3QpKTtcbiAgfVxufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvbGl0ZS15b3V0dWJlLWVtYmVkLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QyMCBmcm9tIFwicmVhY3RcIjtcbnZhciBxcyA9IChwYXJhbXMpID0+IHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHBhcmFtcykubWFwKChrZXkpID0+IGAke2VuY29kZVVSSUNvbXBvbmVudChrZXkpfT0ke2VuY29kZVVSSUNvbXBvbmVudChwYXJhbXNba2V5XSl9YCkuam9pbihcIiZcIik7XG59O1xudmFyIExpdGVZb3VUdWJlRW1iZWQgPSAoe1xuICBpZCxcbiAgZGVmYXVsdFBsYXkgPSBmYWxzZSxcbiAgbXV0ZSA9IGZhbHNlLFxuICBsYXp5SW1hZ2UgPSBmYWxzZSxcbiAgaWZyYW1lVGl0bGUgPSBcIllvdVR1YmUgdmlkZW9cIixcbiAgYWx0ID0gXCJWaWRlbyBwcmV2aWV3XCIsXG4gIHBhcmFtcyA9IHt9LFxuICBhZExpbmtzUHJlY29ubmVjdCA9IHRydWUsXG4gIHN0eWxlLFxuICBjbGFzc05hbWVcbn0pID0+IHtcbiAgY29uc3QgbXV0ZVBhcmFtID0gbXV0ZSB8fCBkZWZhdWx0UGxheSA/IFwiMVwiIDogXCIwXCI7XG4gIGNvbnN0IHF1ZXJ5U3RyaW5nID0gUmVhY3QyMC51c2VNZW1vKCgpID0+IHFzKF9fc3ByZWFkVmFsdWVzKHsgYXV0b3BsYXk6IFwiMVwiLCBtdXRlOiBtdXRlUGFyYW0gfSwgcGFyYW1zKSksIFttdXRlUGFyYW0sIHBhcmFtc10pO1xuICBjb25zdCByZXNvbHV0aW9uID0gXCJocWRlZmF1bHRcIjtcbiAgY29uc3QgcG9zdGVyVXJsID0gYGh0dHBzOi8vaS55dGltZy5jb20vdmkvJHtpZH0vJHtyZXNvbHV0aW9ufS5qcGdgO1xuICBjb25zdCB5dFVybCA9IFwiaHR0cHM6Ly93d3cueW91dHViZS1ub2Nvb2tpZS5jb21cIjtcbiAgY29uc3QgaWZyYW1lU3JjID0gYCR7eXRVcmx9L2VtYmVkLyR7aWR9PyR7cXVlcnlTdHJpbmd9YDtcbiAgY29uc3QgW2lzUHJlY29ubmVjdGVkLCBzZXRJc1ByZWNvbm5lY3RlZF0gPSBSZWFjdDIwLnVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lmcmFtZUluaXRpYWxpemVkLCBzZXRJZnJhbWVJbml0aWFsaXplZF0gPSBSZWFjdDIwLnVzZVN0YXRlKGRlZmF1bHRQbGF5KTtcbiAgY29uc3QgW2lzSWZyYW1lTG9hZGVkLCBzZXRJc0lmcmFtZUxvYWRlZF0gPSBSZWFjdDIwLnVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3Qgd2FybUNvbm5lY3Rpb25zID0gUmVhY3QyMC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGlzUHJlY29ubmVjdGVkKVxuICAgICAgcmV0dXJuO1xuICAgIHNldElzUHJlY29ubmVjdGVkKHRydWUpO1xuICB9LCBbaXNQcmVjb25uZWN0ZWRdKTtcbiAgY29uc3Qgb25Mb2FkSWZyYW1lID0gUmVhY3QyMC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGlmcmFtZUluaXRpYWxpemVkKVxuICAgICAgcmV0dXJuO1xuICAgIHNldElmcmFtZUluaXRpYWxpemVkKHRydWUpO1xuICB9LCBbaWZyYW1lSW5pdGlhbGl6ZWRdKTtcbiAgY29uc3Qgb25JZnJhbWVMb2FkZWQgPSBSZWFjdDIwLnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXRJc0lmcmFtZUxvYWRlZCh0cnVlKTtcbiAgfSwgW10pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjAuY3JlYXRlRWxlbWVudChSZWFjdDIwLkZyYWdtZW50LCBudWxsLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyMC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XG4gICAgcmVsOiBcInByZWxvYWRcIixcbiAgICBocmVmOiBwb3N0ZXJVcmwsXG4gICAgYXM6IFwiaW1hZ2VcIlxuICB9KSwgaXNQcmVjb25uZWN0ZWQgJiYgLyogQF9fUFVSRV9fICovIFJlYWN0MjAuY3JlYXRlRWxlbWVudChSZWFjdDIwLkZyYWdtZW50LCBudWxsLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyMC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XG4gICAgcmVsOiBcInByZWNvbm5lY3RcIixcbiAgICBocmVmOiB5dFVybFxuICB9KSwgLyogQF9fUFVSRV9fICovIFJlYWN0MjAuY3JlYXRlRWxlbWVudChcImxpbmtcIiwge1xuICAgIHJlbDogXCJwcmVjb25uZWN0XCIsXG4gICAgaHJlZjogXCJodHRwczovL3d3dy5nb29nbGUuY29tXCJcbiAgfSkpLCBpc1ByZWNvbm5lY3RlZCAmJiBhZExpbmtzUHJlY29ubmVjdCAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3QyMC5jcmVhdGVFbGVtZW50KFJlYWN0MjAuRnJhZ21lbnQsIG51bGwsIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIwLmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHtcbiAgICByZWw6IFwicHJlY29ubmVjdFwiLFxuICAgIGhyZWY6IFwiaHR0cHM6Ly9zdGF0aWMuZG91YmxlY2xpY2submV0XCJcbiAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIwLmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHtcbiAgICByZWw6IFwicHJlY29ubmVjdFwiLFxuICAgIGhyZWY6IFwiaHR0cHM6Ly9nb29nbGVhZHMuZy5kb3VibGVjbGljay5uZXRcIlxuICB9KSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIwLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIG9uQ2xpY2s6IG9uTG9hZElmcmFtZSxcbiAgICBvblBvaW50ZXJPdmVyOiB3YXJtQ29ubmVjdGlvbnMsXG4gICAgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi15dC1saXRlXCIsIGlzSWZyYW1lTG9hZGVkICYmIFwibm90aW9uLXl0LWxvYWRlZFwiLCBpZnJhbWVJbml0aWFsaXplZCAmJiBcIm5vdGlvbi15dC1pbml0aWFsaXplZFwiLCBjbGFzc05hbWUpLFxuICAgIHN0eWxlXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIwLmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwge1xuICAgIHNyYzogcG9zdGVyVXJsLFxuICAgIGNsYXNzTmFtZTogXCJub3Rpb24teXQtdGh1bWJuYWlsXCIsXG4gICAgbG9hZGluZzogbGF6eUltYWdlID8gXCJsYXp5XCIgOiB2b2lkIDAsXG4gICAgYWx0XG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyMC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLXl0LXBsYXlidG5cIlxuICB9KSwgaWZyYW1lSW5pdGlhbGl6ZWQgJiYgLyogQF9fUFVSRV9fICovIFJlYWN0MjAuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiLCB7XG4gICAgd2lkdGg6IFwiNTYwXCIsXG4gICAgaGVpZ2h0OiBcIjMxNVwiLFxuICAgIGZyYW1lQm9yZGVyOiBcIjBcIixcbiAgICBhbGxvdzogXCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZVwiLFxuICAgIGFsbG93RnVsbFNjcmVlbjogdHJ1ZSxcbiAgICB0aXRsZTogaWZyYW1lVGl0bGUsXG4gICAgc3JjOiBpZnJhbWVTcmMsXG4gICAgb25Mb2FkOiBvbklmcmFtZUxvYWRlZFxuICB9KSkpO1xufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvYXNzZXQudHN4XG52YXIgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiO1xudmFyIHN1cHBvcnRlZEFzc2V0VHlwZXMgPSBbXG4gIFwidmlkZW9cIixcbiAgXCJpbWFnZVwiLFxuICBcImVtYmVkXCIsXG4gIFwiZmlnbWFcIixcbiAgXCJ0eXBlZm9ybVwiLFxuICBcImV4Y2FsaWRyYXdcIixcbiAgXCJtYXBzXCIsXG4gIFwidHdlZXRcIixcbiAgXCJwZGZcIixcbiAgXCJnaXN0XCIsXG4gIFwiY29kZXBlblwiLFxuICBcImRyaXZlXCJcbl07XG52YXIgQXNzZXQgPSAoeyBibG9jaywgem9vbWFibGUgPSB0cnVlLCBjaGlsZHJlbiB9KSA9PiB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZztcbiAgY29uc3QgeyByZWNvcmRNYXAsIG1hcEltYWdlVXJsLCBjb21wb25lbnRzIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGlmICghYmxvY2sgfHwgIXN1cHBvcnRlZEFzc2V0VHlwZXMuaW5jbHVkZXMoYmxvY2sudHlwZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBzdHlsZSA9IHtcbiAgICBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgIGFsaWduU2VsZjogXCJjZW50ZXJcIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgbWF4V2lkdGg6IFwiMTAwJVwiLFxuICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCJcbiAgfTtcbiAgY29uc3QgYXNzZXRTdHlsZSA9IHt9O1xuICBpZiAoYmxvY2suZm9ybWF0KSB7XG4gICAgY29uc3Qge1xuICAgICAgYmxvY2tfYXNwZWN0X3JhdGlvLFxuICAgICAgYmxvY2tfaGVpZ2h0LFxuICAgICAgYmxvY2tfd2lkdGgsXG4gICAgICBibG9ja19mdWxsX3dpZHRoLFxuICAgICAgYmxvY2tfcGFnZV93aWR0aCxcbiAgICAgIGJsb2NrX3ByZXNlcnZlX3NjYWxlXG4gICAgfSA9IGJsb2NrLmZvcm1hdDtcbiAgICBpZiAoYmxvY2tfZnVsbF93aWR0aCB8fCBibG9ja19wYWdlX3dpZHRoKSB7XG4gICAgICBpZiAoYmxvY2tfZnVsbF93aWR0aCkge1xuICAgICAgICBzdHlsZS53aWR0aCA9IFwiMTAwdndcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0eWxlLndpZHRoID0gXCIxMDAlXCI7XG4gICAgICB9XG4gICAgICBpZiAoYmxvY2sudHlwZSA9PT0gXCJ2aWRlb1wiKSB7XG4gICAgICAgIGlmIChibG9ja19oZWlnaHQpIHtcbiAgICAgICAgICBzdHlsZS5oZWlnaHQgPSBibG9ja19oZWlnaHQ7XG4gICAgICAgIH0gZWxzZSBpZiAoYmxvY2tfYXNwZWN0X3JhdGlvKSB7XG4gICAgICAgICAgc3R5bGUucGFkZGluZ0JvdHRvbSA9IGAke2Jsb2NrX2FzcGVjdF9yYXRpbyAqIDEwMH0lYDtcbiAgICAgICAgfSBlbHNlIGlmIChibG9ja19wcmVzZXJ2ZV9zY2FsZSkge1xuICAgICAgICAgIHN0eWxlLm9iamVjdEZpdCA9IFwiY29udGFpblwiO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGJsb2NrX2FzcGVjdF9yYXRpbyAmJiBibG9jay50eXBlICE9PSBcImltYWdlXCIpIHtcbiAgICAgICAgc3R5bGUucGFkZGluZ0JvdHRvbSA9IGAke2Jsb2NrX2FzcGVjdF9yYXRpbyAqIDEwMH0lYDtcbiAgICAgIH0gZWxzZSBpZiAoYmxvY2tfaGVpZ2h0KSB7XG4gICAgICAgIHN0eWxlLmhlaWdodCA9IGJsb2NrX2hlaWdodDtcbiAgICAgIH0gZWxzZSBpZiAoYmxvY2tfcHJlc2VydmVfc2NhbGUpIHtcbiAgICAgICAgaWYgKGJsb2NrLnR5cGUgPT09IFwiaW1hZ2VcIikge1xuICAgICAgICAgIHN0eWxlLmhlaWdodCA9IFwiMTAwJVwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0eWxlLnBhZGRpbmdCb3R0b20gPSBcIjc1JVwiO1xuICAgICAgICAgIHN0eWxlLm1pbkhlaWdodCA9IDEwMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzd2l0Y2ggKChfYSA9IGJsb2NrLmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmJsb2NrX2FsaWdubWVudCkge1xuICAgICAgICBjYXNlIFwiY2VudGVyXCI6IHtcbiAgICAgICAgICBzdHlsZS5hbGlnblNlbGYgPSBcImNlbnRlclwiO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJsZWZ0XCI6IHtcbiAgICAgICAgICBzdHlsZS5hbGlnblNlbGYgPSBcInN0YXJ0XCI7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcInJpZ2h0XCI6IHtcbiAgICAgICAgICBzdHlsZS5hbGlnblNlbGYgPSBcImVuZFwiO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoYmxvY2tfd2lkdGgpIHtcbiAgICAgICAgc3R5bGUud2lkdGggPSBibG9ja193aWR0aDtcbiAgICAgIH1cbiAgICAgIGlmIChibG9ja19wcmVzZXJ2ZV9zY2FsZSAmJiBibG9jay50eXBlICE9PSBcImltYWdlXCIpIHtcbiAgICAgICAgc3R5bGUucGFkZGluZ0JvdHRvbSA9IFwiNTAlXCI7XG4gICAgICAgIHN0eWxlLm1pbkhlaWdodCA9IDEwMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChibG9ja19oZWlnaHQgJiYgYmxvY2sudHlwZSAhPT0gXCJpbWFnZVwiKSB7XG4gICAgICAgICAgc3R5bGUuaGVpZ2h0ID0gYmxvY2tfaGVpZ2h0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChibG9jay50eXBlID09PSBcImltYWdlXCIpIHtcbiAgICAgIGFzc2V0U3R5bGUub2JqZWN0Rml0ID0gXCJjb3ZlclwiO1xuICAgIH0gZWxzZSBpZiAoYmxvY2tfcHJlc2VydmVfc2NhbGUpIHtcbiAgICAgIGFzc2V0U3R5bGUub2JqZWN0Rml0ID0gXCJjb250YWluXCI7XG4gICAgfVxuICB9XG4gIGNvbnN0IHNvdXJjZSA9ICgoX2IgPSByZWNvcmRNYXAuc2lnbmVkX3VybHMpID09IG51bGwgPyB2b2lkIDAgOiBfYltibG9jay5pZF0pIHx8ICgoX2UgPSAoX2QgPSAoX2MgPSBibG9jay5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2Muc291cmNlKSA9PSBudWxsID8gdm9pZCAwIDogX2RbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfZVswXSk7XG4gIGxldCBjb250ZW50ID0gbnVsbDtcbiAgaWYgKCFzb3VyY2UpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBpZiAoYmxvY2sudHlwZSA9PT0gXCJ0d2VldFwiKSB7XG4gICAgY29uc3Qgc3JjID0gc291cmNlO1xuICAgIGlmICghc3JjKVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgY29uc3QgaWQgPSBzcmMuc3BsaXQoXCI/XCIpWzBdLnNwbGl0KFwiL1wiKS5wb3AoKTtcbiAgICBpZiAoIWlkKVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIxLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgc3R5bGU6IF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIGFzc2V0U3R5bGUpLCB7XG4gICAgICAgIG1heFdpZHRoOiA0MjAsXG4gICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgbWFyZ2luTGVmdDogXCJhdXRvXCIsXG4gICAgICAgIG1hcmdpblJpZ2h0OiBcImF1dG9cIlxuICAgICAgfSlcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QyMS5jcmVhdGVFbGVtZW50KGNvbXBvbmVudHMuVHdlZXQsIHtcbiAgICAgIGlkXG4gICAgfSkpO1xuICB9IGVsc2UgaWYgKGJsb2NrLnR5cGUgPT09IFwicGRmXCIpIHtcbiAgICBzdHlsZS5vdmVyZmxvdyA9IFwiYXV0b1wiO1xuICAgIHN0eWxlLmJhY2tncm91bmQgPSBcInJnYigyMjYsIDIyNiwgMjI2KVwiO1xuICAgIGlmICghc3R5bGUucGFkZGluZykge1xuICAgICAgc3R5bGUucGFkZGluZyA9IFwiOHB4IDE2cHhcIjtcbiAgICB9XG4gICAgaWYgKCFpc1NlcnZlcikge1xuICAgICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIxLmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cy5QZGYsIHtcbiAgICAgICAgZmlsZTogc291cmNlXG4gICAgICB9KTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoYmxvY2sudHlwZSA9PT0gXCJlbWJlZFwiIHx8IGJsb2NrLnR5cGUgPT09IFwidmlkZW9cIiB8fCBibG9jay50eXBlID09PSBcImZpZ21hXCIgfHwgYmxvY2sudHlwZSA9PT0gXCJ0eXBlZm9ybVwiIHx8IGJsb2NrLnR5cGUgPT09IFwiZ2lzdFwiIHx8IGJsb2NrLnR5cGUgPT09IFwibWFwc1wiIHx8IGJsb2NrLnR5cGUgPT09IFwiZXhjYWxpZHJhd1wiIHx8IGJsb2NrLnR5cGUgPT09IFwiY29kZXBlblwiIHx8IGJsb2NrLnR5cGUgPT09IFwiZHJpdmVcIikge1xuICAgIGlmIChibG9jay50eXBlID09PSBcInZpZGVvXCIgJiYgc291cmNlICYmIHNvdXJjZS5pbmRleE9mKFwieW91dHViZVwiKSA8IDAgJiYgc291cmNlLmluZGV4T2YoXCJ5b3V0dS5iZVwiKSA8IDAgJiYgc291cmNlLmluZGV4T2YoXCJ2aW1lb1wiKSA8IDAgJiYgc291cmNlLmluZGV4T2YoXCJ3aXN0aWFcIikgPCAwICYmIHNvdXJjZS5pbmRleE9mKFwibG9vbVwiKSA8IDAgJiYgc291cmNlLmluZGV4T2YoXCJ2aWRlb2Fza1wiKSA8IDAgJiYgc291cmNlLmluZGV4T2YoXCJnZXRjbG91ZGFwcFwiKSA8IDApIHtcbiAgICAgIHN0eWxlLnBhZGRpbmdCb3R0b20gPSB2b2lkIDA7XG4gICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0MjEuY3JlYXRlRWxlbWVudChcInZpZGVvXCIsIHtcbiAgICAgICAgcGxheXNJbmxpbmU6IHRydWUsXG4gICAgICAgIGNvbnRyb2xzOiB0cnVlLFxuICAgICAgICBwcmVsb2FkOiBcIm1ldGFkYXRhXCIsXG4gICAgICAgIHN0eWxlOiBhc3NldFN0eWxlLFxuICAgICAgICBzcmM6IHNvdXJjZSxcbiAgICAgICAgdGl0bGU6IGJsb2NrLnR5cGVcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgc3JjID0gKChfZiA9IGJsb2NrLmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9mLmRpc3BsYXlfc291cmNlKSB8fCBzb3VyY2U7XG4gICAgICBpZiAoc3JjKSB7XG4gICAgICAgIGNvbnN0IHlvdXR1YmVWaWRlb0lkID0gYmxvY2sudHlwZSA9PT0gXCJ2aWRlb1wiID8gZ2V0WW91dHViZUlkKHNyYykgOiBudWxsO1xuICAgICAgICBpZiAoeW91dHViZVZpZGVvSWQpIHtcbiAgICAgICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0MjEuY3JlYXRlRWxlbWVudChMaXRlWW91VHViZUVtYmVkLCB7XG4gICAgICAgICAgICBpZDogeW91dHViZVZpZGVvSWQsXG4gICAgICAgICAgICBzdHlsZTogYXNzZXRTdHlsZSxcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYXNzZXQtb2JqZWN0LWZpdFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoYmxvY2sudHlwZSA9PT0gXCJnaXN0XCIpIHtcbiAgICAgICAgICBpZiAoIXNyYy5lbmRzV2l0aChcIi5waWJiXCIpKSB7XG4gICAgICAgICAgICBzcmMgPSBgJHtzcmN9LnBpYmJgO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhc3NldFN0eWxlLndpZHRoID0gXCIxMDAlXCI7XG4gICAgICAgICAgc3R5bGUucGFkZGluZ0JvdHRvbSA9IFwiNTAlXCI7XG4gICAgICAgICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIxLmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIiwge1xuICAgICAgICAgICAgc3R5bGU6IGFzc2V0U3R5bGUsXG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLWFzc2V0LW9iamVjdC1maXRcIixcbiAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgIHRpdGxlOiBcIkdpdEh1YiBHaXN0XCIsXG4gICAgICAgICAgICBmcmFtZUJvcmRlcjogXCIwXCIsXG4gICAgICAgICAgICBsb2FkaW5nOiBcImxhenlcIixcbiAgICAgICAgICAgIHNjcm9sbGluZzogXCJhdXRvXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0MjEuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLWFzc2V0LW9iamVjdC1maXRcIixcbiAgICAgICAgICAgIHN0eWxlOiBhc3NldFN0eWxlLFxuICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgdGl0bGU6IGBpZnJhbWUgJHtibG9jay50eXBlfWAsXG4gICAgICAgICAgICBmcmFtZUJvcmRlcjogXCIwXCIsXG4gICAgICAgICAgICBhbGxvd0Z1bGxTY3JlZW46IHRydWUsXG4gICAgICAgICAgICBsb2FkaW5nOiBcImxhenlcIixcbiAgICAgICAgICAgIHNjcm9sbGluZzogXCJhdXRvXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmIChibG9jay50eXBlID09PSBcImltYWdlXCIpIHtcbiAgICBjb25zdCBzcmMgPSBtYXBJbWFnZVVybChzb3VyY2UsIGJsb2NrKTtcbiAgICBjb25zdCBjYXB0aW9uID0gZ2V0VGV4dENvbnRlbnQoKF9nID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nLmNhcHRpb24pO1xuICAgIGNvbnN0IGFsdCA9IGNhcHRpb24gfHwgXCJub3Rpb24gaW1hZ2VcIjtcbiAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0MjEuY3JlYXRlRWxlbWVudChMYXp5SW1hZ2UsIHtcbiAgICAgIHNyYyxcbiAgICAgIGFsdCxcbiAgICAgIHpvb21hYmxlLFxuICAgICAgaGVpZ2h0OiBzdHlsZS5oZWlnaHQsXG4gICAgICBzdHlsZTogYXNzZXRTdHlsZVxuICAgIH0pO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyMS5jcmVhdGVFbGVtZW50KFJlYWN0MjEuRnJhZ21lbnQsIG51bGwsIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIxLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIHN0eWxlXG4gIH0sIGNvbnRlbnQsIGJsb2NrLnR5cGUgPT09IFwiaW1hZ2VcIiAmJiBjaGlsZHJlbiksIGJsb2NrLnR5cGUgIT09IFwiaW1hZ2VcIiAmJiBjaGlsZHJlbik7XG59O1xuXG4vLyBzcmMvY29tcG9uZW50cy90ZXh0LnRzeFxuaW1wb3J0ICogYXMgUmVhY3QyOCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHBhcnNlUGFnZUlkIH0gZnJvbSBcIm5vdGlvbi11dGlsc1wiO1xuXG4vLyBzcmMvY29tcG9uZW50cy9wYWdlLXRpdGxlLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QyNCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdldEJsb2NrVGl0bGUgYXMgZ2V0QmxvY2tUaXRsZTIgfSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5cbi8vIHNyYy9jb21wb25lbnRzL3BhZ2UtaWNvbi50c3hcbmltcG9ydCAqIGFzIFJlYWN0MjMgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBnZXRCbG9ja0ljb24sIGdldEJsb2NrVGl0bGUgfSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5cbi8vIHNyYy9pY29ucy9kZWZhdWx0LXBhZ2UtaWNvbi50c3hcbmltcG9ydCAqIGFzIFJlYWN0MjIgZnJvbSBcInJlYWN0XCI7XG52YXIgRGVmYXVsdFBhZ2VJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IF9hID0gcHJvcHMsIHsgY2xhc3NOYW1lIH0gPSBfYSwgcmVzdCA9IF9fb2JqUmVzdChfYSwgW1wiY2xhc3NOYW1lXCJdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIyLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7XG4gICAgY2xhc3NOYW1lXG4gIH0sIHJlc3QpLCB7XG4gICAgdmlld0JveDogXCIwIDAgMzAgMzBcIixcbiAgICB3aWR0aDogXCIxNlwiXG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyMi5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTYsMUg0djI4aDIyVjExTDE2LDF6IE0xNiwzLjgyOEwyMy4xNzIsMTFIMTZWMy44Mjh6IE0yNCwyN0g2VjNoOHYxMGgxMFYyN3ogTTgsMTdoMTR2LTJIOFYxN3ogTTgsMjFoMTR2LTJIOFYyMXogTTgsMjVoMTR2LTJIOFYyNXpcIlxuICB9KSk7XG59O1xuXG4vLyBzcmMvY29tcG9uZW50cy9wYWdlLWljb24udHN4XG52YXIgaXNJY29uQmxvY2sgPSAodmFsdWUpID0+IHtcbiAgcmV0dXJuIHZhbHVlLnR5cGUgPT09IFwicGFnZVwiIHx8IHZhbHVlLnR5cGUgPT09IFwiY2FsbG91dFwiIHx8IHZhbHVlLnR5cGUgPT09IFwiY29sbGVjdGlvbl92aWV3XCIgfHwgdmFsdWUudHlwZSA9PT0gXCJjb2xsZWN0aW9uX3ZpZXdfcGFnZVwiO1xufTtcbnZhciBQYWdlSWNvbkltcGwgPSAoe1xuICBibG9jayxcbiAgY2xhc3NOYW1lLFxuICBpbmxpbmUgPSB0cnVlLFxuICBoaWRlRGVmYXVsdEljb24gPSBmYWxzZSxcbiAgZGVmYXVsdEljb25cbn0pID0+IHtcbiAgdmFyIF9hO1xuICBjb25zdCB7IG1hcEltYWdlVXJsLCByZWNvcmRNYXAgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgbGV0IGlzSW1hZ2UgPSBmYWxzZTtcbiAgbGV0IGNvbnRlbnQgPSBudWxsO1xuICBpZiAoaXNJY29uQmxvY2soYmxvY2spKSB7XG4gICAgY29uc3QgaWNvbiA9ICgoX2EgPSBnZXRCbG9ja0ljb24oYmxvY2ssIHJlY29yZE1hcCkpID09IG51bGwgPyB2b2lkIDAgOiBfYS50cmltKCkpIHx8IGRlZmF1bHRJY29uO1xuICAgIGNvbnN0IHRpdGxlID0gZ2V0QmxvY2tUaXRsZShibG9jaywgcmVjb3JkTWFwKTtcbiAgICBpZiAoaWNvbiAmJiBpc1VybChpY29uKSkge1xuICAgICAgY29uc3QgdXJsID0gbWFwSW1hZ2VVcmwoaWNvbiwgYmxvY2spO1xuICAgICAgaXNJbWFnZSA9IHRydWU7XG4gICAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0MjMuY3JlYXRlRWxlbWVudChMYXp5SW1hZ2UsIHtcbiAgICAgICAgc3JjOiB1cmwsXG4gICAgICAgIGFsdDogdGl0bGUgfHwgXCJwYWdlIGljb25cIixcbiAgICAgICAgY2xhc3NOYW1lOiBjcyhjbGFzc05hbWUsIFwibm90aW9uLXBhZ2UtaWNvblwiKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICghaWNvbikge1xuICAgICAgaWYgKCFoaWRlRGVmYXVsdEljb24pIHtcbiAgICAgICAgaXNJbWFnZSA9IHRydWU7XG4gICAgICAgIGNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8gUmVhY3QyMy5jcmVhdGVFbGVtZW50KERlZmF1bHRQYWdlSWNvbiwge1xuICAgICAgICAgIGNsYXNzTmFtZTogY3MoY2xhc3NOYW1lLCBcIm5vdGlvbi1wYWdlLWljb25cIiksXG4gICAgICAgICAgYWx0OiB0aXRsZSA/IHRpdGxlIDogXCJwYWdlIGljb25cIlxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaXNJbWFnZSA9IGZhbHNlO1xuICAgICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDIzLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjcyhjbGFzc05hbWUsIFwibm90aW9uLXBhZ2UtaWNvblwiKSxcbiAgICAgICAgcm9sZTogXCJpbWdcIixcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IGljb25cbiAgICAgIH0sIGljb24pO1xuICAgIH1cbiAgfVxuICBpZiAoIWNvbnRlbnQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjMuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBjcyhpbmxpbmUgPyBcIm5vdGlvbi1wYWdlLWljb24taW5saW5lXCIgOiBcIm5vdGlvbi1wYWdlLWljb24taGVyb1wiLCBpc0ltYWdlID8gXCJub3Rpb24tcGFnZS1pY29uLWltYWdlXCIgOiBcIm5vdGlvbi1wYWdlLWljb24tc3BhblwiKVxuICB9LCBjb250ZW50KTtcbn07XG52YXIgUGFnZUljb24gPSBSZWFjdDIzLm1lbW8oUGFnZUljb25JbXBsKTtcblxuLy8gc3JjL2NvbXBvbmVudHMvcGFnZS10aXRsZS50c3hcbnZhciBQYWdlVGl0bGVJbXBsID0gKF9hKSA9PiB7XG4gIHZhciBfYiA9IF9hLCB7IGJsb2NrLCBjbGFzc05hbWUsIGRlZmF1bHRJY29uIH0gPSBfYiwgcmVzdCA9IF9fb2JqUmVzdChfYiwgW1wiYmxvY2tcIiwgXCJjbGFzc05hbWVcIiwgXCJkZWZhdWx0SWNvblwiXSk7XG4gIHZhciBfYTIsIF9iMjtcbiAgY29uc3QgeyByZWNvcmRNYXAgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgaWYgKCFibG9jaylcbiAgICByZXR1cm4gbnVsbDtcbiAgaWYgKGJsb2NrLnR5cGUgPT09IFwiY29sbGVjdGlvbl92aWV3X3BhZ2VcIiB8fCBibG9jay50eXBlID09PSBcImNvbGxlY3Rpb25fdmlld1wiKSB7XG4gICAgY29uc3QgdGl0bGUgPSBnZXRCbG9ja1RpdGxlMihibG9jaywgcmVjb3JkTWFwKTtcbiAgICBpZiAoIXRpdGxlKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgdGl0bGVEZWNvcmF0aW9uID0gW1t0aXRsZV1dO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyNC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLXBhZ2UtdGl0bGVcIiwgY2xhc3NOYW1lKVxuICAgIH0sIHJlc3QpLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyNC5jcmVhdGVFbGVtZW50KFBhZ2VJY29uLCB7XG4gICAgICBibG9jayxcbiAgICAgIGRlZmF1bHRJY29uLFxuICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1wYWdlLXRpdGxlLWljb25cIlxuICAgIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyNC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLXBhZ2UtdGl0bGUtdGV4dFwiXG4gICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MjQuY3JlYXRlRWxlbWVudChUZXh0LCB7XG4gICAgICB2YWx1ZTogdGl0bGVEZWNvcmF0aW9uLFxuICAgICAgYmxvY2tcbiAgICB9KSkpO1xuICB9XG4gIGlmICghKChfYTIgPSBibG9jay5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRpdGxlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyNC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi1wYWdlLXRpdGxlXCIsIGNsYXNzTmFtZSlcbiAgfSwgcmVzdCksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI0LmNyZWF0ZUVsZW1lbnQoUGFnZUljb24sIHtcbiAgICBibG9jayxcbiAgICBkZWZhdWx0SWNvbixcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLXBhZ2UtdGl0bGUtaWNvblwiXG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyNC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1wYWdlLXRpdGxlLXRleHRcIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QyNC5jcmVhdGVFbGVtZW50KFRleHQsIHtcbiAgICB2YWx1ZTogKF9iMiA9IGJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYjIudGl0bGUsXG4gICAgYmxvY2tcbiAgfSkpKTtcbn07XG52YXIgUGFnZVRpdGxlID0gUmVhY3QyNC5tZW1vKFBhZ2VUaXRsZUltcGwpO1xuXG4vLyBzcmMvY29tcG9uZW50cy9ncmFjZWZ1bC1pbWFnZS50c3hcbmltcG9ydCAqIGFzIFJlYWN0MjUgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBJbWcgfSBmcm9tIFwicmVhY3QtaW1hZ2VcIjtcbnZhciBHcmFjZWZ1bEltYWdlID0gKHByb3BzKSA9PiB7XG4gIGlmIChpc0Jyb3dzZXIpIHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjUuY3JlYXRlRWxlbWVudChJbWcsIF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcykpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyNS5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcykpO1xuICB9XG59O1xuXG4vLyBzcmMvY29tcG9uZW50cy9lb2kudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDI3IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvaWNvbnMvdHlwZS1naXRodWIudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDI2IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnVHlwZUdpdEh1Yihwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjYuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgdmlld0JveDogXCIwIDAgMjYwIDI2MFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0MjYuY3JlYXRlRWxlbWVudChcImdcIiwgbnVsbCwgLyogQF9fUFVSRV9fICovIFJlYWN0MjYuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTEyOC4wMDEwNiwwIEM1Ny4zMTcyOTI2LDAgMCw1Ny4zMDY2OTQyIDAsMTI4LjAwMTA2IEMwLDE4NC41NTUyODEgMzYuNjc2MTk5NywyMzIuNTM1NTQyIDg3LjUzNDkzNywyNDkuNDYwODk5IEM5My45MzIwMjIzLDI1MC42NDU3NzkgOTYuMjgwNTg4LDI0Ni42ODQxNjUgOTYuMjgwNTg4LDI0My4zMDMzMzMgQzk2LjI4MDU4OCwyNDAuMjUxMDQ1IDk2LjE2MTg4NzgsMjMwLjE2Nzg5OSA5Ni4xMDY3NzcsMjE5LjQ3MjE3NiBDNjAuNDk2NzU4NSwyMjcuMjE1MjM1IDUyLjk4MjYyMDcsMjA0LjM2OTcxMiA1Mi45ODI2MjA3LDIwNC4zNjk3MTIgQzQ3LjE1OTk1ODQsMTg5LjU3NDU5OCAzOC43NzA0MDgsMTg1LjY0MDUzOCAzOC43NzA0MDgsMTg1LjY0MDUzOCBDMjcuMTU2ODc4NSwxNzcuNjk2MTEzIDM5LjY0NTgyMDYsMTc3Ljg1OTMyNSAzOS42NDU4MjA2LDE3Ny44NTkzMjUgQzUyLjQ5OTM0MTksMTc4Ljc2MjI5MyA1OS4yNjczNjUsMTkxLjA0OTg3IDU5LjI2NzM2NSwxOTEuMDQ5ODcgQzcwLjY4Mzc2NzUsMjEwLjYxODQyMyA4OS4yMTE1NzUzLDIwNC45NjEwOTMgOTYuNTE1ODY4NSwyMDEuNjkwNDgyIEM5Ny42NjQ3MTU1LDE5My40MTc1MTIgMTAwLjk4MTk1OSwxODcuNzcwNzggMTA0LjY0MjU4MywxODQuNTc0MzU3IEM3Ni4yMTE3OTksMTgxLjMzNzY2IDQ2LjMyNDgxOSwxNzAuMzYyMTQ0IDQ2LjMyNDgxOSwxMjEuMzE1NzAyIEM0Ni4zMjQ4MTksMTA3LjM0MDg4OSA1MS4zMjUwNTg4LDk1LjkyMjM2ODIgNTkuNTEzMjQzNyw4Ni45NTgzOTM3IEM1OC4xODQyMjY4LDgzLjczNDQxNTIgNTMuODAyOTIyOSw3MC43MTU1NjIgNjAuNzUzMjM1NCw1My4wODQzNjM2IEM2MC43NTMyMzU0LDUzLjA4NDM2MzYgNzEuNTAxOTUwMSw0OS42NDQxODEzIDk1Ljk2MjY0MTIsNjYuMjA0OTU5NSBDMTA2LjE3Mjk2Nyw2My4zNjg4NzYgMTE3LjEyMzA0Nyw2MS45NDY1OTQ5IDEyOC4wMDEwNiw2MS44OTc4NDMyIEMxMzguODc5MDczLDYxLjk0NjU5NDkgMTQ5LjgzNzYzMiw2My4zNjg4NzYgMTYwLjA2NzAzMyw2Ni4yMDQ5NTk1IEMxODQuNDk4MDUsNDkuNjQ0MTgxMyAxOTUuMjMxOTI2LDUzLjA4NDM2MzYgMTk1LjIzMTkyNiw1My4wODQzNjM2IEMyMDIuMTk5MTk3LDcwLjcxNTU2MiAxOTcuODE1NzczLDgzLjczNDQxNTIgMTk2LjQ4Njc1Niw4Ni45NTgzOTM3IEMyMDQuNjk0MDE4LDk1LjkyMjM2ODIgMjA5LjY2MDM0MywxMDcuMzQwODg5IDIwOS42NjAzNDMsMTIxLjMxNTcwMiBDMjA5LjY2MDM0MywxNzAuNDc4NzI1IDE3OS43MTYxMzMsMTgxLjMwMzc0NyAxNTEuMjEzMjgxLDE4NC40NzI2MTQgQzE1NS44MDQ0MywxODguNDQ0ODI4IDE1OS44OTUzNDIsMTk2LjIzNDUxOCAxNTkuODk1MzQyLDIwOC4xNzY1OTMgQzE1OS44OTUzNDIsMjI1LjMwMzMxNyAxNTkuNzQ2OTY4LDIzOS4wODczNjEgMTU5Ljc0Njk2OCwyNDMuMzAzMzMzIEMxNTkuNzQ2OTY4LDI0Ni43MDk2MDEgMTYyLjA1MTAyLDI1MC43MDA4OSAxNjguNTM5MjUsMjQ5LjQ0Mzk0MSBDMjE5LjM3MDQzMiwyMzIuNDk5NTA3IDI1NiwxODQuNTM2MjA0IDI1NiwxMjguMDAxMDYgQzI1Niw1Ny4zMDY2OTQyIDE5OC42OTExODcsMCAxMjguMDAxMDYsMCBaIE00Ny45NDA1NTkzLDE4Mi4zNDAyMTIgQzQ3LjY1ODY0NjUsMTgyLjk3NjEwNSA0Ni42NTgxNzQ1LDE4My4xNjY4NzMgNDUuNzQ2NzI3NywxODIuNzMwMjI3IEM0NC44MTgzMjM1LDE4Mi4zMTI2NTYgNDQuMjk2ODkxNCwxODEuNDQ1NzIyIDQ0LjU5Nzg4MDgsMTgwLjgwNzcxIEM0NC44NzM0MzQ0LDE4MC4xNTI3MzkgNDUuODc2MDI2LDE3OS45NzA0NSA0Ni44MDIzMTAzLDE4MC40MDkyMTYgQzQ3LjczMjgzNDIsMTgwLjgyNjc4NiA0OC4yNjI3NDUxLDE4MS43MDIxOTkgNDcuOTQwNTU5MywxODIuMzQwMjEyIFogTTU0LjIzNjc4OTIsMTg3Ljk1ODI1NCBDNTMuNjI2MzMxOCwxODguNTI0MTk5IDUyLjQzMjk3MjMsMTg4LjI2MTM2MyA1MS42MjMyNjgyLDE4Ny4zNjY4NzQgQzUwLjc4NjAwODgsMTg2LjQ3NDUwNCA1MC42MjkxNTUzLDE4NS4yODExNDQgNTEuMjQ4MDkxMiwxODQuNzA2NzIgQzUxLjg3NzYyNTQsMTg0LjE0MDc3NSA1My4wMzQ5NTEyLDE4NC40MDU3MzEgNTMuODc0MzMwMiwxODUuMjk4MTAxIEM1NC43MTE1ODkyLDE4Ni4yMDEwNjkgNTQuODc0ODAxOSwxODcuMzg1OTUgNTQuMjM2Nzg5MiwxODcuOTU4MjU0IFogTTU4LjU1NjI0MTMsMTk1LjE0NjM0NyBDNTcuNzcxOTczMiwxOTUuNjkxMDk2IDU2LjQ4OTU4ODYsMTk1LjE4MDI2MSA1NS42OTY4NDE3LDE5NC4wNDIwMTMgQzU0LjkxMjU3MzMsMTkyLjkwMzc2NCA1NC45MTI1NzMzLDE5MS41Mzg3MTMgNTUuNzEzNzk5LDE5MC45OTE4NDUgQzU2LjUwODY2NTEsMTkwLjQ0NDk3NyA1Ny43NzE5NzMyLDE5MC45MzY3MzUgNTguNTc1MzE4MSwxOTIuMDY2NTA1IEM1OS4zNTc0NjY5LDE5My4yMjM4MyA1OS4zNTc0NjY5LDE5NC41ODg4OCA1OC41NTYyNDEzLDE5NS4xNDYzNDcgWiBNNjUuODYxMzU5MiwyMDMuNDcxMTc0IEM2NS4xNTk3NTcxLDIwNC4yNDQ4NDYgNjMuNjY1NDA4MywyMDQuMDM3MTIgNjIuNTcxNjcxNywyMDIuOTgxNTM4IEM2MS40NTI0OTk5LDIwMS45NDkyNyA2MS4xNDA5MTIyLDIwMC40ODQ1OTYgNjEuODQ0NjM0MSwxOTkuNzEwOTI2IEM2Mi41NTQ3MTQ2LDE5OC45MzUxMzcgNjQuMDU3NTQyMiwxOTkuMTUzNDYgNjUuMTU5NzU3MSwyMDAuMjAwNTY0IEM2Ni4yNzA0NTA2LDIwMS4yMzA3MTIgNjYuNjA5NTkzNiwyMDIuNzA1OTg0IDY1Ljg2MTM1OTIsMjAzLjQ3MTE3NCBaIE03NS4zMDI1MTUxLDIwNi4yODE1NDIgQzc0Ljk5MzA0NzQsMjA3LjI4NDEzNCA3My41NTM4MDksMjA3LjczOTg1NyA3Mi4xMDM5NzI0LDIwNy4zMTM4MDkgQzcwLjY1NjI1NTYsMjA2Ljg3NTA0MyA2OS43MDg3NzQ4LDIwNS43MDA3NjEgNzAuMDAxMjg1NywyMDQuNjg3NTcxIEM3MC4zMDIyNzUsMjAzLjY3ODYyMSA3MS43NDc4NzIxLDIwMy4yMDM4MiA3My4yMDgzMDY5LDIwMy42NTk1NDMgQzc0LjY1MzkwNDEsMjA0LjA5NjE5IDc1LjYwMzUwNDgsMjA1LjI2MTk5NCA3NS4zMDI1MTUxLDIwNi4yODE1NDIgWiBNODYuMDQ2OTQ3LDIwNy40NzM2MjcgQzg2LjA4Mjk4MDYsMjA4LjUyOTIwOSA4NC44NTM1ODcxLDIwOS40MDQ2MjIgODMuMzMxNjgyOSwyMDkuNDIzNyBDODEuODAxMywyMDkuNDU3NjE0IDgwLjU2MzQyOCwyMDguNjAzMzk4IDgwLjU0NjQ3MDgsMjA3LjU2NDc3MiBDODAuNTQ2NDcwOCwyMDYuNDk4NTkxIDgxLjc0ODMwODgsMjA1LjYzMTY1NyA4My4yNzg2OTE3LDIwNS42MDYyMjEgQzg0LjgwMDU5NjIsMjA1LjU3NjU0NiA4Ni4wNDY5NDcsMjA2LjQyNDQwMyA4Ni4wNDY5NDcsMjA3LjQ3MzYyNyBaIE05Ni42MDIxNDcxLDIwNy4wNjkwMjMgQzk2Ljc4NDQzNjYsMjA4LjA5OTE3MSA5NS43MjY3MzQxLDIwOS4xNTY4NzIgOTQuMjE1NDI4LDIwOS40Mzg3ODUgQzkyLjcyOTU1NzcsMjA5LjcxMDA5OSA5MS4zNTM5MDg2LDIwOS4wNzQyMDYgOTEuMTY1MjYwMywyMDguMDUyNTM4IEM5MC45ODA4NTE1LDIwNi45OTY5NTUgOTIuMDU3NjMwNiwyMDUuOTM5MjUzIDkzLjU0MTM4MTMsMjA1LjY2NTgyIEM5NS4wNTQ4MDcsMjA1LjQwMjk4NCA5Ni40MDkyNTk2LDIwNi4wMjE5MTkgOTYuNjAyMTQ3MSwyMDcuMDY5MDIzIFpcIixcbiAgICBmaWxsOiBcIiMxNjE2MTRcIlxuICB9KSkpO1xufVxudmFyIHR5cGVfZ2l0aHViX2RlZmF1bHQgPSBTdmdUeXBlR2l0SHViO1xuXG4vLyBzcmMvY29tcG9uZW50cy9lb2kudHN4XG52YXIgRU9JID0gKHsgYmxvY2ssIGlubGluZSwgY2xhc3NOYW1lIH0pID0+IHtcbiAgdmFyIF9hLCBfYiwgX2M7XG4gIGNvbnN0IHsgY29tcG9uZW50cyB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBjb25zdCB7IG9yaWdpbmFsX3VybCwgYXR0cmlidXRlcywgZG9tYWluIH0gPSAoYmxvY2sgPT0gbnVsbCA/IHZvaWQgMCA6IGJsb2NrLmZvcm1hdCkgfHwge307XG4gIGlmICghb3JpZ2luYWxfdXJsIHx8ICFhdHRyaWJ1dGVzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgdGl0bGUgPSAoX2EgPSBhdHRyaWJ1dGVzLmZpbmQoKGF0dHIpID0+IGF0dHIuaWQgPT09IFwidGl0bGVcIikpID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZXNbMF07XG4gIGxldCBvd25lciA9IChfYiA9IGF0dHJpYnV0ZXMuZmluZCgoYXR0cikgPT4gYXR0ci5pZCA9PT0gXCJvd25lclwiKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnZhbHVlc1swXTtcbiAgY29uc3QgbGFzdFVwZGF0ZWRBdCA9IChfYyA9IGF0dHJpYnV0ZXMuZmluZCgoYXR0cikgPT4gYXR0ci5pZCA9PT0gXCJ1cGRhdGVkX2F0XCIpKSA9PSBudWxsID8gdm9pZCAwIDogX2MudmFsdWVzWzBdO1xuICBjb25zdCBsYXN0VXBkYXRlZCA9IGxhc3RVcGRhdGVkQXQgPyBmb3JtYXROb3Rpb25EYXRlVGltZShsYXN0VXBkYXRlZEF0KSA6IG51bGw7XG4gIGxldCBleHRlcm5hbEltYWdlO1xuICBzd2l0Y2ggKGRvbWFpbikge1xuICAgIGNhc2UgXCJnaXRodWIuY29tXCI6XG4gICAgICBleHRlcm5hbEltYWdlID0gLyogQF9fUFVSRV9fICovIFJlYWN0MjcuY3JlYXRlRWxlbWVudCh0eXBlX2dpdGh1Yl9kZWZhdWx0LCBudWxsKTtcbiAgICAgIGlmIChvd25lcikge1xuICAgICAgICBjb25zdCBwYXJ0cyA9IG93bmVyLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgb3duZXIgPSBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBpZiAodHJ1ZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhgVW5zdXBwb3J0ZWQgZXh0ZXJuYWxfb2JqZWN0X2luc3RhbmNlIGRvbWFpbiBcIiR7ZG9tYWlufVwiYCwgSlNPTi5zdHJpbmdpZnkoYmxvY2ssIG51bGwsIDIpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyNy5jcmVhdGVFbGVtZW50KGNvbXBvbmVudHMuTGluaywge1xuICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiLFxuICAgIGhyZWY6IG9yaWdpbmFsX3VybCxcbiAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWV4dGVybmFsXCIsIGlubGluZSA/IFwibm90aW9uLWV4dGVybmFsLW1lbnRpb25cIiA6IFwibm90aW9uLWV4dGVybmFsLWJsb2NrIG5vdGlvbi1yb3dcIiwgY2xhc3NOYW1lKVxuICB9LCBleHRlcm5hbEltYWdlICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI3LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tZXh0ZXJuYWwtaW1hZ2VcIlxuICB9LCBleHRlcm5hbEltYWdlKSwgLyogQF9fUFVSRV9fICovIFJlYWN0MjcuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1leHRlcm5hbC1kZXNjcmlwdGlvblwiXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI3LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tZXh0ZXJuYWwtdGl0bGVcIlxuICB9LCB0aXRsZSksIChvd25lciB8fCBsYXN0VXBkYXRlZCkgJiYgLyogQF9fUFVSRV9fICovIFJlYWN0MjcuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1leHRlcm5hbC1zdWJ0aXRsZVwiXG4gIH0sIG93bmVyICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI3LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIG93bmVyKSwgb3duZXIgJiYgbGFzdFVwZGF0ZWQgJiYgLyogQF9fUFVSRV9fICovIFJlYWN0MjcuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCIgXFx1MjAyMiBcIiksIGxhc3RVcGRhdGVkICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI3LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiVXBkYXRlZCBcIiwgbGFzdFVwZGF0ZWQpKSkpO1xufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvdGV4dC50c3hcbnZhciBUZXh0ID0gKHsgdmFsdWUsIGJsb2NrLCBsaW5rUHJvcHMsIGxpbmtQcm90b2NvbCB9KSA9PiB7XG4gIGNvbnN0IHsgY29tcG9uZW50cywgcmVjb3JkTWFwLCBtYXBQYWdlVXJsLCBtYXBJbWFnZVVybCwgcm9vdERvbWFpbiB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChSZWFjdDI4LkZyYWdtZW50LCBudWxsLCB2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUubWFwKChbdGV4dCwgZGVjb3JhdGlvbnNdLCBpbmRleCkgPT4ge1xuICAgIGlmICghZGVjb3JhdGlvbnMpIHtcbiAgICAgIGlmICh0ZXh0ID09PSBcIixcIikge1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgICAgICAgIGtleTogaW5kZXgsXG4gICAgICAgICAgc3R5bGU6IHsgcGFkZGluZzogXCIwLjVlbVwiIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChSZWFjdDI4LkZyYWdtZW50LCB7XG4gICAgICAgICAga2V5OiBpbmRleFxuICAgICAgICB9LCB0ZXh0KTtcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZm9ybWF0dGVkID0gZGVjb3JhdGlvbnMucmVkdWNlKChlbGVtZW50LCBkZWNvcmF0b3IpID0+IHtcbiAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgICBzd2l0Y2ggKGRlY29yYXRvclswXSkge1xuICAgICAgICBjYXNlIFwicFwiOiB7XG4gICAgICAgICAgY29uc3QgYmxvY2tJZCA9IGRlY29yYXRvclsxXTtcbiAgICAgICAgICBjb25zdCBsaW5rZWRCbG9jayA9IChfYSA9IHJlY29yZE1hcC5ibG9ja1tibG9ja0lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgICAgICAgIGlmICghbGlua2VkQmxvY2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdcInBcIiBtaXNzaW5nIGJsb2NrJywgYmxvY2tJZCk7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI4LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cy5QYWdlTGluaywge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saW5rXCIsXG4gICAgICAgICAgICBocmVmOiBtYXBQYWdlVXJsKGJsb2NrSWQpXG4gICAgICAgICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChQYWdlVGl0bGUsIHtcbiAgICAgICAgICAgIGJsb2NrOiBsaW5rZWRCbG9ja1xuICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiXFx1MjAyM1wiOiB7XG4gICAgICAgICAgY29uc3QgbGlua1R5cGUgPSBkZWNvcmF0b3JbMV1bMF07XG4gICAgICAgICAgY29uc3QgaWQgPSBkZWNvcmF0b3JbMV1bMV07XG4gICAgICAgICAgc3dpdGNoIChsaW5rVHlwZSkge1xuICAgICAgICAgICAgY2FzZSBcInVcIjoge1xuICAgICAgICAgICAgICBjb25zdCB1c2VyID0gKF9iID0gcmVjb3JkTWFwLm5vdGlvbl91c2VyW2lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnZhbHVlO1xuICAgICAgICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnXCJcXHUyMDIzXCIgbWlzc2luZyB1c2VyJywgaWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBbdXNlci5naXZlbl9uYW1lLCB1c2VyLmZhbWlseV9uYW1lXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyOC5jcmVhdGVFbGVtZW50KEdyYWNlZnVsSW1hZ2UsIHtcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXVzZXJcIixcbiAgICAgICAgICAgICAgICBzcmM6IG1hcEltYWdlVXJsKHVzZXIucHJvZmlsZV9waG90bywgYmxvY2spLFxuICAgICAgICAgICAgICAgIGFsdDogbmFtZVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgY29uc3QgbGlua2VkQmxvY2sgPSAoX2MgPSByZWNvcmRNYXAuYmxvY2tbaWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2MudmFsdWU7XG4gICAgICAgICAgICAgIGlmICghbGlua2VkQmxvY2spIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnXCJcXHUyMDIzXCIgbWlzc2luZyBibG9jaycsIGxpbmtUeXBlLCBpZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI4LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cy5QYWdlTGluaywgX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saW5rXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogbWFwUGFnZVVybChpZClcbiAgICAgICAgICAgICAgfSwgbGlua1Byb3BzKSwge1xuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICAgICAgICAgICAgICByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyOC5jcmVhdGVFbGVtZW50KFBhZ2VUaXRsZSwge1xuICAgICAgICAgICAgICAgIGJsb2NrOiBsaW5rZWRCbG9ja1xuICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJoXCI6XG4gICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI4LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogYG5vdGlvbi0ke2RlY29yYXRvclsxXX1gXG4gICAgICAgICAgfSwgZWxlbWVudCk7XG4gICAgICAgIGNhc2UgXCJjXCI6XG4gICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI4LmNyZWF0ZUVsZW1lbnQoXCJjb2RlXCIsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24taW5saW5lLWNvZGVcIlxuICAgICAgICAgIH0sIGVsZW1lbnQpO1xuICAgICAgICBjYXNlIFwiYlwiOlxuICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyOC5jcmVhdGVFbGVtZW50KFwiYlwiLCBudWxsLCBlbGVtZW50KTtcbiAgICAgICAgY2FzZSBcImlcIjpcbiAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChcImVtXCIsIG51bGwsIGVsZW1lbnQpO1xuICAgICAgICBjYXNlIFwic1wiOlxuICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyOC5jcmVhdGVFbGVtZW50KFwic1wiLCBudWxsLCBlbGVtZW50KTtcbiAgICAgICAgY2FzZSBcIl9cIjpcbiAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1pbmxpbmUtdW5kZXJzY29yZVwiXG4gICAgICAgICAgfSwgZWxlbWVudCk7XG4gICAgICAgIGNhc2UgXCJlXCI6XG4gICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDI4LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cy5FcXVhdGlvbiwge1xuICAgICAgICAgICAgbWF0aDogZGVjb3JhdG9yWzFdLFxuICAgICAgICAgICAgaW5saW5lOiB0cnVlXG4gICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgXCJtXCI6XG4gICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgICAgIGNhc2UgXCJhXCI6IHtcbiAgICAgICAgICBjb25zdCB2ID0gZGVjb3JhdG9yWzFdO1xuICAgICAgICAgIGNvbnN0IHBhdGhuYW1lID0gdi5zdWJzdHIoMSk7XG4gICAgICAgICAgY29uc3QgaWQgPSBwYXJzZVBhZ2VJZChwYXRobmFtZSwgeyB1dWlkOiB0cnVlIH0pO1xuICAgICAgICAgIGlmICgodlswXSA9PT0gXCIvXCIgfHwgdi5pbmNsdWRlcyhyb290RG9tYWluKSkgJiYgaWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGhyZWYgPSB2LmluY2x1ZGVzKHJvb3REb21haW4pID8gdiA6IGAke21hcFBhZ2VVcmwoaWQpfSR7Z2V0SGFzaEZyYWdtZW50VmFsdWUodil9YDtcbiAgICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyOC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudHMuUGFnZUxpbmssIF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saW5rXCIsXG4gICAgICAgICAgICAgIGhyZWZcbiAgICAgICAgICAgIH0sIGxpbmtQcm9wcyksIGVsZW1lbnQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChjb21wb25lbnRzLkxpbmssIF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saW5rXCIsXG4gICAgICAgICAgICAgIGhyZWY6IGxpbmtQcm90b2NvbCA/IGAke2xpbmtQcm90b2NvbH06JHtkZWNvcmF0b3JbMV19YCA6IGRlY29yYXRvclsxXVxuICAgICAgICAgICAgfSwgbGlua1Byb3BzKSwgZWxlbWVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJkXCI6IHtcbiAgICAgICAgICBjb25zdCB2ID0gZGVjb3JhdG9yWzFdO1xuICAgICAgICAgIGNvbnN0IHR5cGUgPSB2ID09IG51bGwgPyB2b2lkIDAgOiB2LnR5cGU7XG4gICAgICAgICAgaWYgKHR5cGUgPT09IFwiZGF0ZVwiKSB7XG4gICAgICAgICAgICBjb25zdCBzdGFydERhdGUgPSB2LnN0YXJ0X2RhdGU7XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0RGF0ZShzdGFydERhdGUpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJkYXRlcmFuZ2VcIikge1xuICAgICAgICAgICAgY29uc3Qgc3RhcnREYXRlID0gdi5zdGFydF9kYXRlO1xuICAgICAgICAgICAgY29uc3QgZW5kRGF0ZSA9IHYuZW5kX2RhdGU7XG4gICAgICAgICAgICByZXR1cm4gYCR7Zm9ybWF0RGF0ZShzdGFydERhdGUpfSBcXHUyMTkyICR7Zm9ybWF0RGF0ZShlbmREYXRlKX1gO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcInVcIjoge1xuICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IGRlY29yYXRvclsxXTtcbiAgICAgICAgICBjb25zdCB1c2VyID0gKF9kID0gcmVjb3JkTWFwLm5vdGlvbl91c2VyW3VzZXJJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfZC52YWx1ZTtcbiAgICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibWlzc2luZyB1c2VyXCIsIHVzZXJJZCk7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgbmFtZSA9IFt1c2VyLmdpdmVuX25hbWUsIHVzZXIuZmFtaWx5X25hbWVdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTtcbiAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChHcmFjZWZ1bEltYWdlLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXVzZXJcIixcbiAgICAgICAgICAgIHNyYzogbWFwSW1hZ2VVcmwodXNlci5wcm9maWxlX3Bob3RvLCBibG9jayksXG4gICAgICAgICAgICBhbHQ6IG5hbWVcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiZW9pXCI6IHtcbiAgICAgICAgICBjb25zdCBibG9ja0lkID0gZGVjb3JhdG9yWzFdO1xuICAgICAgICAgIGNvbnN0IGV4dGVybmFsT2JqZWN0SW5zdGFuY2UgPSAoX2UgPSByZWNvcmRNYXAuYmxvY2tbYmxvY2tJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfZS52YWx1ZTtcbiAgICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChFT0ksIHtcbiAgICAgICAgICAgIGJsb2NrOiBleHRlcm5hbE9iamVjdEluc3RhbmNlLFxuICAgICAgICAgICAgaW5saW5lOiB0cnVlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBpZiAodHJ1ZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJ1bnN1cHBvcnRlZCB0ZXh0IGZvcm1hdFwiLCBkZWNvcmF0b3IpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgIH1cbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QyOC5jcmVhdGVFbGVtZW50KFJlYWN0MjguRnJhZ21lbnQsIG51bGwsIHRleHQpKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MjguY3JlYXRlRWxlbWVudChSZWFjdDI4LkZyYWdtZW50LCB7XG4gICAgICBrZXk6IGluZGV4XG4gICAgfSwgZm9ybWF0dGVkKTtcbiAgfSkpO1xufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvaGVhZGVyLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QzMyBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUhvdGtleXMgfSBmcm9tIFwicmVhY3QtaG90a2V5cy1ob29rXCI7XG5pbXBvcnQgeyBnZXRQYWdlQnJlYWRjcnVtYnMgfSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5cbi8vIHNyYy9pY29ucy9zZWFyY2gtaWNvbi50c3hcbmltcG9ydCAqIGFzIFJlYWN0MjkgZnJvbSBcInJlYWN0XCI7XG52YXIgU2VhcmNoSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBfYSA9IHByb3BzLCB7IGNsYXNzTmFtZSB9ID0gX2EsIHJlc3QgPSBfX29ialJlc3QoX2EsIFtcImNsYXNzTmFtZVwiXSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyOS5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWljb25cIiwgY2xhc3NOYW1lKSxcbiAgICB2aWV3Qm94OiBcIjAgMCAxNyAxN1wiXG4gIH0sIHJlc3QpLCAvKiBAX19QVVJFX18gKi8gUmVhY3QyOS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNNi43ODAyNyAxMy42NzI5QzguMjQ4MDUgMTMuNjcyOSA5LjYwMTU2IDEzLjE5ODIgMTAuNzA5IDEyLjQwNzJMMTQuODc1IDE2LjU3MzJDMTUuMDY4NCAxNi43NjY2IDE1LjMyMzIgMTYuODYzMyAxNS41OTU3IDE2Ljg2MzNDMTYuMTY3IDE2Ljg2MzMgMTYuNTcxMyAxNi40MjM4IDE2LjU3MTMgMTUuODYxM0MxNi41NzEzIDE1LjU5NzcgMTYuNDgzNCAxNS4zNTE2IDE2LjI5IDE1LjE1ODJMMTIuMTUwNCAxMS4wMDk4QzEzLjAyMDUgOS44NjcxOSAxMy41MzkxIDguNDUyMTUgMTMuNTM5MSA2LjkxNDA2QzEzLjUzOTEgMy4xOTYyOSAxMC40OTggMC4xNTUyNzMgNi43ODAyNyAwLjE1NTI3M0MzLjA2MjUgMC4xNTUyNzMgMC4wMjE0ODQ0IDMuMTk2MjkgMC4wMjE0ODQ0IDYuOTE0MDZDMC4wMjE0ODQ0IDEwLjYzMTggMy4wNjI1IDEzLjY3MjkgNi43ODAyNyAxMy42NzI5Wk02Ljc4MDI3IDEyLjIxMzlDMy44Nzk4OCAxMi4yMTM5IDEuNDgwNDcgOS44MTQ0NSAxLjQ4MDQ3IDYuOTE0MDZDMS40ODA0NyA0LjAxMzY3IDMuODc5ODggMS42MTQyNiA2Ljc4MDI3IDEuNjE0MjZDOS42ODA2NiAxLjYxNDI2IDEyLjA4MDEgNC4wMTM2NyAxMi4wODAxIDYuOTE0MDZDMTIuMDgwMSA5LjgxNDQ1IDkuNjgwNjYgMTIuMjEzOSA2Ljc4MDI3IDEyLjIxMzlaXCJcbiAgfSkpO1xufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvc2VhcmNoLWRpYWxvZy50c3hcbnZhciBpbXBvcnRfbG9kYXNoID0gX190b0VTTShyZXF1aXJlX2xvZGFzaCgpLCAxKTtcbmltcG9ydCAqIGFzIFJlYWN0MzIgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBnZXRCbG9ja1RpdGxlIGFzIGdldEJsb2NrVGl0bGUzLCBnZXRCbG9ja1BhcmVudFBhZ2UgfSBmcm9tIFwibm90aW9uLXV0aWxzXCI7XG5cbi8vIHNyYy9pY29ucy9jbGVhci1pY29uLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QzMCBmcm9tIFwicmVhY3RcIjtcbnZhciBDbGVhckljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgX2EgPSBwcm9wcywgeyBjbGFzc05hbWUgfSA9IF9hLCByZXN0ID0gX19vYmpSZXN0KF9hLCBbXCJjbGFzc05hbWVcIl0pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzAuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHtcbiAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWljb25cIiwgY2xhc3NOYW1lKVxuICB9LCByZXN0KSwge1xuICAgIHZpZXdCb3g6IFwiMCAwIDMwIDMwXCJcbiAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMwLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk0xNSwwQzYuNzE2LDAsMCw2LjcxNiwwLDE1czYuNzE2LDE1LDE1LDE1czE1LTYuNzE2LDE1LTE1UzIzLjI4NCwwLDE1LDB6IE0yMiwyMC42TDIwLjYsMjJMMTUsMTYuNEw5LjQsMjJMOCwyMC42bDUuNi01LjYgTDgsOS40TDkuNCw4bDUuNiw1LjZMMjAuNiw4TDIyLDkuNEwxNi40LDE1TDIyLDIwLjZ6XCJcbiAgfSkpO1xufTtcblxuLy8gc3JjL2ljb25zL2xvYWRpbmctaWNvbi50c3hcbmltcG9ydCAqIGFzIFJlYWN0MzEgZnJvbSBcInJlYWN0XCI7XG52YXIgTG9hZGluZ0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgX2EgPSBwcm9wcywgeyBjbGFzc05hbWUgfSA9IF9hLCByZXN0ID0gX19vYmpSZXN0KF9hLCBbXCJjbGFzc05hbWVcIl0pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzEuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHtcbiAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWljb25cIiwgY2xhc3NOYW1lKVxuICB9LCByZXN0KSwge1xuICAgIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCJcbiAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMxLmNyZWF0ZUVsZW1lbnQoXCJkZWZzXCIsIG51bGwsIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMxLmNyZWF0ZUVsZW1lbnQoXCJsaW5lYXJHcmFkaWVudFwiLCB7XG4gICAgeDE6IFwiMjguMTU0Mjk2OSVcIixcbiAgICB5MTogXCI2My43NDAyMzQ0JVwiLFxuICAgIHgyOiBcIjc0LjYyODkwNjIlXCIsXG4gICAgeTI6IFwiMTcuNzgzMjAzMSVcIixcbiAgICBpZDogXCJsaW5lYXJHcmFkaWVudC0xXCJcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzEuY3JlYXRlRWxlbWVudChcInN0b3BcIiwge1xuICAgIHN0b3BDb2xvcjogXCJyZ2JhKDE2NCwgMTY0LCAxNjQsIDEpXCIsXG4gICAgb2Zmc2V0OiBcIjAlXCJcbiAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMxLmNyZWF0ZUVsZW1lbnQoXCJzdG9wXCIsIHtcbiAgICBzdG9wQ29sb3I6IFwicmdiYSgxNjQsIDE2NCwgMTY0LCAwKVwiLFxuICAgIHN0b3BPcGFjaXR5OiBcIjBcIixcbiAgICBvZmZzZXQ6IFwiMTAwJVwiXG4gIH0pKSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMxLmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHtcbiAgICBpZDogXCJQYWdlLTFcIixcbiAgICBzdHJva2U6IFwibm9uZVwiLFxuICAgIHN0cm9rZVdpZHRoOiBcIjFcIixcbiAgICBmaWxsOiBcIm5vbmVcIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMS5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7XG4gICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtMjM2LjAwMDAwMCwgLTI4Ni4wMDAwMDApXCJcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzEuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoMjM4LjAwMDAwMCwgMjg2LjAwMDAwMClcIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMS5jcmVhdGVFbGVtZW50KFwiY2lyY2xlXCIsIHtcbiAgICBpZDogXCJPdmFsLTJcIixcbiAgICBzdHJva2U6IFwidXJsKCNsaW5lYXJHcmFkaWVudC0xKVwiLFxuICAgIHN0cm9rZVdpZHRoOiBcIjRcIixcbiAgICBjeDogXCIxMFwiLFxuICAgIGN5OiBcIjEyXCIsXG4gICAgcjogXCIxMFwiXG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTAsMiBDNC40NzcxNTI1LDIgMCw2LjQ3NzE1MjUgMCwxMlwiLFxuICAgIGlkOiBcIk92YWwtMlwiLFxuICAgIHN0cm9rZTogXCJyZ2JhKDE2NCwgMTY0LCAxNjQsIDEpXCIsXG4gICAgc3Ryb2tlV2lkdGg6IFwiNFwiXG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMS5jcmVhdGVFbGVtZW50KFwicmVjdFwiLCB7XG4gICAgaWQ6IFwiUmVjdGFuZ2xlLTFcIixcbiAgICBmaWxsOiBcInJnYmEoMTY0LCAxNjQsIDE2NCwgMSlcIixcbiAgICB4OiBcIjhcIixcbiAgICB5OiBcIjBcIixcbiAgICB3aWR0aDogXCI0XCIsXG4gICAgaGVpZ2h0OiBcIjRcIixcbiAgICByeDogXCI4XCJcbiAgfSkpKSkpO1xufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvc2VhcmNoLWRpYWxvZy50c3hcbnZhciBTZWFyY2hEaWFsb2cgPSBjbGFzcyBleHRlbmRzIFJlYWN0MzIuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICBxdWVyeTogXCJcIixcbiAgICAgIHNlYXJjaFJlc3VsdDogbnVsbCxcbiAgICAgIHNlYXJjaEVycm9yOiBudWxsXG4gICAgfTtcbiAgICB0aGlzLl9vbkFmdGVyT3BlbiA9ICgpID0+IHtcbiAgICAgIGlmICh0aGlzLl9pbnB1dFJlZi5jdXJyZW50KSB7XG4gICAgICAgIHRoaXMuX2lucHV0UmVmLmN1cnJlbnQuZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuX29uQ2hhbmdlUXVlcnkgPSAoZSkgPT4ge1xuICAgICAgY29uc3QgcXVlcnkgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBxdWVyeSB9KTtcbiAgICAgIGlmICghcXVlcnkudHJpbSgpKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc0xvYWRpbmc6IGZhbHNlLCBzZWFyY2hSZXN1bHQ6IG51bGwsIHNlYXJjaEVycm9yOiBudWxsIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zZWFyY2goKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuX29uQ2xlYXJRdWVyeSA9ICgpID0+IHtcbiAgICAgIHRoaXMuX29uQ2hhbmdlUXVlcnkoeyB0YXJnZXQ6IHsgdmFsdWU6IFwiXCIgfSB9KTtcbiAgICB9O1xuICAgIHRoaXMuX3dhcm11cFNlYXJjaCA9ICgpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGNvbnN0IHsgc2VhcmNoTm90aW9uLCByb290QmxvY2tJZCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHlpZWxkIHNlYXJjaE5vdGlvbih7XG4gICAgICAgIHF1ZXJ5OiBcIlwiLFxuICAgICAgICBhbmNlc3RvcklkOiByb290QmxvY2tJZFxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2VhcmNoSW1wbCA9ICgpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGNvbnN0IHsgc2VhcmNoTm90aW9uLCByb290QmxvY2tJZCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IHsgcXVlcnkgfSA9IHRoaXMuc3RhdGU7XG4gICAgICBpZiAoIXF1ZXJ5LnRyaW0oKSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaXNMb2FkaW5nOiBmYWxzZSwgc2VhcmNoUmVzdWx0OiBudWxsLCBzZWFyY2hFcnJvcjogbnVsbCB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGlzTG9hZGluZzogdHJ1ZSB9KTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIHNlYXJjaE5vdGlvbih7XG4gICAgICAgIHF1ZXJ5LFxuICAgICAgICBhbmNlc3RvcklkOiByb290QmxvY2tJZFxuICAgICAgfSk7XG4gICAgICBjb25zb2xlLmxvZyhcInNlYXJjaFwiLCBxdWVyeSwgcmVzdWx0KTtcbiAgICAgIGxldCBzZWFyY2hSZXN1bHQgPSBudWxsO1xuICAgICAgbGV0IHNlYXJjaEVycm9yID0gbnVsbDtcbiAgICAgIGlmIChyZXN1bHQuZXJyb3IgfHwgcmVzdWx0LmVycm9ySWQpIHtcbiAgICAgICAgc2VhcmNoRXJyb3IgPSByZXN1bHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWFyY2hSZXN1bHQgPSBfX3NwcmVhZFZhbHVlcyh7fSwgcmVzdWx0KTtcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHNlYXJjaFJlc3VsdC5yZXN1bHRzLm1hcCgocmVzdWx0MikgPT4ge1xuICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgY29uc3QgYmxvY2sgPSAoX2EgPSBzZWFyY2hSZXN1bHQucmVjb3JkTWFwLmJsb2NrW3Jlc3VsdDIuaWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EudmFsdWU7XG4gICAgICAgICAgaWYgKCFibG9jaylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjb25zdCB0aXRsZSA9IGdldEJsb2NrVGl0bGUzKGJsb2NrLCBzZWFyY2hSZXN1bHQucmVjb3JkTWFwKTtcbiAgICAgICAgICBpZiAoIXRpdGxlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIHJlc3VsdDIudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgICByZXN1bHQyLmJsb2NrID0gYmxvY2s7XG4gICAgICAgICAgcmVzdWx0Mi5yZWNvcmRNYXAgPSBzZWFyY2hSZXN1bHQucmVjb3JkTWFwO1xuICAgICAgICAgIHJlc3VsdDIucGFnZSA9IGdldEJsb2NrUGFyZW50UGFnZShibG9jaywgc2VhcmNoUmVzdWx0LnJlY29yZE1hcCwge1xuICAgICAgICAgICAgaW5jbHVzaXZlOiB0cnVlXG4gICAgICAgICAgfSkgfHwgYmxvY2s7XG4gICAgICAgICAgaWYgKCFyZXN1bHQyLnBhZ2UuaWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKChfYiA9IHJlc3VsdDIuaGlnaGxpZ2h0KSA9PSBudWxsID8gdm9pZCAwIDogX2IudGV4dCkge1xuICAgICAgICAgICAgcmVzdWx0Mi5oaWdobGlnaHQuaHRtbCA9IHJlc3VsdDIuaGlnaGxpZ2h0LnRleHQucmVwbGFjZSgvPGd6a05mb1VVPi9naSwgXCI8Yj5cIikucmVwbGFjZSgvPFxcL2d6a05mb1VVPi9naSwgXCI8L2I+XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfSkuZmlsdGVyKEJvb2xlYW4pO1xuICAgICAgICBjb25zdCBzZWFyY2hSZXN1bHRzTWFwID0gcmVzdWx0cy5yZWR1Y2UoKG1hcCwgcmVzdWx0MikgPT4gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWFwKSwge1xuICAgICAgICAgIFtyZXN1bHQyLnBhZ2UuaWRdOiByZXN1bHQyXG4gICAgICAgIH0pLCB7fSk7XG4gICAgICAgIHNlYXJjaFJlc3VsdC5yZXN1bHRzID0gT2JqZWN0LnZhbHVlcyhzZWFyY2hSZXN1bHRzTWFwKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnN0YXRlLnF1ZXJ5ID09PSBxdWVyeSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaXNMb2FkaW5nOiBmYWxzZSwgc2VhcmNoUmVzdWx0LCBzZWFyY2hFcnJvciB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLl9pbnB1dFJlZiA9IFJlYWN0MzIuY3JlYXRlUmVmKCk7XG4gIH1cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5fc2VhcmNoID0gKDAsIGltcG9ydF9sb2Rhc2guZGVmYXVsdCkodGhpcy5fc2VhcmNoSW1wbC5iaW5kKHRoaXMpLCAxZTMpO1xuICAgIHRoaXMuX3dhcm11cFNlYXJjaCgpO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGlzT3Blbiwgb25DbG9zZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGlzTG9hZGluZywgcXVlcnksIHNlYXJjaFJlc3VsdCwgc2VhcmNoRXJyb3IgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgaGFzUXVlcnkgPSAhIXF1ZXJ5LnRyaW0oKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChOb3Rpb25Db250ZXh0Q29uc3VtZXIsIG51bGwsIChjdHgyKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbXBvbmVudHMsIGRlZmF1bHRQYWdlSWNvbiwgbWFwUGFnZVVybCB9ID0gY3R4MjtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KGNvbXBvbmVudHMuTW9kYWwsIHtcbiAgICAgICAgaXNPcGVuLFxuICAgICAgICBjb250ZW50TGFiZWw6IFwiU2VhcmNoXCIsXG4gICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tc2VhcmNoXCIsXG4gICAgICAgIG92ZXJsYXlDbGFzc05hbWU6IFwibm90aW9uLXNlYXJjaC1vdmVybGF5XCIsXG4gICAgICAgIG9uUmVxdWVzdENsb3NlOiBvbkNsb3NlLFxuICAgICAgICBvbkFmdGVyT3BlbjogdGhpcy5fb25BZnRlck9wZW5cbiAgICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwicXVpY2tGaW5kTWVudVwiXG4gICAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcInNlYXJjaEJhclwiXG4gICAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImlubGluZUljb25cIlxuICAgICAgfSwgaXNMb2FkaW5nID8gLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChMb2FkaW5nSWNvbiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibG9hZGluZ0ljb25cIlxuICAgICAgfSkgOiAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KFNlYXJjaEljb24sIG51bGwpKSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcInNlYXJjaElucHV0XCIsXG4gICAgICAgIHBsYWNlaG9sZGVyOiBcIlNlYXJjaFwiLFxuICAgICAgICB2YWx1ZTogcXVlcnksXG4gICAgICAgIHJlZjogdGhpcy5faW5wdXRSZWYsXG4gICAgICAgIG9uQ2hhbmdlOiB0aGlzLl9vbkNoYW5nZVF1ZXJ5XG4gICAgICB9KSwgcXVlcnkgJiYgLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIHJvbGU6IFwiYnV0dG9uXCIsXG4gICAgICAgIGNsYXNzTmFtZTogXCJjbGVhckJ1dHRvblwiLFxuICAgICAgICBvbkNsaWNrOiB0aGlzLl9vbkNsZWFyUXVlcnlcbiAgICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoQ2xlYXJJY29uLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjbGVhckljb25cIlxuICAgICAgfSkpKSwgaGFzUXVlcnkgJiYgc2VhcmNoUmVzdWx0ICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoUmVhY3QzMi5GcmFnbWVudCwgbnVsbCwgc2VhcmNoUmVzdWx0LnJlc3VsdHMubGVuZ3RoID8gLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChOb3Rpb25Db250ZXh0UHJvdmlkZXIsIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIGN0eDIpLCB7XG4gICAgICAgIHJlY29yZE1hcDogc2VhcmNoUmVzdWx0LnJlY29yZE1hcFxuICAgICAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwicmVzdWx0c1BhbmVcIlxuICAgICAgfSwgc2VhcmNoUmVzdWx0LnJlc3VsdHMubWFwKChyZXN1bHQpID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChjb21wb25lbnRzLlBhZ2VMaW5rLCB7XG4gICAgICAgICAga2V5OiByZXN1bHQuaWQsXG4gICAgICAgICAgY2xhc3NOYW1lOiBjcyhcInJlc3VsdFwiLCBcIm5vdGlvbi1wYWdlLWxpbmtcIiksXG4gICAgICAgICAgaHJlZjogbWFwUGFnZVVybChyZXN1bHQucGFnZS5pZCwgc2VhcmNoUmVzdWx0LnJlY29yZE1hcClcbiAgICAgICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChQYWdlVGl0bGUsIHtcbiAgICAgICAgICBibG9jazogcmVzdWx0LnBhZ2UsXG4gICAgICAgICAgZGVmYXVsdEljb246IGRlZmF1bHRQYWdlSWNvblxuICAgICAgICB9KSwgKChfYSA9IHJlc3VsdC5oaWdobGlnaHQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5odG1sKSAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLXNlYXJjaC1yZXN1bHQtaGlnaGxpZ2h0XCIsXG4gICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgIF9faHRtbDogcmVzdWx0LmhpZ2hsaWdodC5odG1sXG4gICAgICAgICAgfVxuICAgICAgICB9KSk7XG4gICAgICB9KSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoXCJmb290ZXJcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwicmVzdWx0c0Zvb3RlclwiXG4gICAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcInJlc3VsdHNDb3VudFwiXG4gICAgICB9LCBzZWFyY2hSZXN1bHQudG90YWwpLCBzZWFyY2hSZXN1bHQudG90YWwgPT09IDEgPyBcIiByZXN1bHRcIiA6IFwiIHJlc3VsdHNcIikpKSA6IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibm9SZXN1bHRzUGFuZVwiXG4gICAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm5vUmVzdWx0c1wiXG4gICAgICB9LCBcIk5vIHJlc3VsdHNcIiksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibm9SZXN1bHRzRGV0YWlsXCJcbiAgICAgIH0sIFwiVHJ5IGRpZmZlcmVudCBzZWFyY2ggdGVybXNcIikpKSwgaGFzUXVlcnkgJiYgIXNlYXJjaFJlc3VsdCAmJiBzZWFyY2hFcnJvciAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3QzMi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm5vUmVzdWx0c1BhbmVcIlxuICAgICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzIuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJub1Jlc3VsdHNcIlxuICAgICAgfSwgXCJTZWFyY2ggZXJyb3JcIikpKSk7XG4gICAgfSk7XG4gIH1cbn07XG5cbi8vIHNyYy9jb21wb25lbnRzL2hlYWRlci50c3hcbnZhciBIZWFkZXIgPSAoeyBibG9jayB9KSA9PiB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzMy5jcmVhdGVFbGVtZW50KFwiaGVhZGVyXCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWhlYWRlclwiXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMzLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tbmF2LWhlYWRlclwiXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMzLmNyZWF0ZUVsZW1lbnQoQnJlYWRjcnVtYnMsIHtcbiAgICBibG9ja1xuICB9KSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzMuY3JlYXRlRWxlbWVudChTZWFyY2gsIHtcbiAgICBibG9ja1xuICB9KSkpO1xufTtcbnZhciBCcmVhZGNydW1icyA9ICh7IGJsb2NrLCByb290T25seSA9IGZhbHNlIH0pID0+IHtcbiAgY29uc3QgeyByZWNvcmRNYXAsIG1hcFBhZ2VVcmwsIGNvbXBvbmVudHMgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3QgYnJlYWRjcnVtYnMgPSBSZWFjdDMzLnVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGJyZWFkY3J1bWJzMiA9IGdldFBhZ2VCcmVhZGNydW1icyhyZWNvcmRNYXAsIGJsb2NrLmlkKTtcbiAgICBpZiAocm9vdE9ubHkpIHtcbiAgICAgIHJldHVybiBbYnJlYWRjcnVtYnMyWzBdXS5maWx0ZXIoQm9vbGVhbik7XG4gICAgfVxuICAgIHJldHVybiBicmVhZGNydW1iczI7XG4gIH0sIFtyZWNvcmRNYXAsIGJsb2NrLmlkLCByb290T25seV0pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzMuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImJyZWFkY3J1bWJzXCIsXG4gICAga2V5OiBcImJyZWFkY3J1bWJzXCJcbiAgfSwgYnJlYWRjcnVtYnMubWFwKChicmVhZGNydW1iLCBpbmRleCkgPT4ge1xuICAgIGlmICghYnJlYWRjcnVtYikge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHBhZ2VMaW5rUHJvcHMgPSB7fTtcbiAgICBjb25zdCBjb21wb25lbnRNYXAgPSB7XG4gICAgICBwYWdlTGluazogY29tcG9uZW50cy5QYWdlTGlua1xuICAgIH07XG4gICAgaWYgKGJyZWFkY3J1bWIuYWN0aXZlKSB7XG4gICAgICBjb21wb25lbnRNYXAucGFnZUxpbmsgPSAocHJvcHMpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMzLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhZ2VMaW5rUHJvcHMuaHJlZiA9IG1hcFBhZ2VVcmwoYnJlYWRjcnVtYi5wYWdlSWQpO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzMuY3JlYXRlRWxlbWVudChSZWFjdDMzLkZyYWdtZW50LCB7XG4gICAgICBrZXk6IGJyZWFkY3J1bWIucGFnZUlkXG4gICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzMuY3JlYXRlRWxlbWVudChjb21wb25lbnRNYXAucGFnZUxpbmssIF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgIGNsYXNzTmFtZTogY3MoXCJicmVhZGNydW1iXCIsIGJyZWFkY3J1bWIuYWN0aXZlICYmIFwiYWN0aXZlXCIpXG4gICAgfSwgcGFnZUxpbmtQcm9wcyksIGJyZWFkY3J1bWIuaWNvbiAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3QzMy5jcmVhdGVFbGVtZW50KFBhZ2VJY29uLCB7XG4gICAgICBjbGFzc05hbWU6IFwiaWNvblwiLFxuICAgICAgYmxvY2s6IGJyZWFkY3J1bWIuYmxvY2tcbiAgICB9KSwgYnJlYWRjcnVtYi50aXRsZSAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3QzMy5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwidGl0bGVcIlxuICAgIH0sIGJyZWFkY3J1bWIudGl0bGUpKSwgaW5kZXggPCBicmVhZGNydW1icy5sZW5ndGggLSAxICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMzLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJzcGFjZXJcIlxuICAgIH0sIFwiL1wiKSk7XG4gIH0pKTtcbn07XG52YXIgU2VhcmNoID0gKHsgYmxvY2ssIHNlYXJjaCwgdGl0bGUgPSBcIlNlYXJjaFwiIH0pID0+IHtcbiAgY29uc3QgeyBzZWFyY2hOb3Rpb24sIHJvb3RQYWdlSWQgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3Qgb25TZWFyY2hOb3Rpb24gPSBzZWFyY2ggfHwgc2VhcmNoTm90aW9uO1xuICBjb25zdCBbaXNTZWFyY2hPcGVuLCBzZXRJc1NlYXJjaE9wZW5dID0gUmVhY3QzMy51c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IG9uT3BlblNlYXJjaCA9IFJlYWN0MzMudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldElzU2VhcmNoT3Blbih0cnVlKTtcbiAgfSwgW10pO1xuICBjb25zdCBvbkNsb3NlU2VhcmNoID0gUmVhY3QzMy51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0SXNTZWFyY2hPcGVuKGZhbHNlKTtcbiAgfSwgW10pO1xuICB1c2VIb3RrZXlzKFwiY21kK3BcIiwgKGV2ZW50KSA9PiB7XG4gICAgb25PcGVuU2VhcmNoKCk7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSk7XG4gIHVzZUhvdGtleXMoXCJjbWQra1wiLCAoZXZlbnQpID0+IHtcbiAgICBvbk9wZW5TZWFyY2goKTtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9KTtcbiAgY29uc3QgaGFzU2VhcmNoID0gISFvblNlYXJjaE5vdGlvbjtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMzLmNyZWF0ZUVsZW1lbnQoUmVhY3QzMy5GcmFnbWVudCwgbnVsbCwgaGFzU2VhcmNoICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMzLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIHJvbGU6IFwiYnV0dG9uXCIsXG4gICAgY2xhc3NOYW1lOiBjcyhcImJyZWFkY3J1bWJcIiwgXCJidXR0b25cIiwgXCJub3Rpb24tc2VhcmNoLWJ1dHRvblwiKSxcbiAgICBvbkNsaWNrOiBvbk9wZW5TZWFyY2hcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzMuY3JlYXRlRWxlbWVudChTZWFyY2hJY29uLCB7XG4gICAgY2xhc3NOYW1lOiBcInNlYXJjaEljb25cIlxuICB9KSwgdGl0bGUgJiYgLyogQF9fUFVSRV9fICovIFJlYWN0MzMuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogXCJ0aXRsZVwiXG4gIH0sIHRpdGxlKSksIGlzU2VhcmNoT3BlbiAmJiBoYXNTZWFyY2ggJiYgLyogQF9fUFVSRV9fICovIFJlYWN0MzMuY3JlYXRlRWxlbWVudChTZWFyY2hEaWFsb2csIHtcbiAgICBpc09wZW46IGlzU2VhcmNoT3BlbixcbiAgICByb290QmxvY2tJZDogcm9vdFBhZ2VJZCB8fCAoYmxvY2sgPT0gbnVsbCA/IHZvaWQgMCA6IGJsb2NrLmlkKSxcbiAgICBvbkNsb3NlOiBvbkNsb3NlU2VhcmNoLFxuICAgIHNlYXJjaE5vdGlvbjogb25TZWFyY2hOb3Rpb25cbiAgfSkpO1xufTtcblxuLy8gc3JjL2NvbXBvbmVudHMvYXNzZXQtd3JhcHBlci50c3hcbmltcG9ydCB7IHBhcnNlUGFnZUlkIGFzIHBhcnNlUGFnZUlkMiB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbnZhciB1cmxTdHlsZSA9IHsgd2lkdGg6IFwiMTAwJVwiIH07XG52YXIgQXNzZXRXcmFwcGVyID0gKHsgYmxvY2tJZCwgYmxvY2sgfSkgPT4ge1xuICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZjtcbiAgY29uc3QgdmFsdWUgPSBibG9jaztcbiAgY29uc3QgeyBjb21wb25lbnRzLCBtYXBQYWdlVXJsLCByb290RG9tYWluLCB6b29tIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGxldCBpc1VSTCA9IGZhbHNlO1xuICBpZiAoYmxvY2sudHlwZSA9PT0gXCJpbWFnZVwiKSB7XG4gICAgY29uc3QgY2FwdGlvbiA9IChfYyA9IChfYiA9IChfYSA9IHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2EuY2FwdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9iWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2NbMF07XG4gICAgaWYgKGNhcHRpb24pIHtcbiAgICAgIGNvbnN0IGlkID0gcGFyc2VQYWdlSWQyKGNhcHRpb24sIHsgdXVpZDogdHJ1ZSB9KTtcbiAgICAgIGNvbnN0IGlzUGFnZSA9IGNhcHRpb24uY2hhckF0KDApID09PSBcIi9cIiAmJiBpZDtcbiAgICAgIGlmIChpc1BhZ2UgfHwgaXNWYWxpZFVSTChjYXB0aW9uKSkge1xuICAgICAgICBpc1VSTCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGNvbnN0IGZpZ3VyZSA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM0LmNyZWF0ZUVsZW1lbnQoXCJmaWd1cmVcIiwge1xuICAgIGNsYXNzTmFtZTogY3MoXCJub3Rpb24tYXNzZXQtd3JhcHBlclwiLCBgbm90aW9uLWFzc2V0LXdyYXBwZXItJHtibG9jay50eXBlfWAsICgoX2QgPSB2YWx1ZS5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfZC5ibG9ja19mdWxsX3dpZHRoKSAmJiBcIm5vdGlvbi1hc3NldC13cmFwcGVyLWZ1bGxcIiwgYmxvY2tJZClcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzQuY3JlYXRlRWxlbWVudChBc3NldCwge1xuICAgIGJsb2NrOiB2YWx1ZSxcbiAgICB6b29tYWJsZTogem9vbSAmJiAhaXNVUkxcbiAgfSwgKChfZSA9IHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2UuY2FwdGlvbikgJiYgIWlzVVJMICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM0LmNyZWF0ZUVsZW1lbnQoXCJmaWdjYXB0aW9uXCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWFzc2V0LWNhcHRpb25cIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzNC5jcmVhdGVFbGVtZW50KFRleHQsIHtcbiAgICB2YWx1ZTogdmFsdWUucHJvcGVydGllcy5jYXB0aW9uLFxuICAgIGJsb2NrXG4gIH0pKSkpO1xuICBpZiAoaXNVUkwpIHtcbiAgICBjb25zdCBjYXB0aW9uID0gKF9mID0gdmFsdWUgPT0gbnVsbCA/IHZvaWQgMCA6IHZhbHVlLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfZi5jYXB0aW9uWzBdWzBdO1xuICAgIGNvbnN0IGlkID0gcGFyc2VQYWdlSWQyKGNhcHRpb24sIHsgdXVpZDogdHJ1ZSB9KTtcbiAgICBjb25zdCBpc1BhZ2UgPSBjYXB0aW9uLmNoYXJBdCgwKSA9PT0gXCIvXCIgJiYgaWQ7XG4gICAgY29uc3QgY2FwdGlvbkhvc3RuYW1lID0gZXh0cmFjdEhvc3RuYW1lKGNhcHRpb24pO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzNC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudHMuUGFnZUxpbmssIHtcbiAgICAgIHN0eWxlOiB1cmxTdHlsZSxcbiAgICAgIGhyZWY6IGlzUGFnZSA/IG1hcFBhZ2VVcmwoaWQpIDogY2FwdGlvbixcbiAgICAgIHRhcmdldDogY2FwdGlvbkhvc3RuYW1lICYmIGNhcHRpb25Ib3N0bmFtZSAhPT0gcm9vdERvbWFpbiAmJiAhY2FwdGlvbi5zdGFydHNXaXRoKFwiL1wiKSA/IFwiYmxhbmtfXCIgOiBudWxsXG4gICAgfSwgZmlndXJlKTtcbiAgfVxuICByZXR1cm4gZmlndXJlO1xufTtcbmZ1bmN0aW9uIGlzVmFsaWRVUkwoc3RyKSB7XG4gIGNvbnN0IHBhdHRlcm4gPSBuZXcgUmVnRXhwKFwiXihodHRwcz86XFxcXC9cXFxcLyk/KCgoW2EtelxcXFxkXShbYS16XFxcXGQtXSpbYS16XFxcXGRdKSopXFxcXC4pK1thLXpdezIsfXwoKFxcXFxkezEsM31cXFxcLil7M31cXFxcZHsxLDN9KSkoXFxcXDpcXFxcZCspPyhcXFxcL1stYS16XFxcXGQlXy5+K10qKSooXFxcXD9bOyZhLXpcXFxcZCVfLn4rPS1dKik/KFxcXFwjWy1hLXpcXFxcZF9dKik/JFwiLCBcImlcIik7XG4gIHJldHVybiAhIXBhdHRlcm4udGVzdChzdHIpO1xufVxuZnVuY3Rpb24gZXh0cmFjdEhvc3RuYW1lKHVybCkge1xuICB0cnkge1xuICAgIGNvbnN0IGhvc3RuYW1lID0gbmV3IFVSTCh1cmwpLmhvc3RuYW1lO1xuICAgIHJldHVybiBob3N0bmFtZTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn1cblxuLy8gc3JjL2NvbXBvbmVudHMvY2hlY2tib3gudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDM2IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvaWNvbnMvY2hlY2sudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDM1IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnQ2hlY2socHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM1LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3QzNS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNNS41IDEyTDE0IDMuNSAxMi41IDJsLTcgNy00LTQuMDAzTDAgNi40OTl6XCJcbiAgfSkpO1xufVxudmFyIGNoZWNrX2RlZmF1bHQgPSBTdmdDaGVjaztcblxuLy8gc3JjL2NvbXBvbmVudHMvY2hlY2tib3gudHN4XG52YXIgQ2hlY2tib3ggPSAoeyBpc0NoZWNrZWQgfSkgPT4ge1xuICBsZXQgY29udGVudCA9IG51bGw7XG4gIGlmIChpc0NoZWNrZWQpIHtcbiAgICBjb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0MzYuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLXByb3BlcnR5LWNoZWNrYm94LWNoZWNrZWRcIlxuICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM2LmNyZWF0ZUVsZW1lbnQoY2hlY2tfZGVmYXVsdCwgbnVsbCkpO1xuICB9IGVsc2Uge1xuICAgIGNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8gUmVhY3QzNi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tcHJvcGVydHktY2hlY2tib3gtdW5jaGVja2VkXCJcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzYuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tcHJvcGVydHkgbm90aW9uLXByb3BlcnR5LWNoZWNrYm94XCJcbiAgfSwgY29udGVudCk7XG59O1xuXG4vLyBzcmMvY29udGV4dC50c3hcbnZhciBEZWZhdWx0TGluayA9IChwcm9wcykgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0MzcuY3JlYXRlRWxlbWVudChcImFcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICB0YXJnZXQ6IFwiX2JsYW5rXCIsXG4gIHJlbDogXCJub29wZW5lciBub3JlZmVycmVyXCJcbn0sIHByb3BzKSk7XG52YXIgRGVmYXVsdExpbmtNZW1vID0gUmVhY3QzNy5tZW1vKERlZmF1bHRMaW5rKTtcbnZhciBEZWZhdWx0UGFnZUxpbmsgPSAocHJvcHMpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM3LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcykpO1xudmFyIERlZmF1bHRQYWdlTGlua01lbW8gPSBSZWFjdDM3Lm1lbW8oRGVmYXVsdFBhZ2VMaW5rKTtcbnZhciBEZWZhdWx0RW1iZWQgPSBBc3NldFdyYXBwZXI7XG52YXIgRGVmYXVsdEhlYWRlciA9IEhlYWRlcjtcbnZhciBkdW1teUxpbmsgPSAoX2EpID0+IHtcbiAgdmFyIF9iID0gX2EsIHsgaHJlZiwgcmVsLCB0YXJnZXQsIHRpdGxlIH0gPSBfYiwgcmVzdCA9IF9fb2JqUmVzdChfYiwgW1wiaHJlZlwiLCBcInJlbFwiLCBcInRhcmdldFwiLCBcInRpdGxlXCJdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM3LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIF9fc3ByZWFkVmFsdWVzKHt9LCByZXN0KSk7XG59O1xudmFyIGR1bW15Q29tcG9uZW50ID0gKG5hbWUpID0+ICgpID0+IHtcbiAgY29uc29sZS53YXJuKGBXYXJuaW5nOiB1c2luZyBlbXB0eSBjb21wb25lbnQgXCIke25hbWV9XCIgKHlvdSBzaG91bGQgb3ZlcnJpZGUgdGhpcyBpbiBOb3Rpb25SZW5kZXJlci5jb21wb25lbnRzKWApO1xuICByZXR1cm4gbnVsbDtcbn07XG52YXIgZHVtbXlPdmVycmlkZUZuID0gKF8sIGRlZmF1bHRWYWx1ZUZuKSA9PiBkZWZhdWx0VmFsdWVGbigpO1xudmFyIGRlZmF1bHRDb21wb25lbnRzID0ge1xuICBJbWFnZTogbnVsbCxcbiAgTGluazogRGVmYXVsdExpbmtNZW1vLFxuICBQYWdlTGluazogRGVmYXVsdFBhZ2VMaW5rTWVtbyxcbiAgQ2hlY2tib3gsXG4gIENhbGxvdXQ6IHZvaWQgMCxcbiAgQ29kZTogZHVtbXlDb21wb25lbnQoXCJDb2RlXCIpLFxuICBFcXVhdGlvbjogZHVtbXlDb21wb25lbnQoXCJFcXVhdGlvblwiKSxcbiAgQ29sbGVjdGlvbjogZHVtbXlDb21wb25lbnQoXCJDb2xsZWN0aW9uXCIpLFxuICBQcm9wZXJ0eTogdm9pZCAwLFxuICBwcm9wZXJ0eVRleHRWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eVNlbGVjdFZhbHVlOiBkdW1teU92ZXJyaWRlRm4sXG4gIHByb3BlcnR5UmVsYXRpb25WYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eUZvcm11bGFWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eVRpdGxlVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlQZXJzb25WYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eUZpbGVWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eUNoZWNrYm94VmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlVcmxWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eUVtYWlsVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlQaG9uZU51bWJlclZhbHVlOiBkdW1teU92ZXJyaWRlRm4sXG4gIHByb3BlcnR5TnVtYmVyVmFsdWU6IGR1bW15T3ZlcnJpZGVGbixcbiAgcHJvcGVydHlMYXN0RWRpdGVkVGltZVZhbHVlOiBkdW1teU92ZXJyaWRlRm4sXG4gIHByb3BlcnR5Q3JlYXRlZFRpbWVWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBwcm9wZXJ0eURhdGVWYWx1ZTogZHVtbXlPdmVycmlkZUZuLFxuICBQZGY6IGR1bW15Q29tcG9uZW50KFwiUGRmXCIpLFxuICBUd2VldDogZHVtbXlDb21wb25lbnQoXCJUd2VldFwiKSxcbiAgTW9kYWw6IGR1bW15Q29tcG9uZW50KFwiTW9kYWxcIiksXG4gIEhlYWRlcjogRGVmYXVsdEhlYWRlcixcbiAgRW1iZWQ6IERlZmF1bHRFbWJlZFxufTtcbnZhciBkZWZhdWx0Tm90aW9uQ29udGV4dCA9IHtcbiAgcmVjb3JkTWFwOiB7XG4gICAgYmxvY2s6IHt9LFxuICAgIGNvbGxlY3Rpb246IHt9LFxuICAgIGNvbGxlY3Rpb25fdmlldzoge30sXG4gICAgY29sbGVjdGlvbl9xdWVyeToge30sXG4gICAgbm90aW9uX3VzZXI6IHt9LFxuICAgIHNpZ25lZF91cmxzOiB7fVxuICB9LFxuICBjb21wb25lbnRzOiBkZWZhdWx0Q29tcG9uZW50cyxcbiAgbWFwUGFnZVVybDogZGVmYXVsdE1hcFBhZ2VVcmwoKSxcbiAgbWFwSW1hZ2VVcmw6IGRlZmF1bHRNYXBJbWFnZVVybCxcbiAgc2VhcmNoTm90aW9uOiBudWxsLFxuICBmdWxsUGFnZTogZmFsc2UsXG4gIGRhcmtNb2RlOiBmYWxzZSxcbiAgcHJldmlld0ltYWdlczogZmFsc2UsXG4gIGZvcmNlQ3VzdG9tSW1hZ2VzOiBmYWxzZSxcbiAgc2hvd0NvbGxlY3Rpb25WaWV3RHJvcGRvd246IHRydWUsXG4gIGxpbmtUYWJsZVRpdGxlUHJvcGVydGllczogdHJ1ZSxcbiAgc2hvd1RhYmxlT2ZDb250ZW50czogZmFsc2UsXG4gIG1pblRhYmxlT2ZDb250ZW50c0l0ZW1zOiAzLFxuICBkZWZhdWx0UGFnZUljb246IG51bGwsXG4gIGRlZmF1bHRQYWdlQ292ZXI6IG51bGwsXG4gIGRlZmF1bHRQYWdlQ292ZXJQb3NpdGlvbjogMC41LFxuICB6b29tOiBudWxsXG59O1xudmFyIGN0eCA9IFJlYWN0MzcuY3JlYXRlQ29udGV4dChkZWZhdWx0Tm90aW9uQ29udGV4dCk7XG52YXIgTm90aW9uQ29udGV4dFByb3ZpZGVyID0gKF9hKSA9PiB7XG4gIHZhciBfYiA9IF9hLCB7XG4gICAgY29tcG9uZW50czogdGhlbWVDb21wb25lbnRzID0ge30sXG4gICAgY2hpbGRyZW4sXG4gICAgbWFwUGFnZVVybCxcbiAgICBtYXBJbWFnZVVybCxcbiAgICByb290UGFnZUlkXG4gIH0gPSBfYiwgcmVzdCA9IF9fb2JqUmVzdChfYiwgW1xuICAgIFwiY29tcG9uZW50c1wiLFxuICAgIFwiY2hpbGRyZW5cIixcbiAgICBcIm1hcFBhZ2VVcmxcIixcbiAgICBcIm1hcEltYWdlVXJsXCIsXG4gICAgXCJyb290UGFnZUlkXCJcbiAgXSk7XG4gIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHJlc3QpKSB7XG4gICAgaWYgKHJlc3Rba2V5XSA9PT0gdm9pZCAwKSB7XG4gICAgICBkZWxldGUgcmVzdFtrZXldO1xuICAgIH1cbiAgfVxuICBjb25zdCB3cmFwcGVkVGhlbWVDb21wb25lbnRzID0gUmVhY3QzNy51c2VNZW1vKCgpID0+IF9fc3ByZWFkVmFsdWVzKHt9LCB0aGVtZUNvbXBvbmVudHMpLCBbdGhlbWVDb21wb25lbnRzXSk7XG4gIGlmICh3cmFwcGVkVGhlbWVDb21wb25lbnRzLm5leHRJbWFnZSkge1xuICAgIHdyYXBwZWRUaGVtZUNvbXBvbmVudHMuSW1hZ2UgPSB3cmFwTmV4dEltYWdlKHRoZW1lQ29tcG9uZW50cy5uZXh0SW1hZ2UpO1xuICB9XG4gIGlmICh3cmFwcGVkVGhlbWVDb21wb25lbnRzLm5leHRMaW5rKSB7XG4gICAgd3JhcHBlZFRoZW1lQ29tcG9uZW50cy5uZXh0TGluayA9IHdyYXBOZXh0TGluayh0aGVtZUNvbXBvbmVudHMubmV4dExpbmspO1xuICB9XG4gIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHdyYXBwZWRUaGVtZUNvbXBvbmVudHMpKSB7XG4gICAgaWYgKCF3cmFwcGVkVGhlbWVDb21wb25lbnRzW2tleV0pIHtcbiAgICAgIGRlbGV0ZSB3cmFwcGVkVGhlbWVDb21wb25lbnRzW2tleV07XG4gICAgfVxuICB9XG4gIGNvbnN0IHZhbHVlID0gUmVhY3QzNy51c2VNZW1vKCgpID0+IF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIGRlZmF1bHROb3Rpb25Db250ZXh0KSwgcmVzdCksIHtcbiAgICByb290UGFnZUlkLFxuICAgIG1hcFBhZ2VVcmw6IG1hcFBhZ2VVcmwgIT0gbnVsbCA/IG1hcFBhZ2VVcmwgOiBkZWZhdWx0TWFwUGFnZVVybChyb290UGFnZUlkKSxcbiAgICBtYXBJbWFnZVVybDogbWFwSW1hZ2VVcmwgIT0gbnVsbCA/IG1hcEltYWdlVXJsIDogZGVmYXVsdE1hcEltYWdlVXJsLFxuICAgIGNvbXBvbmVudHM6IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBkZWZhdWx0Q29tcG9uZW50cyksIHdyYXBwZWRUaGVtZUNvbXBvbmVudHMpXG4gIH0pLCBbbWFwSW1hZ2VVcmwsIG1hcFBhZ2VVcmwsIHdyYXBwZWRUaGVtZUNvbXBvbmVudHMsIHJvb3RQYWdlSWQsIHJlc3RdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM3LmNyZWF0ZUVsZW1lbnQoY3R4LlByb3ZpZGVyLCB7XG4gICAgdmFsdWVcbiAgfSwgY2hpbGRyZW4pO1xufTtcbnZhciBOb3Rpb25Db250ZXh0Q29uc3VtZXIgPSBjdHguQ29uc3VtZXI7XG52YXIgdXNlTm90aW9uQ29udGV4dCA9ICgpID0+IHtcbiAgcmV0dXJuIFJlYWN0MzcudXNlQ29udGV4dChjdHgpO1xufTtcblxuLy8gc3JjL3RoaXJkLXBhcnR5L2V2YWwtZm9ybXVsYS50c1xudmFyIGltcG9ydF9mb3JtYXQgPSBfX3RvRVNNKHJlcXVpcmVfZm9ybWF0KCksIDEpO1xudmFyIGltcG9ydF9nZXREYXRlID0gX190b0VTTShyZXF1aXJlX2dldERhdGUoKSwgMSk7XG52YXIgaW1wb3J0X2dldERheSA9IF9fdG9FU00ocmVxdWlyZV9nZXREYXkoKSwgMSk7XG52YXIgaW1wb3J0X2dldEhvdXJzID0gX190b0VTTShyZXF1aXJlX2dldEhvdXJzKCksIDEpO1xudmFyIGltcG9ydF9nZXRNaW51dGVzID0gX190b0VTTShyZXF1aXJlX2dldE1pbnV0ZXMoKSwgMSk7XG52YXIgaW1wb3J0X2dldE1vbnRoID0gX190b0VTTShyZXF1aXJlX2dldE1vbnRoKCksIDEpO1xudmFyIGltcG9ydF9nZXRZZWFyID0gX190b0VTTShyZXF1aXJlX2dldFllYXIoKSwgMSk7XG52YXIgaW1wb3J0X2FkZCA9IF9fdG9FU00ocmVxdWlyZV9hZGQoKSwgMSk7XG52YXIgaW1wb3J0X3N1YiA9IF9fdG9FU00ocmVxdWlyZV9zdWIoKSwgMSk7XG52YXIgaW1wb3J0X2ludGVydmFsVG9EdXJhdGlvbiA9IF9fdG9FU00ocmVxdWlyZV9pbnRlcnZhbFRvRHVyYXRpb24oKSwgMSk7XG5pbXBvcnQgeyBnZXRUZXh0Q29udGVudCBhcyBnZXRUZXh0Q29udGVudDIsIGdldERhdGVWYWx1ZSB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbmZ1bmN0aW9uIGV2YWxGb3JtdWxhKGZvcm11bGEsIGNvbnRleHQpIHtcbiAgY29uc3QgX2EgPSBjb250ZXh0LCB7IGVuZERhdGUgfSA9IF9hLCBjdHgyID0gX19vYmpSZXN0KF9hLCBbXCJlbmREYXRlXCJdKTtcbiAgc3dpdGNoIChmb3JtdWxhID09IG51bGwgPyB2b2lkIDAgOiBmb3JtdWxhLnR5cGUpIHtcbiAgICBjYXNlIFwic3ltYm9sXCI6XG4gICAgICByZXR1cm4gZm9ybXVsYS5uYW1lID09PSBcInRydWVcIjtcbiAgICBjYXNlIFwiY29uc3RhbnRcIjoge1xuICAgICAgY29uc3QgdmFsdWUgPSBmb3JtdWxhLnZhbHVlO1xuICAgICAgc3dpdGNoIChmb3JtdWxhLnJlc3VsdF90eXBlKSB7XG4gICAgICAgIGNhc2UgXCJ0ZXh0XCI6XG4gICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FzZSBcInByb3BlcnR5XCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gY3R4Mi5wcm9wZXJ0aWVzW2Zvcm11bGEuaWRdO1xuICAgICAgY29uc3QgdGV4dCA9IGdldFRleHRDb250ZW50Mih2YWx1ZSk7XG4gICAgICBzd2l0Y2ggKGZvcm11bGEucmVzdWx0X3R5cGUpIHtcbiAgICAgICAgY2FzZSBcInRleHRcIjpcbiAgICAgICAgICByZXR1cm4gdGV4dDtcbiAgICAgICAgY2FzZSBcIm51bWJlclwiOlxuICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHRleHQpO1xuICAgICAgICBjYXNlIFwiYm9vbGVhblwiOlxuICAgICAgICAgIGlmICh0eXBlb2YgdGV4dCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIHRleHQgPT09IFwidHJ1ZVwiO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gISF0ZXh0O1xuICAgICAgICAgIH1cbiAgICAgICAgY2FzZSBcImRhdGVcIjoge1xuICAgICAgICAgIGNvbnN0IHYgPSBnZXREYXRlVmFsdWUodmFsdWUpO1xuICAgICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgICBpZiAoZW5kRGF0ZSAmJiB2LmVuZF9kYXRlKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh2LmVuZF9kYXRlKTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSwgZGF0ZS5nZXRVVENNb250aCgpLCBkYXRlLmdldFVUQ0RhdGUoKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodi5zdGFydF9kYXRlKTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSwgZGF0ZS5nZXRVVENNb250aCgpLCBkYXRlLmdldFVUQ0RhdGUoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSh0ZXh0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm4gdGV4dDtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FzZSBcIm9wZXJhdG9yXCI6XG4gICAgY2FzZSBcImZ1bmN0aW9uXCI6XG4gICAgICByZXR1cm4gZXZhbEZ1bmN0aW9uRm9ybXVsYShmb3JtdWxhLCBjdHgyKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBpbnZhbGlkIG9yIHVuc3VwcG9ydGVkIGZvcm11bGEgXCIke2Zvcm11bGEgPT0gbnVsbCA/IHZvaWQgMCA6IGZvcm11bGEudHlwZX1gKTtcbiAgfVxufVxuZnVuY3Rpb24gZXZhbEZ1bmN0aW9uRm9ybXVsYShmb3JtdWxhLCBjdHgyKSB7XG4gIGNvbnN0IGFyZ3MgPSBmb3JtdWxhID09IG51bGwgPyB2b2lkIDAgOiBmb3JtdWxhLmFyZ3M7XG4gIHN3aXRjaCAoZm9ybXVsYS5uYW1lKSB7XG4gICAgY2FzZSBcImFuZFwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpICYmIGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJlbXB0eVwiOlxuICAgICAgcmV0dXJuICFldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICBjYXNlIFwiZXF1YWxcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSA9PSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwiaWZcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSA/IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpIDogZXZhbEZvcm11bGEoYXJnc1syXSwgY3R4Mik7XG4gICAgY2FzZSBcImxhcmdlclwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpID4gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgY2FzZSBcImxhcmdlckVxXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgPj0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgY2FzZSBcIm5vdFwiOlxuICAgICAgcmV0dXJuICFldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICBjYXNlIFwib3JcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSB8fCBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwic21hbGxlclwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpIDwgZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgY2FzZSBcInNtYWxsZXJFcVwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpIDw9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJ1bmVxdWFsXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgIT0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgY2FzZSBcImFic1wiOlxuICAgICAgcmV0dXJuIE1hdGguYWJzKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwiYWRkXCI6IHtcbiAgICAgIGNvbnN0IHYwID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBjb25zdCB2MSA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgaWYgKHR5cGVvZiB2MCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gdjAgKyArdjE7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2MCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gdjAgKyBgJHt2MX1gO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHYwO1xuICAgICAgfVxuICAgIH1cbiAgICBjYXNlIFwiY2JydFwiOlxuICAgICAgcmV0dXJuIE1hdGguY2JydChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImNlaWxcIjpcbiAgICAgIHJldHVybiBNYXRoLmNlaWwoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJkaXZpZGVcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSAvIGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJleHBcIjpcbiAgICAgIHJldHVybiBNYXRoLmV4cChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImZsb29yXCI6XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcihldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImxuXCI6XG4gICAgICByZXR1cm4gTWF0aC5sb2coZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJsb2cxMFwiOlxuICAgICAgcmV0dXJuIE1hdGgubG9nMTAoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJsb2cyXCI6XG4gICAgICByZXR1cm4gTWF0aC5sb2cyKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwibWF4XCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlcyA9IGFyZ3MubWFwKChhcmcpID0+IGV2YWxGb3JtdWxhKGFyZywgY3R4MikpO1xuICAgICAgcmV0dXJuIHZhbHVlcy5yZWR1Y2UoKGFjYywgdmFsdWUpID0+IE1hdGgubWF4KGFjYywgdmFsdWUpLCBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkpO1xuICAgIH1cbiAgICBjYXNlIFwibWluXCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlcyA9IGFyZ3MubWFwKChhcmcpID0+IGV2YWxGb3JtdWxhKGFyZywgY3R4MikpO1xuICAgICAgcmV0dXJuIHZhbHVlcy5yZWR1Y2UoKGFjYywgdmFsdWUpID0+IE1hdGgubWluKGFjYywgdmFsdWUpLCBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkpO1xuICAgIH1cbiAgICBjYXNlIFwibW9kXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgJSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwibXVsdGlwbHlcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSAqIGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgIGNhc2UgXCJwb3dcIjpcbiAgICAgIHJldHVybiBNYXRoLnBvdyhldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSwgZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4MikpO1xuICAgIGNhc2UgXCJyb3VuZFwiOlxuICAgICAgcmV0dXJuIE1hdGgucm91bmQoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJzaWduXCI6XG4gICAgICByZXR1cm4gTWF0aC5zaWduKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwic3FydFwiOlxuICAgICAgcmV0dXJuIE1hdGguc3FydChldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcInN1YnRyYWN0XCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikgLSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICBjYXNlIFwidG9OdW1iZXJcIjpcbiAgICAgIHJldHVybiBwYXJzZUZsb2F0KGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwidW5hcnlNaW51c1wiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpICogLTE7XG4gICAgY2FzZSBcInVuYXJ5UGx1c1wiOlxuICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikpO1xuICAgIGNhc2UgXCJjb25jYXRcIjoge1xuICAgICAgY29uc3QgdmFsdWVzID0gYXJncy5tYXAoKGFyZykgPT4gZXZhbEZvcm11bGEoYXJnLCBjdHgyKSk7XG4gICAgICByZXR1cm4gdmFsdWVzLmpvaW4oXCJcIik7XG4gICAgfVxuICAgIGNhc2UgXCJjb250YWluc1wiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpLmluY2x1ZGVzKGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpKTtcbiAgICBjYXNlIFwiZm9ybWF0XCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBzd2l0Y2ggKHR5cGVvZiB2YWx1ZSkge1xuICAgICAgICBjYXNlIFwic3RyaW5nXCI6XG4gICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBpbXBvcnRfZm9ybWF0LmRlZmF1bHQpKHZhbHVlLCBcIk1NTSBkLCBZWVlcIik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBgJHt2YWx1ZX1gO1xuICAgICAgICAgIH1cbiAgICAgICAgY2FzZSBcIm51bWJlclwiOlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiBgJHt2YWx1ZX1gO1xuICAgICAgfVxuICAgIH1cbiAgICBjYXNlIFwiam9pblwiOiB7XG4gICAgICBjb25zdCBbZGVsaW1pdGVyQXJnLCAuLi5yZXN0QXJnc10gPSBhcmdzO1xuICAgICAgY29uc3QgZGVsaW1pdGVyID0gZXZhbEZvcm11bGEoZGVsaW1pdGVyQXJnLCBjdHgyKTtcbiAgICAgIGNvbnN0IHZhbHVlcyA9IHJlc3RBcmdzLm1hcCgoYXJnKSA9PiBldmFsRm9ybXVsYShhcmcsIGN0eDIpKTtcbiAgICAgIHJldHVybiB2YWx1ZXMuam9pbihkZWxpbWl0ZXIpO1xuICAgIH1cbiAgICBjYXNlIFwibGVuZ3RoXCI6XG4gICAgICByZXR1cm4gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4MikubGVuZ3RoO1xuICAgIGNhc2UgXCJyZXBsYWNlXCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBjb25zdCByZWdleCA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgY29uc3QgcmVwbGFjZW1lbnQgPSBldmFsRm9ybXVsYShhcmdzWzJdLCBjdHgyKTtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAocmVnZXgpLCByZXBsYWNlbWVudCk7XG4gICAgfVxuICAgIGNhc2UgXCJyZXBsYWNlQWxsXCI6IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBjb25zdCByZWdleCA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgY29uc3QgcmVwbGFjZW1lbnQgPSBldmFsRm9ybXVsYShhcmdzWzJdLCBjdHgyKTtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAocmVnZXgsIFwiZ1wiKSwgcmVwbGFjZW1lbnQpO1xuICAgIH1cbiAgICBjYXNlIFwic2xpY2VcIjoge1xuICAgICAgY29uc3QgdmFsdWUgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IGJlZ2luSW5kZXggPSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICAgIGNvbnN0IGVuZEluZGV4ID0gYXJnc1syXSA/IGV2YWxGb3JtdWxhKGFyZ3NbMl0sIGN0eDIpIDogdmFsdWUubGVuZ3RoO1xuICAgICAgcmV0dXJuIHZhbHVlLnNsaWNlKGJlZ2luSW5kZXgsIGVuZEluZGV4KTtcbiAgICB9XG4gICAgY2FzZSBcInRlc3RcIjoge1xuICAgICAgY29uc3QgdmFsdWUgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IHJlZ2V4ID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgICByZXR1cm4gbmV3IFJlZ0V4cChyZWdleCkudGVzdCh2YWx1ZSk7XG4gICAgfVxuICAgIGNhc2UgXCJkYXRlXCI6XG4gICAgICByZXR1cm4gKDAsIGltcG9ydF9nZXREYXRlLmRlZmF1bHQpKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwiZGF0ZUFkZFwiOiB7XG4gICAgICBjb25zdCBkYXRlID0gZXZhbEZvcm11bGEoYXJnc1swXSwgY3R4Mik7XG4gICAgICBjb25zdCBudW1iZXIgPSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICAgIGNvbnN0IHVuaXQgPSBldmFsRm9ybXVsYShhcmdzWzFdLCBjdHgyKTtcbiAgICAgIHJldHVybiAoMCwgaW1wb3J0X2FkZC5kZWZhdWx0KShkYXRlLCB7IFt1bml0XTogbnVtYmVyIH0pO1xuICAgIH1cbiAgICBjYXNlIFwiZGF0ZUJldHdlZW5cIjoge1xuICAgICAgY29uc3QgZGF0ZTEgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IGRhdGUyID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgICBjb25zdCB1bml0ID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4Mik7XG4gICAgICByZXR1cm4gKDAsIGltcG9ydF9pbnRlcnZhbFRvRHVyYXRpb24uZGVmYXVsdCkoe1xuICAgICAgICBzdGFydDogZGF0ZTIsXG4gICAgICAgIGVuZDogZGF0ZTFcbiAgICAgIH0pW3VuaXRdO1xuICAgIH1cbiAgICBjYXNlIFwiZGF0ZVN1YnRyYWN0XCI6IHtcbiAgICAgIGNvbnN0IGRhdGUgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IG51bWJlciA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgY29uc3QgdW5pdCA9IGV2YWxGb3JtdWxhKGFyZ3NbMV0sIGN0eDIpO1xuICAgICAgcmV0dXJuICgwLCBpbXBvcnRfc3ViLmRlZmF1bHQpKGRhdGUsIHsgW3VuaXRdOiBudW1iZXIgfSk7XG4gICAgfVxuICAgIGNhc2UgXCJkYXlcIjpcbiAgICAgIHJldHVybiAoMCwgaW1wb3J0X2dldERheS5kZWZhdWx0KShldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImVuZFwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIGN0eDIpLCB7IGVuZERhdGU6IHRydWUgfSkpO1xuICAgIGNhc2UgXCJmb3JtYXREYXRlXCI6IHtcbiAgICAgIGNvbnN0IGRhdGUgPSBldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKTtcbiAgICAgIGNvbnN0IGZvcm1hdFZhbHVlID0gZXZhbEZvcm11bGEoYXJnc1sxXSwgY3R4MikucmVwbGFjZShcImRkZGRcIiwgXCJlZWVlXCIpO1xuICAgICAgcmV0dXJuICgwLCBpbXBvcnRfZm9ybWF0LmRlZmF1bHQpKGRhdGUsIGZvcm1hdFZhbHVlKTtcbiAgICB9XG4gICAgY2FzZSBcImZyb21UaW1lc3RhbXBcIjpcbiAgICAgIHJldHVybiBuZXcgRGF0ZShldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgY2FzZSBcImhvdXJcIjpcbiAgICAgIHJldHVybiAoMCwgaW1wb3J0X2dldEhvdXJzLmRlZmF1bHQpKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwibWludXRlXCI6XG4gICAgICByZXR1cm4gKDAsIGltcG9ydF9nZXRNaW51dGVzLmRlZmF1bHQpKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwibW9udGhcIjpcbiAgICAgIHJldHVybiAoMCwgaW1wb3J0X2dldE1vbnRoLmRlZmF1bHQpKGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpKTtcbiAgICBjYXNlIFwibm93XCI6XG4gICAgICByZXR1cm4gbmV3IERhdGUoKTtcbiAgICBjYXNlIFwic3RhcnRcIjpcbiAgICAgIHJldHVybiBldmFsRm9ybXVsYShhcmdzWzBdLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBjdHgyKSwgeyBlbmREYXRlOiBmYWxzZSB9KSk7XG4gICAgY2FzZSBcInRpbWVzdGFtcFwiOlxuICAgICAgcmV0dXJuIGV2YWxGb3JtdWxhKGFyZ3NbMF0sIGN0eDIpLmdldFRpbWUoKTtcbiAgICBjYXNlIFwieWVhclwiOlxuICAgICAgcmV0dXJuICgwLCBpbXBvcnRfZ2V0WWVhci5kZWZhdWx0KShldmFsRm9ybXVsYShhcmdzWzBdLCBjdHgyKSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBvciB1bnN1cHBvcnRlZCBmdW5jdGlvbiBmb3JtdWxhIFwiJHtmb3JtdWxhID09IG51bGwgPyB2b2lkIDAgOiBmb3JtdWxhLnR5cGV9YCk7XG4gIH1cbn1cblxuLy8gc3JjL3RoaXJkLXBhcnR5L3Byb3BlcnR5LnRzeFxudmFyIFByb3BlcnR5ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgY29tcG9uZW50cyB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICBpZiAoY29tcG9uZW50cy5Qcm9wZXJ0eSkge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudHMuUHJvcGVydHksIF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcykpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFByb3BlcnR5SW1wbE1lbW8sIF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcykpO1xuICB9XG59O1xudmFyIFByb3BlcnR5SW1wbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7IGNvbXBvbmVudHMsIG1hcEltYWdlVXJsLCBtYXBQYWdlVXJsIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGNvbnN0IHtcbiAgICBzY2hlbWEsXG4gICAgZGF0YSxcbiAgICBibG9jayxcbiAgICBjb2xsZWN0aW9uLFxuICAgIGlubGluZSA9IGZhbHNlLFxuICAgIGxpbmtUb1RpdGxlUGFnZSA9IHRydWVcbiAgfSA9IHByb3BzO1xuICBjb25zdCByZW5kZXJUZXh0VmFsdWUgPSBSZWFjdDM4LnVzZU1lbW8oKCkgPT4gZnVuY3Rpb24gVGV4dFByb3BlcnR5KCkge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFRleHQsIHtcbiAgICAgIHZhbHVlOiBkYXRhLFxuICAgICAgYmxvY2tcbiAgICB9KTtcbiAgfSwgW2Jsb2NrLCBkYXRhXSk7XG4gIGNvbnN0IHJlbmRlckRhdGVWYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBEYXRlUHJvcGVydHkoKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM4LmNyZWF0ZUVsZW1lbnQoVGV4dCwge1xuICAgICAgdmFsdWU6IGRhdGEsXG4gICAgICBibG9ja1xuICAgIH0pO1xuICB9LCBbYmxvY2ssIGRhdGFdKTtcbiAgY29uc3QgcmVuZGVyUmVsYXRpb25WYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBSZWxhdGlvblByb3BlcnR5KCkge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFRleHQsIHtcbiAgICAgIHZhbHVlOiBkYXRhLFxuICAgICAgYmxvY2tcbiAgICB9KTtcbiAgfSwgW2Jsb2NrLCBkYXRhXSk7XG4gIGNvbnN0IHJlbmRlckZvcm11bGFWYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBGb3JtdWxhUHJvcGVydHkoKSB7XG4gICAgbGV0IGNvbnRlbnQyO1xuICAgIHRyeSB7XG4gICAgICBsZXQgY29udGVudDMgPSBldmFsRm9ybXVsYShzY2hlbWEuZm9ybXVsYSwge1xuICAgICAgICBzY2hlbWE6IGNvbGxlY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb24uc2NoZW1hLFxuICAgICAgICBwcm9wZXJ0aWVzOiBibG9jayA9PSBudWxsID8gdm9pZCAwIDogYmxvY2sucHJvcGVydGllc1xuICAgICAgfSk7XG4gICAgICBpZiAoaXNOYU4oY29udGVudDMpKSB7XG4gICAgICB9XG4gICAgICBpZiAoY29udGVudDMgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgICAgIGNvbnRlbnQzID0gKDAsIGltcG9ydF9mb3JtYXQyLmRlZmF1bHQpKGNvbnRlbnQzLCBcIk1NTSBkLCBZWVkgaGg6bW0gYWFcIik7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb250ZW50MiA9IG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjb250ZW50MjtcbiAgfSwgW2Jsb2NrID09IG51bGwgPyB2b2lkIDAgOiBibG9jay5wcm9wZXJ0aWVzLCBjb2xsZWN0aW9uID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uLnNjaGVtYSwgc2NoZW1hXSk7XG4gIGNvbnN0IHJlbmRlclRpdGxlVmFsdWUgPSBSZWFjdDM4LnVzZU1lbW8oKCkgPT4gZnVuY3Rpb24gRm9ybXVsYVRpdGxlKCkge1xuICAgIGlmIChibG9jayAmJiBsaW5rVG9UaXRsZVBhZ2UpIHtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudHMuUGFnZUxpbmssIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi1wYWdlLWxpbmtcIiksXG4gICAgICAgIGhyZWY6IG1hcFBhZ2VVcmwoYmxvY2suaWQpXG4gICAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFBhZ2VUaXRsZSwge1xuICAgICAgICBibG9ja1xuICAgICAgfSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzguY3JlYXRlRWxlbWVudChUZXh0LCB7XG4gICAgICAgIHZhbHVlOiBkYXRhLFxuICAgICAgICBibG9ja1xuICAgICAgfSk7XG4gICAgfVxuICB9LCBbYmxvY2ssIGNvbXBvbmVudHMsIGRhdGEsIGxpbmtUb1RpdGxlUGFnZSwgbWFwUGFnZVVybF0pO1xuICBjb25zdCByZW5kZXJQZXJzb25WYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBQZXJzb25Qcm9wZXJ0eSgpIHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzguY3JlYXRlRWxlbWVudChUZXh0LCB7XG4gICAgICB2YWx1ZTogZGF0YSxcbiAgICAgIGJsb2NrXG4gICAgfSk7XG4gIH0sIFtibG9jaywgZGF0YV0pO1xuICBjb25zdCByZW5kZXJGaWxlVmFsdWUgPSBSZWFjdDM4LnVzZU1lbW8oKCkgPT4gZnVuY3Rpb24gRmlsZVByb3BlcnR5KCkge1xuICAgIGNvbnN0IGZpbGVzID0gZGF0YS5maWx0ZXIoKHYpID0+IHYubGVuZ3RoID09PSAyKS5tYXAoKGYpID0+IGYuZmxhdCgpLmZsYXQoKSk7XG4gICAgcmV0dXJuIGZpbGVzLm1hcCgoZmlsZSwgaSkgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0MzguY3JlYXRlRWxlbWVudChjb21wb25lbnRzLkxpbmssIHtcbiAgICAgIGtleTogaSxcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tcHJvcGVydHktZmlsZVwiLFxuICAgICAgaHJlZjogbWFwSW1hZ2VVcmwoZmlsZVsyXSwgYmxvY2spLFxuICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgcmVsOiBcIm5vcmVmZXJyZXIgbm9vcGVuZXJcIlxuICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM4LmNyZWF0ZUVsZW1lbnQoR3JhY2VmdWxJbWFnZSwge1xuICAgICAgYWx0OiBmaWxlWzBdLFxuICAgICAgc3JjOiBtYXBJbWFnZVVybChmaWxlWzJdLCBibG9jayksXG4gICAgICBsb2FkaW5nOiBcImxhenlcIlxuICAgIH0pKSk7XG4gIH0sIFtibG9jaywgY29tcG9uZW50cywgZGF0YSwgbWFwSW1hZ2VVcmxdKTtcbiAgY29uc3QgcmVuZGVyQ2hlY2tib3hWYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBDaGVja2JveFByb3BlcnR5KCkge1xuICAgIGNvbnN0IGlzQ2hlY2tlZCA9IGRhdGEgJiYgZGF0YVswXVswXSA9PT0gXCJZZXNcIjtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzguY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLXByb3BlcnR5LWNoZWNrYm94LWNvbnRhaW5lclwiXG4gICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzguY3JlYXRlRWxlbWVudChDaGVja2JveCwge1xuICAgICAgaXNDaGVja2VkLFxuICAgICAgYmxvY2tJZDogdm9pZCAwXG4gICAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM4LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tcHJvcGVydHktY2hlY2tib3gtdGV4dFwiXG4gICAgfSwgc2NoZW1hLm5hbWUpKTtcbiAgfSwgW2RhdGEsIHNjaGVtYV0pO1xuICBjb25zdCByZW5kZXJVcmxWYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBVcmxQcm9wZXJ0eSgpIHtcbiAgICBjb25zdCBkID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgaWYgKGlubGluZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChkWzBdWzBdKTtcbiAgICAgICAgZFswXVswXSA9IHVybC5ob3N0bmFtZS5yZXBsYWNlKC9ed3d3XFwuLywgXCJcIik7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM4LmNyZWF0ZUVsZW1lbnQoVGV4dCwge1xuICAgICAgdmFsdWU6IGQsXG4gICAgICBibG9jayxcbiAgICAgIGlubGluZSxcbiAgICAgIGxpbmtQcm9wczoge1xuICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCIsXG4gICAgICAgIHJlbDogXCJub3JlZmVycmVyIG5vb3BlbmVyXCJcbiAgICAgIH1cbiAgICB9KTtcbiAgfSwgW2Jsb2NrLCBkYXRhLCBpbmxpbmVdKTtcbiAgY29uc3QgcmVuZGVyRW1haWxWYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBFbWFpbFByb3BlcnR5KCkge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFRleHQsIHtcbiAgICAgIHZhbHVlOiBkYXRhLFxuICAgICAgbGlua1Byb3RvY29sOiBcIm1haWx0b1wiLFxuICAgICAgYmxvY2tcbiAgICB9KTtcbiAgfSwgW2Jsb2NrLCBkYXRhXSk7XG4gIGNvbnN0IHJlbmRlclBob25lTnVtYmVyVmFsdWUgPSBSZWFjdDM4LnVzZU1lbW8oKCkgPT4gZnVuY3Rpb24gUGhvbmVOdW1iZXJQcm9wZXJ0eSgpIHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0MzguY3JlYXRlRWxlbWVudChUZXh0LCB7XG4gICAgICB2YWx1ZTogZGF0YSxcbiAgICAgIGxpbmtQcm90b2NvbDogXCJ0ZWxcIixcbiAgICAgIGJsb2NrXG4gICAgfSk7XG4gIH0sIFtibG9jaywgZGF0YV0pO1xuICBjb25zdCByZW5kZXJOdW1iZXJWYWx1ZSA9IFJlYWN0MzgudXNlTWVtbygoKSA9PiBmdW5jdGlvbiBOdW1iZXJQcm9wZXJ0eSgpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHBhcnNlRmxvYXQoZGF0YVswXVswXSB8fCBcIjBcIik7XG4gICAgbGV0IG91dHB1dCA9IFwiXCI7XG4gICAgaWYgKGlzTmFOKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM4LmNyZWF0ZUVsZW1lbnQoVGV4dCwge1xuICAgICAgICB2YWx1ZTogZGF0YSxcbiAgICAgICAgYmxvY2tcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2l0Y2ggKHNjaGVtYS5udW1iZXJfZm9ybWF0KSB7XG4gICAgICAgIGNhc2UgXCJudW1iZXJfd2l0aF9jb21tYXNcIjpcbiAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoKSh2YWx1ZSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJwZXJjZW50XCI6XG4gICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgc3VmZml4OiBcIiVcIiB9KSh2YWx1ZSAqIDEwMCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJkb2xsYXJcIjpcbiAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiJFwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkodmFsdWUpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiZXVyb1wiOlxuICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHUyMEFDXCIsIHJvdW5kOiAyLCBwYWRSaWdodDogMiB9KSh2YWx1ZSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJwb3VuZFwiOlxuICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHhBM1wiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkodmFsdWUpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwieWVuXCI6XG4gICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlxceEE1XCIsIHJvdW5kOiAwIH0pKHZhbHVlKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInJ1cGVlXCI6XG4gICAgICAgICAgb3V0cHV0ID0gKDAsIGltcG9ydF9mb3JtYXRfbnVtYmVyLmRlZmF1bHQpKHsgcHJlZml4OiBcIlxcdTIwQjlcIiwgcm91bmQ6IDIsIHBhZFJpZ2h0OiAyIH0pKHZhbHVlKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIndvblwiOlxuICAgICAgICAgIG91dHB1dCA9ICgwLCBpbXBvcnRfZm9ybWF0X251bWJlci5kZWZhdWx0KSh7IHByZWZpeDogXCJcXHUyMEE5XCIsIHJvdW5kOiAwIH0pKHZhbHVlKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInl1YW5cIjpcbiAgICAgICAgICBvdXRwdXQgPSAoMCwgaW1wb3J0X2Zvcm1hdF9udW1iZXIuZGVmYXVsdCkoeyBwcmVmaXg6IFwiQ05cXHhBNVwiLCByb3VuZDogMiwgcGFkUmlnaHQ6IDIgfSkodmFsdWUpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFRleHQsIHtcbiAgICAgICAgICAgIHZhbHVlOiBkYXRhLFxuICAgICAgICAgICAgYmxvY2tcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFRleHQsIHtcbiAgICAgICAgdmFsdWU6IFtbb3V0cHV0XV0sXG4gICAgICAgIGJsb2NrXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtibG9jaywgZGF0YSwgc2NoZW1hXSk7XG4gIGNvbnN0IHJlbmRlckNyZWF0ZWRUaW1lVmFsdWUgPSBSZWFjdDM4LnVzZU1lbW8oKCkgPT4gZnVuY3Rpb24gQ3JlYXRlZFRpbWVQcm9wZXJ0eSgpIHtcbiAgICByZXR1cm4gKDAsIGltcG9ydF9mb3JtYXQyLmRlZmF1bHQpKG5ldyBEYXRlKGJsb2NrID09IG51bGwgPyB2b2lkIDAgOiBibG9jay5jcmVhdGVkX3RpbWUpLCBcIk1NTSBkLCBZWVkgaGg6bW0gYWFcIik7XG4gIH0sIFtibG9jayA9PSBudWxsID8gdm9pZCAwIDogYmxvY2suY3JlYXRlZF90aW1lXSk7XG4gIGNvbnN0IHJlbmRlckxhc3RFZGl0ZWRUaW1lVmFsdWUgPSBSZWFjdDM4LnVzZU1lbW8oKCkgPT4gZnVuY3Rpb24gTGFzdEVkaXRlZFRpbWVQcm9wZXJ0eSgpIHtcbiAgICByZXR1cm4gKDAsIGltcG9ydF9mb3JtYXQyLmRlZmF1bHQpKG5ldyBEYXRlKGJsb2NrID09IG51bGwgPyB2b2lkIDAgOiBibG9jay5sYXN0X2VkaXRlZF90aW1lKSwgXCJNTU0gZCwgWVlZIGhoOm1tIGFhXCIpO1xuICB9LCBbYmxvY2sgPT0gbnVsbCA/IHZvaWQgMCA6IGJsb2NrLmxhc3RfZWRpdGVkX3RpbWVdKTtcbiAgaWYgKCFzY2hlbWEpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBsZXQgY29udGVudCA9IG51bGw7XG4gIGlmIChkYXRhIHx8IHNjaGVtYS50eXBlID09PSBcImNoZWNrYm94XCIgfHwgc2NoZW1hLnR5cGUgPT09IFwidGl0bGVcIiB8fCBzY2hlbWEudHlwZSA9PT0gXCJmb3JtdWxhXCIgfHwgc2NoZW1hLnR5cGUgPT09IFwiY3JlYXRlZF9ieVwiIHx8IHNjaGVtYS50eXBlID09PSBcImxhc3RfZWRpdGVkX2J5XCIgfHwgc2NoZW1hLnR5cGUgPT09IFwiY3JlYXRlZF90aW1lXCIgfHwgc2NoZW1hLnR5cGUgPT09IFwibGFzdF9lZGl0ZWRfdGltZVwiKSB7XG4gICAgc3dpdGNoIChzY2hlbWEudHlwZSkge1xuICAgICAgY2FzZSBcInJlbGF0aW9uXCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5UmVsYXRpb25WYWx1ZShwcm9wcywgcmVuZGVyUmVsYXRpb25WYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImZvcm11bGFcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlGb3JtdWxhVmFsdWUocHJvcHMsIHJlbmRlckZvcm11bGFWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInRpdGxlXCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5VGl0bGVWYWx1ZShwcm9wcywgcmVuZGVyVGl0bGVWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInNlbGVjdFwiOlxuICAgICAgY2FzZSBcIm11bHRpX3NlbGVjdFwiOiB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IChkYXRhWzBdWzBdIHx8IFwiXCIpLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgY29udGVudCA9IHZhbHVlcy5tYXAoKHZhbHVlLCBpbmRleCkgPT4ge1xuICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICBjb25zdCBvcHRpb24gPSAoX2EgPSBzY2hlbWEub3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmZpbmQoKG9wdGlvbjIpID0+IHZhbHVlID09PSBvcHRpb24yLnZhbHVlKTtcbiAgICAgICAgICBjb25zdCBjb2xvciA9IG9wdGlvbiA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9uLmNvbG9yO1xuICAgICAgICAgIHJldHVybiBjb21wb25lbnRzLnByb3BlcnR5U2VsZWN0VmFsdWUoX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMpLCB7XG4gICAgICAgICAgICBrZXk6IGluZGV4LFxuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBvcHRpb24sXG4gICAgICAgICAgICBjb2xvclxuICAgICAgICAgIH0pLCAoKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgICAgIGtleTogaW5kZXgsXG4gICAgICAgICAgICBjbGFzc05hbWU6IGNzKGBub3Rpb24tcHJvcGVydHktJHtzY2hlbWEudHlwZX0taXRlbWAsIGNvbG9yICYmIGBub3Rpb24taXRlbS0ke2NvbG9yfWApXG4gICAgICAgICAgfSwgdmFsdWUpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSBcInBlcnNvblwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVBlcnNvblZhbHVlKHByb3BzLCByZW5kZXJQZXJzb25WYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImZpbGVcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlGaWxlVmFsdWUocHJvcHMsIHJlbmRlckZpbGVWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImNoZWNrYm94XCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5Q2hlY2tib3hWYWx1ZShwcm9wcywgcmVuZGVyQ2hlY2tib3hWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInVybFwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVVybFZhbHVlKHByb3BzLCByZW5kZXJVcmxWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImVtYWlsXCI6XG4gICAgICAgIGNvbnRlbnQgPSBjb21wb25lbnRzLnByb3BlcnR5RW1haWxWYWx1ZShwcm9wcywgcmVuZGVyRW1haWxWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInBob25lX251bWJlclwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eVBob25lTnVtYmVyVmFsdWUocHJvcHMsIHJlbmRlclBob25lTnVtYmVyVmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJudW1iZXJcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlOdW1iZXJWYWx1ZShwcm9wcywgcmVuZGVyTnVtYmVyVmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJjcmVhdGVkX3RpbWVcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlDcmVhdGVkVGltZVZhbHVlKHByb3BzLCByZW5kZXJDcmVhdGVkVGltZVZhbHVlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwibGFzdF9lZGl0ZWRfdGltZVwiOlxuICAgICAgICBjb250ZW50ID0gY29tcG9uZW50cy5wcm9wZXJ0eUxhc3RFZGl0ZWRUaW1lVmFsdWUocHJvcHMsIHJlbmRlckxhc3RFZGl0ZWRUaW1lVmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJjcmVhdGVkX2J5XCI6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImxhc3RfZWRpdGVkX2J5XCI6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInRleHRcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlUZXh0VmFsdWUocHJvcHMsIHJlbmRlclRleHRWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImRhdGVcIjpcbiAgICAgICAgY29udGVudCA9IGNvbXBvbmVudHMucHJvcGVydHlEYXRlVmFsdWUocHJvcHMsIHJlbmRlckRhdGVWYWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM4LmNyZWF0ZUVsZW1lbnQoVGV4dCwge1xuICAgICAgICAgIHZhbHVlOiBkYXRhLFxuICAgICAgICAgIGJsb2NrXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM4LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICBjbGFzc05hbWU6IGBub3Rpb24tcHJvcGVydHkgbm90aW9uLXByb3BlcnR5LSR7c2NoZW1hLnR5cGV9YFxuICB9LCBjb250ZW50KTtcbn07XG52YXIgUHJvcGVydHlJbXBsTWVtbyA9IFJlYWN0MzgubWVtbyhQcm9wZXJ0eUltcGwpO1xuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi1yb3cudHN4XG52YXIgQ29sbGVjdGlvblJvdyA9ICh7IGJsb2NrLCBwYWdlSGVhZGVyID0gZmFsc2UsIGNsYXNzTmFtZSB9KSA9PiB7XG4gIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgY29uc3QgeyByZWNvcmRNYXAgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3QgY29sbGVjdGlvbklkID0gYmxvY2sucGFyZW50X2lkO1xuICBjb25zdCBjb2xsZWN0aW9uID0gKF9hID0gcmVjb3JkTWFwLmNvbGxlY3Rpb25bY29sbGVjdGlvbklkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICBjb25zdCBzY2hlbWFzID0gY29sbGVjdGlvbiA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvbi5zY2hlbWE7XG4gIGlmICghY29sbGVjdGlvbiB8fCAhc2NoZW1hcykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGxldCBwcm9wZXJ0eUlkcyA9IE9iamVjdC5rZXlzKHNjaGVtYXMpLmZpbHRlcigoaWQpID0+IGlkICE9PSBcInRpdGxlXCIpO1xuICBpZiAoKF9iID0gY29sbGVjdGlvbi5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYi5wcm9wZXJ0eV92aXNpYmlsaXR5KSB7XG4gICAgcHJvcGVydHlJZHMgPSBwcm9wZXJ0eUlkcy5maWx0ZXIoKGlkKSA9PiB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuICgoX2EyID0gY29sbGVjdGlvbi5mb3JtYXQucHJvcGVydHlfdmlzaWJpbGl0eS5maW5kKCh7IHByb3BlcnR5IH0pID0+IHByb3BlcnR5ID09PSBpZCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIudmlzaWJpbGl0eSkgIT09IFwiaGlkZVwiO1xuICAgIH0pO1xuICB9XG4gIGlmICgoX2MgPSBjb2xsZWN0aW9uLmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLmNvbGxlY3Rpb25fcGFnZV9wcm9wZXJ0aWVzKSB7XG4gICAgY29uc3QgaWRUb0luZGV4ID0gKF9kID0gY29sbGVjdGlvbi5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfZC5jb2xsZWN0aW9uX3BhZ2VfcHJvcGVydGllcy5yZWR1Y2UoKGFjYywgcCwgaSkgPT4gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgYWNjKSwge1xuICAgICAgW3AucHJvcGVydHldOiBpXG4gICAgfSksIHt9KTtcbiAgICBwcm9wZXJ0eUlkcy5zb3J0KChhLCBiKSA9PiBpZFRvSW5kZXhbYV0gLSBpZFRvSW5kZXhbYl0pO1xuICB9IGVsc2Uge1xuICAgIHByb3BlcnR5SWRzLnNvcnQoKGEsIGIpID0+IHNjaGVtYXNbYV0ubmFtZS5sb2NhbGVDb21wYXJlKHNjaGVtYXNbYl0ubmFtZSkpO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWNvbGxlY3Rpb24tcm93XCIsIGNsYXNzTmFtZSlcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzkuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLXJvdy1ib2R5XCJcbiAgfSwgcHJvcGVydHlJZHMubWFwKChwcm9wZXJ0eUlkKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICBjb25zdCBzY2hlbWEgPSBzY2hlbWFzW3Byb3BlcnR5SWRdO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QzOS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1yb3ctcHJvcGVydHlcIixcbiAgICAgIGtleTogcHJvcGVydHlJZFxuICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDM5LmNyZWF0ZUVsZW1lbnQoQ29sbGVjdGlvbkNvbHVtblRpdGxlLCB7XG4gICAgICBzY2hlbWFcbiAgICB9KSwgLyogQF9fUFVSRV9fICovIFJlYWN0MzkuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tcm93LXZhbHVlXCJcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3QzOS5jcmVhdGVFbGVtZW50KFByb3BlcnR5LCB7XG4gICAgICBzY2hlbWEsXG4gICAgICBkYXRhOiAoX2EyID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMltwcm9wZXJ0eUlkXSxcbiAgICAgIHByb3BlcnR5SWQsXG4gICAgICBibG9jayxcbiAgICAgIGNvbGxlY3Rpb24sXG4gICAgICBwYWdlSGVhZGVyXG4gICAgfSkpKTtcbiAgfSkpKTtcbn07XG5cbi8vIHNyYy9pY29ucy9jb2xsZWN0aW9uLXZpZXctdGFibGUudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDQwIGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnQ29sbGVjdGlvblZpZXdUYWJsZShwcm9wcykge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NDAuY3JlYXRlRWxlbWVudChcInN2Z1wiLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgdmlld0JveDogXCIwIDAgMTQgMTRcIlxuICB9LCBwcm9wcyksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQwLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk0yIDBoMTBhMiAyIDAgMDEyIDJ2MTBhMiAyIDAgMDEtMiAySDJhMiAyIDAgMDEtMi0yVjJhMiAyIDAgMDEyLTJ6bTMuNzUgNS42N3YyLjY2aDYuNzVWNS42N0g1Ljc1em0wIDQuMTd2Mi42Nmg1Ljc1YTEgMSAwIDAwMS0xVjkuODRINS43NXpNMS41IDUuNjd2Mi42NmgyLjc1VjUuNjdIMS41em0wIDQuMTd2MS42NmExIDEgMCAwMDEgMWgxLjc1VjkuODRIMS41em0xLTguMzRhMSAxIDAgMDAtMSAxdjEuNjZoMi43NVYxLjVIMi41em0zLjI1IDB2Mi42Nmg2Ljc1VjIuNWExIDEgMCAwMC0xLTFINS43NXpcIlxuICB9KSk7XG59XG52YXIgY29sbGVjdGlvbl92aWV3X3RhYmxlX2RlZmF1bHQgPSBTdmdDb2xsZWN0aW9uVmlld1RhYmxlO1xuXG4vLyBzcmMvaWNvbnMvY29sbGVjdGlvbi12aWV3LWJvYXJkLnRzeFxuaW1wb3J0ICogYXMgUmVhY3Q0MSBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIFN2Z0NvbGxlY3Rpb25WaWV3Qm9hcmQocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQxLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0MS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTIgMS41SDJhLjUuNSAwIDAwLS41LjV2MTBhLjUuNSAwIDAwLjUuNWgxMGEuNS41IDAgMDAuNS0uNVYyYS41LjUgMCAwMC0uNS0uNXpNMiAwaDEwYTIgMiAwIDAxMiAydjEwYTIgMiAwIDAxLTIgMkgyYTIgMiAwIDAxLTItMlYyYTIgMiAwIDAxMi0yem0xIDNoMnY2SDNWM3ptMyAwaDJ2OEg2VjN6bTMgMGgydjRIOVYzelwiXG4gIH0pKTtcbn1cbnZhciBjb2xsZWN0aW9uX3ZpZXdfYm9hcmRfZGVmYXVsdCA9IFN2Z0NvbGxlY3Rpb25WaWV3Qm9hcmQ7XG5cbi8vIHNyYy9pY29ucy9jb2xsZWN0aW9uLXZpZXctZ2FsbGVyeS50c3hcbmltcG9ydCAqIGFzIFJlYWN0NDIgZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiBTdmdDb2xsZWN0aW9uVmlld0dhbGxlcnkocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQyLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Mi5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTIgMS41SDJhLjUuNSAwIDAwLS41LjV2MTBhLjUuNSAwIDAwLjUuNWgxMGEuNS41IDAgMDAuNS0uNVYyYS41LjUgMCAwMC0uNS0uNXpNMiAwaDEwYTIgMiAwIDAxMiAydjEwYTIgMiAwIDAxLTIgMkgyYTIgMiAwIDAxLTItMlYyYTIgMiAwIDAxMi0yem0xIDNoMy41djMuNUgzVjN6bTQuNSAwSDExdjMuNUg3LjVWM3pNMyA3LjVoMy41VjExSDNWNy41em00LjUgMEgxMVYxMUg3LjVWNy41elwiXG4gIH0pKTtcbn1cbnZhciBjb2xsZWN0aW9uX3ZpZXdfZ2FsbGVyeV9kZWZhdWx0ID0gU3ZnQ29sbGVjdGlvblZpZXdHYWxsZXJ5O1xuXG4vLyBzcmMvaWNvbnMvY29sbGVjdGlvbi12aWV3LWxpc3QudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDQzIGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gU3ZnQ29sbGVjdGlvblZpZXdMaXN0KHByb3BzKSB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0My5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICB2aWV3Qm94OiBcIjAgMCAxNCAxNFwiXG4gIH0sIHByb3BzKSwgLyogQF9fUFVSRV9fICovIFJlYWN0NDMuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTEyIDEuNUgyYS41LjUgMCAwMC0uNS41djEwYS41LjUgMCAwMC41LjVoMTBhLjUuNSAwIDAwLjUtLjVWMmEuNS41IDAgMDAtLjUtLjV6TTIgMGgxMGEyIDIgMCAwMTIgMnYxMGEyIDIgMCAwMS0yIDJIMmEyIDIgMCAwMS0yLTJWMmEyIDIgMCAwMTItMnptMSAzaDZ2MS41SDNWM3ptMCAyLjVoOFY3SDNWNS41ek0zIDhoNHYxLjVIM1Y4elwiXG4gIH0pKTtcbn1cbnZhciBjb2xsZWN0aW9uX3ZpZXdfbGlzdF9kZWZhdWx0ID0gU3ZnQ29sbGVjdGlvblZpZXdMaXN0O1xuXG4vLyBzcmMvaWNvbnMvY29sbGVjdGlvbi12aWV3LWNhbGVuZGFyLnRzeFxuaW1wb3J0ICogYXMgUmVhY3Q0NCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIFN2Z0NvbGxlY3Rpb25WaWV3Q2FsZW5kYXIocHJvcHMpIHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIHZpZXdCb3g6IFwiMCAwIDE0IDE0XCJcbiAgfSwgcHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0NC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMi41NjQgNC4wMDRjLS41ODYgMC0uNzEuMDI0LS44MzMuMDlhLjMxOS4zMTkgMCAwMC0uMTQxLjE0Yy0uMDY2LjEyNC0uMDkuMjQ3LS4wOS44MzR2Ni4zNjhjMCAuNTg2LjAyNC43MS4wOS44MzNhLjMxOS4zMTkgMCAwMC4xNC4xNDFjLjEyNC4wNjYuMjQ4LjA5LjgzNC4wOWg4Ljg3MmMuNTg2IDAgLjcxLS4wMjQuODMzLS4wOWEuMzE5LjMxOSAwIDAwLjE0MS0uMTRjLjA2Ni0uMTI0LjA5LS4yNDguMDktLjgzNFY1LjA2OGMwLS41ODctLjAyNC0uNzEtLjA5LS44MzRhLjMxOS4zMTkgMCAwMC0uMTQtLjE0Yy0uMTI0LS4wNjYtLjI0OC0uMDktLjgzNC0uMDlIMi41NjR6bTAtNC4wMDRoOC44NzJjLjg5MiAwIDEuMjE1LjA5MyAxLjU0LjI2Ny4zMjcuMTc0LjU4My40My43NTcuNzU2LjE3NC4zMjYuMjY3LjY1LjI2NyAxLjU0djguODczYzAgLjg5Mi0uMDkzIDEuMjE1LS4yNjcgMS41NC0uMTc0LjMyNy0uNDMuNTgzLS43NTYuNzU3LS4zMjYuMTc0LS42NS4yNjctMS41NC4yNjdIMi41NjNjLS44OTIgMC0xLjIxNS0uMDkzLTEuNTQtLjI2N2ExLjgxNyAxLjgxNyAwIDAxLS43NTctLjc1NkMuMDkzIDEyLjY1IDAgMTIuMzI3IDAgMTEuNDM3VjIuNTYzYzAtLjg5Mi4wOTMtMS4yMTUuMjY3LTEuNTQuMTc0LS4zMjcuNDMtLjU4My43NTYtLjc1N0MxLjM1LjA5MyAxLjY3MyAwIDIuNTYzIDB6bTQuMDQ0IDcuODhjLjE3OS4xMS4zMTguMjU2LjQxOC40MzYuMS4xOC4xNDguMzk0LjE0OC42NCAwIC4zMDQtLjA4LjU5Ny0uMjM4Ljg3Ni0uMTYuMjgtLjM5Mi40OTgtLjY5Mi42NS0uMjk5LjE1LS42ODUuMjI0LTEuMTYuMjI0LS40NiAwLS44MjctLjA1NS0xLjEtLjE2NmExLjY4NyAxLjY4NyAwIDAxLS42OC0uNDkyIDIuMjI3IDIuMjI3IDAgMDEtLjQwNC0uODAybC4wODMtLjEyNyAxLjM3LS4xODIuMTEyLjA4Yy4wNS4yNTguMTI2LjQzMS4yMjEuNTJhLjUwNy41MDcgMCAwMC4zNjQuMTMzLjQ5NS40OTUgMCAwMC4zODYtLjE2OWMuMTA1LS4xMTUuMTU4LS4yNy4xNTgtLjQ3MiAwLS4yMDUtLjA1MS0uMzU4LS4xNS0uNDYzYS41MjcuNTI3IDAgMDAtLjQwNy0uMTU3IDEuNjUgMS42NSAwIDAwLS40MTcuMDc3bC0uMTI3LS4xMDQuMDctLjk4LjExNS0uMDkxYy4wNzIuMDEuMTI3LjAxNS4xNjQuMDE1LjE1NCAwIC4yOC0uMDQ3LjM4LS4xNDQuMS0uMDk2LjE1LS4yMDUuMTUtLjMzNWEuMzg4LjM4OCAwIDAwLS4xMDYtLjI5Yy0uMDctLjA3LS4xNjgtLjEwNS0uMy0uMTA1YS40NDQuNDQ0IDAgMDAtLjMyNC4xMThjLS4wODMuMDgtLjE0My4yMzItLjE3Ni40NTdsLS4xMTcuMDg0LTEuMjk3LS4yMzMtLjA3OS0uMTIzYy4xMTQtLjQzNS4zMzQtLjc3Mi42Ni0xLjAwNi4zMjYtLjIzNC43OC0uMzQ5IDEuMzYtLjM0OS42NjYgMCAxLjE1My4xMjYgMS40NjIuMzg0LjMxLjI1OS40NjcuNTg5LjQ2Ny45ODIgMCAuMjMzLS4wNjQuNDQ2LS4xOTIuNjM2YTEuNDMgMS40MyAwIDAxLS4zNy4zNjVjLjEuMDM0LjE4Mi4wNzIuMjQ4LjExM3ptMS43NDctLjE0NWE1LjE4NiA1LjE4NiAwIDAxLS44MDYuMzFsLS4xMjktLjA5N1Y2LjgyNGwuMDctLjA5NmMuNDU1LS4xNDcuODA3LS4zMjIgMS4wNTUtLjUyNC4yNDYtLjIwMi40MzktLjQ1LjU3OS0uNzQ3bC4wOS0uMDU3aDEuMTM1bC4xLjF2NS4wMjFsLS4xLjFIOC45NjFsLS4xLS4xVjcuNDI4YTQuMDUzIDQuMDUzIDAgMDEtLjUwNi4zMDd6XCJcbiAgfSkpO1xufVxudmFyIGNvbGxlY3Rpb25fdmlld19jYWxlbmRhcl9kZWZhdWx0ID0gU3ZnQ29sbGVjdGlvblZpZXdDYWxlbmRhcjtcblxuLy8gc3JjL2ljb25zL2NvbGxlY3Rpb24tdmlldy1pY29uLnRzeFxudmFyIGljb25NYXAyID0ge1xuICB0YWJsZTogY29sbGVjdGlvbl92aWV3X3RhYmxlX2RlZmF1bHQsXG4gIGJvYXJkOiBjb2xsZWN0aW9uX3ZpZXdfYm9hcmRfZGVmYXVsdCxcbiAgZ2FsbGVyeTogY29sbGVjdGlvbl92aWV3X2dhbGxlcnlfZGVmYXVsdCxcbiAgbGlzdDogY29sbGVjdGlvbl92aWV3X2xpc3RfZGVmYXVsdCxcbiAgY2FsZW5kYXI6IGNvbGxlY3Rpb25fdmlld19jYWxlbmRhcl9kZWZhdWx0XG59O1xudmFyIENvbGxlY3Rpb25WaWV3SWNvbiA9IChfYSkgPT4ge1xuICB2YXIgX2IgPSBfYSwge1xuICAgIHR5cGVcbiAgfSA9IF9iLCByZXN0ID0gX19vYmpSZXN0KF9iLCBbXG4gICAgXCJ0eXBlXCJcbiAgXSk7XG4gIGNvbnN0IGljb24gPSBpY29uTWFwMlt0eXBlXTtcbiAgaWYgKCFpY29uKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIGljb24ocmVzdCk7XG59O1xuXG4vLyBzcmMvaWNvbnMvY2hldnJvbi1kb3duLWljb24udHN4XG5pbXBvcnQgKiBhcyBSZWFjdDQ1IGZyb20gXCJyZWFjdFwiO1xudmFyIENoZXZyb25Eb3duSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBfYSA9IHByb3BzLCB7IGNsYXNzTmFtZSB9ID0gX2EsIHJlc3QgPSBfX29ialJlc3QoX2EsIFtcImNsYXNzTmFtZVwiXSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0NS5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe1xuICAgIGNsYXNzTmFtZVxuICB9LCByZXN0KSwge1xuICAgIHZpZXdCb3g6IFwiMCAwIDMwIDMwXCIsXG4gICAgd2lkdGg6IFwiMTBcIlxuICB9KSwgLyogQF9fUFVSRV9fICovIFJlYWN0NDUuY3JlYXRlRWxlbWVudChcInBvbHlnb25cIiwge1xuICAgIHBvaW50czogXCIxNSwxNy40IDQuOCw3IDIsOS44IDE1LDIzIDI4LDkuOCAyNS4yLDcgXCJcbiAgfSkpO1xufTtcblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tdmlldy50c3hcbmltcG9ydCAqIGFzIFJlYWN0NTMgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLXZpZXctdGFibGUudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDQ3IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi1ncm91cC50c3hcbmltcG9ydCAqIGFzIFJlYWN0NDYgZnJvbSBcInJlYWN0XCI7XG52YXIgQ29sbGVjdGlvbkdyb3VwID0gKF9hKSA9PiB7XG4gIHZhciBfYiA9IF9hLCB7XG4gICAgY29sbGVjdGlvblZpZXdDb21wb25lbnQ6IENvbGxlY3Rpb25WaWV3Q29tcG9uZW50LFxuICAgIGNvbGxlY3Rpb24sXG4gICAgY29sbGVjdGlvbkdyb3VwLFxuICAgIHNjaGVtYSxcbiAgICB2YWx1ZSxcbiAgICBoaWRkZW4sXG4gICAgc3VtbWFyeVByb3BzLFxuICAgIGRldGFpbHNQcm9wc1xuICB9ID0gX2IsIHJlc3QgPSBfX29ialJlc3QoX2IsIFtcbiAgICBcImNvbGxlY3Rpb25WaWV3Q29tcG9uZW50XCIsXG4gICAgXCJjb2xsZWN0aW9uXCIsXG4gICAgXCJjb2xsZWN0aW9uR3JvdXBcIixcbiAgICBcInNjaGVtYVwiLFxuICAgIFwidmFsdWVcIixcbiAgICBcImhpZGRlblwiLFxuICAgIFwic3VtbWFyeVByb3BzXCIsXG4gICAgXCJkZXRhaWxzUHJvcHNcIlxuICBdKTtcbiAgaWYgKGhpZGRlbilcbiAgICByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ2LmNyZWF0ZUVsZW1lbnQoXCJkZXRhaWxzXCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICBvcGVuOiB0cnVlLFxuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1ncm91cFwiXG4gIH0sIGRldGFpbHNQcm9wcyksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ2LmNyZWF0ZUVsZW1lbnQoXCJzdW1tYXJ5XCIsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tZ3JvdXAtdGl0bGVcIlxuICB9LCBzdW1tYXJ5UHJvcHMpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ni5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ2LmNyZWF0ZUVsZW1lbnQoUHJvcGVydHksIHtcbiAgICBzY2hlbWEsXG4gICAgZGF0YTogW1t2YWx1ZV1dLFxuICAgIGNvbGxlY3Rpb25cbiAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ2LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWJvYXJkLXRoLWNvdW50XCJcbiAgfSwgY29sbGVjdGlvbkdyb3VwID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uR3JvdXAudG90YWwpKSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ2LmNyZWF0ZUVsZW1lbnQoQ29sbGVjdGlvblZpZXdDb21wb25lbnQsIF9fc3ByZWFkVmFsdWVzKHtcbiAgICBjb2xsZWN0aW9uLFxuICAgIGNvbGxlY3Rpb25Hcm91cFxuICB9LCByZXN0KSkpO1xufTtcblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tdXRpbHMudHNcbnZhciBpbXBvcnRfZm9ybWF0MyA9IF9fdG9FU00ocmVxdWlyZV9mb3JtYXQoKSwgMSk7XG5mdW5jdGlvbiBnZXRDb2xsZWN0aW9uR3JvdXBzKGNvbGxlY3Rpb24sIGNvbGxlY3Rpb25WaWV3LCBjb2xsZWN0aW9uRGF0YSwgLi4ucmVzdCkge1xuICB2YXIgX2E7XG4gIGNvbnN0IGVsZW1zID0gKChfYSA9IGNvbGxlY3Rpb25WaWV3ID09IG51bGwgPyB2b2lkIDAgOiBjb2xsZWN0aW9uVmlldy5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5jb2xsZWN0aW9uX2dyb3VwcykgfHwgW107XG4gIHJldHVybiBlbGVtcyA9PSBudWxsID8gdm9pZCAwIDogZWxlbXMubWFwKCh7IHByb3BlcnR5LCBoaWRkZW4sIHZhbHVlOiB7IHZhbHVlLCB0eXBlIH0gfSkgPT4ge1xuICAgIHZhciBfYTIsIF9iO1xuICAgIGNvbnN0IGlzVW5jYXRlZ29yaXplZFZhbHVlID0gdHlwZW9mIHZhbHVlID09PSBcInVuZGVmaW5lZFwiO1xuICAgIGNvbnN0IGlzRGF0ZVZhbHVlID0gdmFsdWUgPT0gbnVsbCA/IHZvaWQgMCA6IHZhbHVlLnJhbmdlO1xuICAgIGNvbnN0IHF1ZXJ5TGFiZWwgPSBpc1VuY2F0ZWdvcml6ZWRWYWx1ZSA/IFwidW5jYXRlZ29yaXplZFwiIDogaXNEYXRlVmFsdWUgPyAoKF9hMiA9IHZhbHVlLnJhbmdlKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnN0YXJ0X2RhdGUpIHx8ICgoX2IgPSB2YWx1ZS5yYW5nZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmVuZF9kYXRlKSA6ICh2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUudmFsdWUpIHx8IHZhbHVlO1xuICAgIGNvbnN0IGNvbGxlY3Rpb25Hcm91cCA9IGNvbGxlY3Rpb25EYXRhW2ByZXN1bHRzOiR7dHlwZX06JHtxdWVyeUxhYmVsfWBdO1xuICAgIGxldCBxdWVyeVZhbHVlID0gIWlzVW5jYXRlZ29yaXplZFZhbHVlICYmIChpc0RhdGVWYWx1ZSB8fCAodmFsdWUgPT0gbnVsbCA/IHZvaWQgMCA6IHZhbHVlLnZhbHVlKSB8fCB2YWx1ZSk7XG4gICAgbGV0IHNjaGVtYSA9IGNvbGxlY3Rpb24uc2NoZW1hW3Byb3BlcnR5XTtcbiAgICBpZiAodHlwZSA9PT0gXCJjaGVja2JveFwiICYmIHZhbHVlKSB7XG4gICAgICBxdWVyeVZhbHVlID0gXCJZZXNcIjtcbiAgICB9XG4gICAgaWYgKGlzRGF0ZVZhbHVlKSB7XG4gICAgICBzY2hlbWEgPSB7XG4gICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgfTtcbiAgICAgIHF1ZXJ5VmFsdWUgPSAoMCwgaW1wb3J0X2Zvcm1hdDMuZGVmYXVsdCkobmV3IERhdGUocXVlcnlMYWJlbCksIFwiTU1NIGQsIFlZWSBoaDptbSBhYVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgIGNvbGxlY3Rpb25Hcm91cCxcbiAgICAgIHNjaGVtYSxcbiAgICAgIHZhbHVlOiBxdWVyeVZhbHVlIHx8IFwiTm8gZGVzY3JpcHRpb25cIixcbiAgICAgIGhpZGRlbixcbiAgICAgIGNvbGxlY3Rpb24sXG4gICAgICBjb2xsZWN0aW9uVmlldyxcbiAgICAgIGNvbGxlY3Rpb25EYXRhLFxuICAgICAgYmxvY2tJZHM6IGNvbGxlY3Rpb25Hcm91cCA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvbkdyb3VwLmJsb2NrSWRzXG4gICAgfSwgcmVzdCk7XG4gIH0pO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi12aWV3LXRhYmxlLnRzeFxudmFyIGRlZmF1bHRCbG9ja0lkcyA9IFtdO1xudmFyIENvbGxlY3Rpb25WaWV3VGFibGUgPSAoe1xuICBjb2xsZWN0aW9uLFxuICBjb2xsZWN0aW9uVmlldyxcbiAgY29sbGVjdGlvbkRhdGEsXG4gIHBhZGRpbmcsXG4gIHdpZHRoXG59KSA9PiB7XG4gIHZhciBfYSwgX2IsIF9jO1xuICBjb25zdCBpc0dyb3VwZWRDb2xsZWN0aW9uID0gKF9hID0gY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNvbGxlY3Rpb25fZ3JvdXBfYnk7XG4gIGlmIChpc0dyb3VwZWRDb2xsZWN0aW9uKSB7XG4gICAgY29uc3QgY29sbGVjdGlvbkdyb3VwcyA9IGdldENvbGxlY3Rpb25Hcm91cHMoY29sbGVjdGlvbiwgY29sbGVjdGlvblZpZXcsIGNvbGxlY3Rpb25EYXRhLCBwYWRkaW5nLCB3aWR0aCk7XG4gICAgcmV0dXJuIGNvbGxlY3Rpb25Hcm91cHMubWFwKChncm91cCwgaW5kZXgpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ3LmNyZWF0ZUVsZW1lbnQoQ29sbGVjdGlvbkdyb3VwLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgIGtleTogaW5kZXhcbiAgICB9LCBncm91cCksIHtcbiAgICAgIGNvbGxlY3Rpb25WaWV3Q29tcG9uZW50OiAocHJvcHMpID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ3LmNyZWF0ZUVsZW1lbnQoVGFibGUsIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzKSwge1xuICAgICAgICBwYWRkaW5nLFxuICAgICAgICB3aWR0aFxuICAgICAgfSkpLFxuICAgICAgc3VtbWFyeVByb3BzOiB7XG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgcGFkZGluZ0xlZnQ6IHBhZGRpbmcsXG4gICAgICAgICAgcGFkZGluZ1JpZ2h0OiBwYWRkaW5nXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KSkpO1xuICB9XG4gIGNvbnN0IGJsb2NrSWRzID0gKChfYyA9IChfYiA9IGNvbGxlY3Rpb25EYXRhW1wiY29sbGVjdGlvbl9ncm91cF9yZXN1bHRzXCJdKSA9PSBudWxsID8gdm9pZCAwIDogX2IuYmxvY2tJZHMpICE9IG51bGwgPyBfYyA6IGNvbGxlY3Rpb25EYXRhLmJsb2NrSWRzKSB8fCBkZWZhdWx0QmxvY2tJZHM7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFRhYmxlLCB7XG4gICAgYmxvY2tJZHMsXG4gICAgY29sbGVjdGlvbixcbiAgICBjb2xsZWN0aW9uVmlldyxcbiAgICBwYWRkaW5nLFxuICAgIHdpZHRoXG4gIH0pO1xufTtcbmZ1bmN0aW9uIFRhYmxlKHsgYmxvY2tJZHMgPSBbXSwgY29sbGVjdGlvbiwgY29sbGVjdGlvblZpZXcsIHdpZHRoLCBwYWRkaW5nIH0pIHtcbiAgdmFyIF9hO1xuICBjb25zdCB7IHJlY29yZE1hcCwgbGlua1RhYmxlVGl0bGVQcm9wZXJ0aWVzIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGNvbnN0IHRhYmxlU3R5bGUgPSBSZWFjdDQ3LnVzZU1lbW8oKCkgPT4gKHtcbiAgICB3aWR0aCxcbiAgICBtYXhXaWR0aDogd2lkdGhcbiAgfSksIFt3aWR0aF0pO1xuICBjb25zdCB0YWJsZVZpZXdTdHlsZSA9IFJlYWN0NDcudXNlTWVtbygoKSA9PiAoe1xuICAgIHBhZGRpbmdMZWZ0OiBwYWRkaW5nLFxuICAgIHBhZGRpbmdSaWdodDogcGFkZGluZ1xuICB9KSwgW3BhZGRpbmddKTtcbiAgbGV0IHByb3BlcnRpZXMgPSBbXTtcbiAgaWYgKChfYSA9IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnRhYmxlX3Byb3BlcnRpZXMpIHtcbiAgICBwcm9wZXJ0aWVzID0gY29sbGVjdGlvblZpZXcuZm9ybWF0LnRhYmxlX3Byb3BlcnRpZXMuZmlsdGVyKChwKSA9PiBwLnZpc2libGUgJiYgY29sbGVjdGlvbi5zY2hlbWFbcC5wcm9wZXJ0eV0pO1xuICB9IGVsc2Uge1xuICAgIHByb3BlcnRpZXMgPSBbeyBwcm9wZXJ0eTogXCJ0aXRsZVwiIH1dLmNvbmNhdChPYmplY3Qua2V5cyhjb2xsZWN0aW9uLnNjaGVtYSkuZmlsdGVyKChwKSA9PiBwICE9PSBcInRpdGxlXCIpLm1hcCgocHJvcGVydHkpID0+ICh7IHByb3BlcnR5IH0pKSk7XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ3LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGVcIixcbiAgICBzdHlsZTogdGFibGVTdHlsZVxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLXRhYmxlLXZpZXdcIixcbiAgICBzdHlsZTogdGFibGVWaWV3U3R5bGVcbiAgfSwgISFwcm9wZXJ0aWVzLmxlbmd0aCAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFJlYWN0NDcuRnJhZ21lbnQsIG51bGwsIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ3LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGUtaGVhZGVyXCJcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NDcuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi10YWJsZS1oZWFkZXItaW5uZXJcIlxuICB9LCBwcm9wZXJ0aWVzLm1hcCgocCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgY29uc3Qgc2NoZW1hID0gKF9hMiA9IGNvbGxlY3Rpb24uc2NoZW1hKSA9PSBudWxsID8gdm9pZCAwIDogX2EyW3AucHJvcGVydHldO1xuICAgIGNvbnN0IGlzVGl0bGUgPSBwLnByb3BlcnR5ID09PSBcInRpdGxlXCI7XG4gICAgY29uc3Qgc3R5bGUgPSB7fTtcbiAgICBpZiAocC53aWR0aCkge1xuICAgICAgc3R5bGUud2lkdGggPSBwLndpZHRoO1xuICAgIH0gZWxzZSBpZiAoaXNUaXRsZSkge1xuICAgICAgc3R5bGUud2lkdGggPSAyODA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLndpZHRoID0gMjAwO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NDcuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLXRhYmxlLXRoXCIsXG4gICAgICBrZXk6IHAucHJvcGVydHlcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGUtdmlldy1oZWFkZXItY2VsbFwiLFxuICAgICAgc3R5bGVcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tdGFibGUtdmlldy1oZWFkZXItY2VsbC1pbm5lclwiXG4gICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NDcuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uQ29sdW1uVGl0bGUsIHtcbiAgICAgIHNjaGVtYVxuICAgIH0pKSkpO1xuICB9KSkpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLXRhYmxlLWhlYWRlci1wbGFjZWhvbGRlclwiXG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLXRhYmxlLWJvZHlcIlxuICB9LCBibG9ja0lkcyA9PSBudWxsID8gdm9pZCAwIDogYmxvY2tJZHMubWFwKChibG9ja0lkKSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLXRhYmxlLXJvd1wiLFxuICAgIGtleTogYmxvY2tJZFxuICB9LCBwcm9wZXJ0aWVzLm1hcCgocCkgPT4ge1xuICAgIHZhciBfYTIsIF9iLCBfYztcbiAgICBjb25zdCBzY2hlbWEgPSAoX2EyID0gY29sbGVjdGlvbi5zY2hlbWEpID09IG51bGwgPyB2b2lkIDAgOiBfYTJbcC5wcm9wZXJ0eV07XG4gICAgY29uc3QgYmxvY2sgPSAoX2IgPSByZWNvcmRNYXAuYmxvY2tbYmxvY2tJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfYi52YWx1ZTtcbiAgICBjb25zdCBkYXRhID0gKF9jID0gYmxvY2sgPT0gbnVsbCA/IHZvaWQgMCA6IGJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfY1twLnByb3BlcnR5XTtcbiAgICBjb25zdCBpc1RpdGxlID0gcC5wcm9wZXJ0eSA9PT0gXCJ0aXRsZVwiO1xuICAgIGNvbnN0IHN0eWxlID0ge307XG4gICAgaWYgKHAud2lkdGgpIHtcbiAgICAgIHN0eWxlLndpZHRoID0gcC53aWR0aDtcbiAgICB9IGVsc2UgaWYgKGlzVGl0bGUpIHtcbiAgICAgIHN0eWxlLndpZHRoID0gMjgwO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS53aWR0aCA9IDIwMDtcbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ3LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAga2V5OiBwLnByb3BlcnR5LFxuICAgICAgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi10YWJsZS1jZWxsXCIsIGBub3Rpb24tdGFibGUtY2VsbC0ke3NjaGVtYS50eXBlfWApLFxuICAgICAgc3R5bGVcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0Ny5jcmVhdGVFbGVtZW50KFByb3BlcnR5LCB7XG4gICAgICBzY2hlbWEsXG4gICAgICBkYXRhLFxuICAgICAgYmxvY2ssXG4gICAgICBjb2xsZWN0aW9uLFxuICAgICAgbGlua1RvVGl0bGVQYWdlOiBsaW5rVGFibGVUaXRsZVByb3BlcnRpZXNcbiAgICB9KSk7XG4gIH0pKSkpKSkpO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi12aWV3LWdhbGxlcnkudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDQ5IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi1jYXJkLnRzeFxuaW1wb3J0ICogYXMgUmVhY3Q0OCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdldFRleHRDb250ZW50IGFzIGdldFRleHRDb250ZW50MyB9IGZyb20gXCJub3Rpb24tdXRpbHNcIjtcbnZhciBDb2xsZWN0aW9uQ2FyZCA9IChfYSkgPT4ge1xuICB2YXIgX2IgPSBfYSwge1xuICAgIGNvbGxlY3Rpb24sXG4gICAgYmxvY2ssXG4gICAgY292ZXIsXG4gICAgY292ZXJTaXplLFxuICAgIGNvdmVyQXNwZWN0LFxuICAgIHByb3BlcnRpZXMsXG4gICAgY2xhc3NOYW1lXG4gIH0gPSBfYiwgcmVzdCA9IF9fb2JqUmVzdChfYiwgW1xuICAgIFwiY29sbGVjdGlvblwiLFxuICAgIFwiYmxvY2tcIixcbiAgICBcImNvdmVyXCIsXG4gICAgXCJjb3ZlclNpemVcIixcbiAgICBcImNvdmVyQXNwZWN0XCIsXG4gICAgXCJwcm9wZXJ0aWVzXCIsXG4gICAgXCJjbGFzc05hbWVcIlxuICBdKTtcbiAgdmFyIF9hMiwgX2IyLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaSwgX2osIF9rLCBfbCwgX207XG4gIGNvbnN0IGN0eDIgPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGNvbnN0IHsgY29tcG9uZW50cywgcmVjb3JkTWFwLCBtYXBQYWdlVXJsLCBtYXBJbWFnZVVybCB9ID0gY3R4MjtcbiAgbGV0IGNvdmVyQ29udGVudCA9IG51bGw7XG4gIGNvbnN0IHsgcGFnZV9jb3Zlcl9wb3NpdGlvbiA9IDAuNSB9ID0gYmxvY2suZm9ybWF0IHx8IHt9O1xuICBjb25zdCBjb3ZlclBvc2l0aW9uID0gKDEgLSBwYWdlX2NvdmVyX3Bvc2l0aW9uKSAqIDEwMDtcbiAgaWYgKChjb3ZlciA9PSBudWxsID8gdm9pZCAwIDogY292ZXIudHlwZSkgPT09IFwicGFnZV9jb250ZW50XCIpIHtcbiAgICBjb25zdCBjb250ZW50QmxvY2tJZCA9IChfYTIgPSBibG9jay5jb250ZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmZpbmQoKGJsb2NrSWQpID0+IHtcbiAgICAgIHZhciBfYTM7XG4gICAgICBjb25zdCBibG9jazIgPSAoX2EzID0gcmVjb3JkTWFwLmJsb2NrW2Jsb2NrSWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EzLnZhbHVlO1xuICAgICAgaWYgKChibG9jazIgPT0gbnVsbCA/IHZvaWQgMCA6IGJsb2NrMi50eXBlKSA9PT0gXCJpbWFnZVwiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChjb250ZW50QmxvY2tJZCkge1xuICAgICAgY29uc3QgY29udGVudEJsb2NrID0gKF9iMiA9IHJlY29yZE1hcC5ibG9ja1tjb250ZW50QmxvY2tJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfYjIudmFsdWU7XG4gICAgICBjb25zdCBzb3VyY2UgPSAoX2cgPSAoX2UgPSAoX2QgPSAoX2MgPSBjb250ZW50QmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLnNvdXJjZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2VbMF0pICE9IG51bGwgPyBfZyA6IChfZiA9IGNvbnRlbnRCbG9jay5mb3JtYXQpID09IG51bGwgPyB2b2lkIDAgOiBfZi5kaXNwbGF5X3NvdXJjZTtcbiAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgY29uc3Qgc3JjID0gbWFwSW1hZ2VVcmwoc291cmNlLCBjb250ZW50QmxvY2spO1xuICAgICAgICBjb25zdCBjYXB0aW9uID0gKF9qID0gKF9pID0gKF9oID0gY29udGVudEJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfaC5jYXB0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2lbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfalswXTtcbiAgICAgICAgY292ZXJDb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0NDguY3JlYXRlRWxlbWVudChMYXp5SW1hZ2UsIHtcbiAgICAgICAgICBzcmMsXG4gICAgICAgICAgYWx0OiBjYXB0aW9uIHx8IFwibm90aW9uIGltYWdlXCIsXG4gICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgIG9iamVjdEZpdDogY292ZXJBc3BlY3RcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIWNvdmVyQ29udGVudCkge1xuICAgICAgY292ZXJDb250ZW50ID0gLyogQF9fUFVSRV9fICovIFJlYWN0NDguY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jYXJkLWNvdmVyLWVtcHR5XCJcbiAgICAgIH0pO1xuICAgIH1cbiAgfSBlbHNlIGlmICgoY292ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IGNvdmVyLnR5cGUpID09PSBcInBhZ2VfY292ZXJcIikge1xuICAgIGNvbnN0IHsgcGFnZV9jb3ZlciB9ID0gYmxvY2suZm9ybWF0IHx8IHt9O1xuICAgIGlmIChwYWdlX2NvdmVyKSB7XG4gICAgICBjb25zdCBjb3ZlclBvc2l0aW9uMiA9ICgxIC0gcGFnZV9jb3Zlcl9wb3NpdGlvbikgKiAxMDA7XG4gICAgICBjb3ZlckNvbnRlbnQgPSAvKiBAX19QVVJFX18gKi8gUmVhY3Q0OC5jcmVhdGVFbGVtZW50KExhenlJbWFnZSwge1xuICAgICAgICBzcmM6IG1hcEltYWdlVXJsKHBhZ2VfY292ZXIsIGJsb2NrKSxcbiAgICAgICAgYWx0OiBnZXRUZXh0Q29udGVudDMoKF9rID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9rLnRpdGxlKSxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBvYmplY3RGaXQ6IGNvdmVyQXNwZWN0LFxuICAgICAgICAgIG9iamVjdFBvc2l0aW9uOiBgY2VudGVyICR7Y292ZXJQb3NpdGlvbjJ9JWBcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKChjb3ZlciA9PSBudWxsID8gdm9pZCAwIDogY292ZXIudHlwZSkgPT09IFwicHJvcGVydHlcIikge1xuICAgIGNvbnN0IHsgcHJvcGVydHkgfSA9IGNvdmVyO1xuICAgIGNvbnN0IHNjaGVtYSA9IGNvbGxlY3Rpb24uc2NoZW1hW3Byb3BlcnR5XTtcbiAgICBjb25zdCBkYXRhID0gKF9sID0gYmxvY2sucHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9sW3Byb3BlcnR5XTtcbiAgICBpZiAoc2NoZW1hICYmIGRhdGEpIHtcbiAgICAgIGlmIChzY2hlbWEudHlwZSA9PT0gXCJmaWxlXCIpIHtcbiAgICAgICAgY29uc3QgZmlsZXMgPSBkYXRhLmZpbHRlcigodikgPT4gdi5sZW5ndGggPT09IDIpLm1hcCgoZikgPT4gZi5mbGF0KCkuZmxhdCgpKTtcbiAgICAgICAgY29uc3QgZmlsZSA9IGZpbGVzWzBdO1xuICAgICAgICBpZiAoZmlsZSkge1xuICAgICAgICAgIGNvdmVyQ29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ4LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogYG5vdGlvbi1wcm9wZXJ0eS0ke3NjaGVtYS50eXBlfWBcbiAgICAgICAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0OC5jcmVhdGVFbGVtZW50KExhenlJbWFnZSwge1xuICAgICAgICAgICAgYWx0OiBmaWxlWzBdLFxuICAgICAgICAgICAgc3JjOiBtYXBJbWFnZVVybChmaWxlWzJdLCBibG9jayksXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICBvYmplY3RGaXQ6IGNvdmVyQXNwZWN0LFxuICAgICAgICAgICAgICBvYmplY3RQb3NpdGlvbjogYGNlbnRlciAke2NvdmVyUG9zaXRpb259JWBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvdmVyQ29udGVudCA9IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ4LmNyZWF0ZUVsZW1lbnQoUHJvcGVydHksIHtcbiAgICAgICAgICBwcm9wZXJ0eUlkOiBwcm9wZXJ0eSxcbiAgICAgICAgICBzY2hlbWEsXG4gICAgICAgICAgZGF0YVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ4LmNyZWF0ZUVsZW1lbnQoTm90aW9uQ29udGV4dFByb3ZpZGVyLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBjdHgyKSwge1xuICAgIGNvbXBvbmVudHM6IF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIGN0eDIuY29tcG9uZW50cyksIHtcbiAgICAgIExpbms6IGR1bW15TGluayxcbiAgICAgIFBhZ2VMaW5rOiBkdW1teUxpbmtcbiAgICB9KVxuICB9KSwgLyogQF9fUFVSRV9fICovIFJlYWN0NDguY3JlYXRlRWxlbWVudChjb21wb25lbnRzLlBhZ2VMaW5rLCBfX3NwcmVhZFZhbHVlcyh7XG4gICAgY2xhc3NOYW1lOiBjcyhcIm5vdGlvbi1jb2xsZWN0aW9uLWNhcmRcIiwgYG5vdGlvbi1jb2xsZWN0aW9uLWNhcmQtc2l6ZS0ke2NvdmVyU2l6ZX1gLCBjbGFzc05hbWUpLFxuICAgIGhyZWY6IG1hcFBhZ2VVcmwoYmxvY2suaWQpXG4gIH0sIHJlc3QpLCAoY292ZXJDb250ZW50IHx8IChjb3ZlciA9PSBudWxsID8gdm9pZCAwIDogY292ZXIudHlwZSkgIT09IFwibm9uZVwiKSAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0OC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tY2FyZC1jb3ZlclwiXG4gIH0sIGNvdmVyQ29udGVudCksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ4LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1jYXJkLWJvZHlcIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0OC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tY2FyZC1wcm9wZXJ0eVwiXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDQ4LmNyZWF0ZUVsZW1lbnQoUHJvcGVydHksIHtcbiAgICBzY2hlbWE6IGNvbGxlY3Rpb24uc2NoZW1hLnRpdGxlLFxuICAgIGRhdGE6IChfbSA9IGJsb2NrID09IG51bGwgPyB2b2lkIDAgOiBibG9jay5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX20udGl0bGUsXG4gICAgYmxvY2ssXG4gICAgY29sbGVjdGlvblxuICB9KSksIHByb3BlcnRpZXMgPT0gbnVsbCA/IHZvaWQgMCA6IHByb3BlcnRpZXMuZmlsdGVyKChwKSA9PiBwLnZpc2libGUgJiYgcC5wcm9wZXJ0eSAhPT0gXCJ0aXRsZVwiICYmIGNvbGxlY3Rpb24uc2NoZW1hW3AucHJvcGVydHldKS5tYXAoKHApID0+IHtcbiAgICBpZiAoIWJsb2NrLnByb3BlcnRpZXMpXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBzY2hlbWEgPSBjb2xsZWN0aW9uLnNjaGVtYVtwLnByb3BlcnR5XTtcbiAgICBjb25zdCBkYXRhID0gYmxvY2sucHJvcGVydGllc1twLnByb3BlcnR5XTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NDguY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tY2FyZC1wcm9wZXJ0eVwiLFxuICAgICAga2V5OiBwLnByb3BlcnR5XG4gICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NDguY3JlYXRlRWxlbWVudChQcm9wZXJ0eSwge1xuICAgICAgc2NoZW1hLFxuICAgICAgZGF0YSxcbiAgICAgIGJsb2NrLFxuICAgICAgY29sbGVjdGlvbixcbiAgICAgIGlubGluZTogdHJ1ZVxuICAgIH0pKTtcbiAgfSkpKSk7XG59O1xuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi12aWV3LWdhbGxlcnkudHN4XG52YXIgZGVmYXVsdEJsb2NrSWRzMiA9IFtdO1xudmFyIENvbGxlY3Rpb25WaWV3R2FsbGVyeSA9ICh7XG4gIGNvbGxlY3Rpb24sXG4gIGNvbGxlY3Rpb25WaWV3LFxuICBjb2xsZWN0aW9uRGF0YVxufSkgPT4ge1xuICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xuICBjb25zdCBpc0dyb3VwZWRDb2xsZWN0aW9uID0gKF9hID0gY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNvbGxlY3Rpb25fZ3JvdXBfYnk7XG4gIGlmIChpc0dyb3VwZWRDb2xsZWN0aW9uKSB7XG4gICAgY29uc3QgY29sbGVjdGlvbkdyb3VwcyA9IGdldENvbGxlY3Rpb25Hcm91cHMoY29sbGVjdGlvbiwgY29sbGVjdGlvblZpZXcsIGNvbGxlY3Rpb25EYXRhKTtcbiAgICByZXR1cm4gY29sbGVjdGlvbkdyb3Vwcy5tYXAoKGdyb3VwLCBpbmRleCkgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0NDkuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uR3JvdXAsIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe1xuICAgICAga2V5OiBpbmRleFxuICAgIH0sIGdyb3VwKSwge1xuICAgICAgY29sbGVjdGlvblZpZXdDb21wb25lbnQ6IEdhbGxlcnlcbiAgICB9KSkpO1xuICB9XG4gIGNvbnN0IGJsb2NrSWRzID0gKChfZSA9IChfZCA9IChfYiA9IGNvbGxlY3Rpb25EYXRhW1wiY29sbGVjdGlvbl9ncm91cF9yZXN1bHRzXCJdKSA9PSBudWxsID8gdm9pZCAwIDogX2IuYmxvY2tJZHMpICE9IG51bGwgPyBfZCA6IChfYyA9IGNvbGxlY3Rpb25EYXRhW1wicmVzdWx0czpyZWxhdGlvbjp1bmNhdGVnb3JpemVkXCJdKSA9PSBudWxsID8gdm9pZCAwIDogX2MuYmxvY2tJZHMpICE9IG51bGwgPyBfZSA6IGNvbGxlY3Rpb25EYXRhLmJsb2NrSWRzKSB8fCBkZWZhdWx0QmxvY2tJZHMyO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NDkuY3JlYXRlRWxlbWVudChHYWxsZXJ5LCB7XG4gICAgY29sbGVjdGlvblZpZXcsXG4gICAgY29sbGVjdGlvbixcbiAgICBibG9ja0lkc1xuICB9KTtcbn07XG5mdW5jdGlvbiBHYWxsZXJ5KHsgYmxvY2tJZHMsIGNvbGxlY3Rpb25WaWV3LCBjb2xsZWN0aW9uIH0pIHtcbiAgY29uc3QgeyByZWNvcmRNYXAgfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3Qge1xuICAgIGdhbGxlcnlfY292ZXIgPSB7IHR5cGU6IFwibm9uZVwiIH0sXG4gICAgZ2FsbGVyeV9jb3Zlcl9zaXplID0gXCJtZWRpdW1cIixcbiAgICBnYWxsZXJ5X2NvdmVyX2FzcGVjdCA9IFwiY292ZXJcIlxuICB9ID0gY29sbGVjdGlvblZpZXcuZm9ybWF0IHx8IHt9O1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NDkuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1nYWxsZXJ5XCJcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NDkuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1nYWxsZXJ5LXZpZXdcIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q0OS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWdhbGxlcnktZ3JpZFwiLCBgbm90aW9uLWdhbGxlcnktZ3JpZC1zaXplLSR7Z2FsbGVyeV9jb3Zlcl9zaXplfWApXG4gIH0sIGJsb2NrSWRzID09IG51bGwgPyB2b2lkIDAgOiBibG9ja0lkcy5tYXAoKGJsb2NrSWQpID0+IHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IGJsb2NrID0gKF9hID0gcmVjb3JkTWFwLmJsb2NrW2Jsb2NrSWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EudmFsdWU7XG4gICAgaWYgKCFibG9jaylcbiAgICAgIHJldHVybiBudWxsO1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0OS5jcmVhdGVFbGVtZW50KENvbGxlY3Rpb25DYXJkLCB7XG4gICAgICBjb2xsZWN0aW9uLFxuICAgICAgYmxvY2ssXG4gICAgICBjb3ZlcjogZ2FsbGVyeV9jb3ZlcixcbiAgICAgIGNvdmVyU2l6ZTogZ2FsbGVyeV9jb3Zlcl9zaXplLFxuICAgICAgY292ZXJBc3BlY3Q6IGdhbGxlcnlfY292ZXJfYXNwZWN0LFxuICAgICAgcHJvcGVydGllczogKF9iID0gY29sbGVjdGlvblZpZXcuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2IuZ2FsbGVyeV9wcm9wZXJ0aWVzLFxuICAgICAga2V5OiBibG9ja0lkXG4gICAgfSk7XG4gIH0pKSkpO1xufVxuXG4vLyBzcmMvdGhpcmQtcGFydHkvY29sbGVjdGlvbi12aWV3LWxpc3QudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDUwIGZyb20gXCJyZWFjdFwiO1xudmFyIGRlZmF1bHRCbG9ja0lkczMgPSBbXTtcbnZhciBDb2xsZWN0aW9uVmlld0xpc3QgPSAoe1xuICBjb2xsZWN0aW9uLFxuICBjb2xsZWN0aW9uVmlldyxcbiAgY29sbGVjdGlvbkRhdGFcbn0pID0+IHtcbiAgdmFyIF9hLCBfYiwgX2M7XG4gIGNvbnN0IGlzR3JvdXBlZENvbGxlY3Rpb24gPSAoX2EgPSBjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2EuY29sbGVjdGlvbl9ncm91cF9ieTtcbiAgaWYgKGlzR3JvdXBlZENvbGxlY3Rpb24pIHtcbiAgICBjb25zdCBjb2xsZWN0aW9uR3JvdXBzID0gZ2V0Q29sbGVjdGlvbkdyb3Vwcyhjb2xsZWN0aW9uLCBjb2xsZWN0aW9uVmlldywgY29sbGVjdGlvbkRhdGEpO1xuICAgIHJldHVybiBjb2xsZWN0aW9uR3JvdXBzLm1hcCgoZ3JvdXAsIGtleSkgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0NTAuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uR3JvdXAsIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe1xuICAgICAga2V5XG4gICAgfSwgZ3JvdXApLCB7XG4gICAgICBjb2xsZWN0aW9uVmlld0NvbXBvbmVudDogTGlzdFxuICAgIH0pKSk7XG4gIH1cbiAgY29uc3QgYmxvY2tJZHMgPSAoKF9jID0gKF9iID0gY29sbGVjdGlvbkRhdGFbXCJjb2xsZWN0aW9uX2dyb3VwX3Jlc3VsdHNcIl0pID09IG51bGwgPyB2b2lkIDAgOiBfYi5ibG9ja0lkcykgIT0gbnVsbCA/IF9jIDogY29sbGVjdGlvbkRhdGEuYmxvY2tJZHMpIHx8IGRlZmF1bHRCbG9ja0lkczM7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1MC5jcmVhdGVFbGVtZW50KExpc3QsIHtcbiAgICBibG9ja0lkcyxcbiAgICBjb2xsZWN0aW9uLFxuICAgIGNvbGxlY3Rpb25WaWV3XG4gIH0pO1xufTtcbmZ1bmN0aW9uIExpc3QoeyBibG9ja0lkcywgY29sbGVjdGlvbiwgY29sbGVjdGlvblZpZXcgfSkge1xuICBjb25zdCB7IGNvbXBvbmVudHMsIHJlY29yZE1hcCwgbWFwUGFnZVVybCB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTAuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saXN0LWNvbGxlY3Rpb25cIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1MC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWxpc3Qtdmlld1wiXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUwLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tbGlzdC1ib2R5XCJcbiAgfSwgYmxvY2tJZHMgPT0gbnVsbCA/IHZvaWQgMCA6IGJsb2NrSWRzLm1hcCgoYmxvY2tJZCkgPT4ge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICBjb25zdCBibG9jayA9IChfYSA9IHJlY29yZE1hcC5ibG9ja1tibG9ja0lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgIGlmICghYmxvY2spXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICBjb25zdCB0aXRsZVNjaGVtYSA9IGNvbGxlY3Rpb24uc2NoZW1hLnRpdGxlO1xuICAgIGNvbnN0IHRpdGxlRGF0YSA9IChfYiA9IGJsb2NrID09IG51bGwgPyB2b2lkIDAgOiBibG9jay5wcm9wZXJ0aWVzKSA9PSBudWxsID8gdm9pZCAwIDogX2IudGl0bGU7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUwLmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50cy5QYWdlTGluaywge1xuICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1saXN0LWl0ZW0gbm90aW9uLXBhZ2UtbGlua1wiLFxuICAgICAgaHJlZjogbWFwUGFnZVVybChibG9jay5pZCksXG4gICAgICBrZXk6IGJsb2NrSWRcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1MC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tbGlzdC1pdGVtLXRpdGxlXCJcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1MC5jcmVhdGVFbGVtZW50KFByb3BlcnR5LCB7XG4gICAgICBzY2hlbWE6IHRpdGxlU2NoZW1hLFxuICAgICAgZGF0YTogdGl0bGVEYXRhLFxuICAgICAgYmxvY2ssXG4gICAgICBjb2xsZWN0aW9uXG4gICAgfSkpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1MC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tbGlzdC1pdGVtLWJvZHlcIlxuICAgIH0sIChfZCA9IChfYyA9IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLmxpc3RfcHJvcGVydGllcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLmZpbHRlcigocCkgPT4gcC52aXNpYmxlKS5tYXAoKHApID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICBjb25zdCBzY2hlbWEgPSBjb2xsZWN0aW9uLnNjaGVtYVtwLnByb3BlcnR5XTtcbiAgICAgIGNvbnN0IGRhdGEgPSBibG9jayAmJiAoKF9hMiA9IGJsb2NrLnByb3BlcnRpZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYTJbcC5wcm9wZXJ0eV0pO1xuICAgICAgaWYgKCFzY2hlbWEpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTAuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tbGlzdC1pdGVtLXByb3BlcnR5XCIsXG4gICAgICAgIGtleTogcC5wcm9wZXJ0eVxuICAgICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTAuY3JlYXRlRWxlbWVudChQcm9wZXJ0eSwge1xuICAgICAgICBzY2hlbWEsXG4gICAgICAgIGRhdGEsXG4gICAgICAgIGJsb2NrLFxuICAgICAgICBjb2xsZWN0aW9uXG4gICAgICB9KSk7XG4gICAgfSkpKTtcbiAgfSkpKSk7XG59XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLXZpZXctYm9hcmQudHN4XG5pbXBvcnQgKiBhcyBSZWFjdDUyIGZyb20gXCJyZWFjdFwiO1xuXG4vLyBzcmMvaWNvbnMvZW1wdHktaWNvbi50c3hcbmltcG9ydCAqIGFzIFJlYWN0NTEgZnJvbSBcInJlYWN0XCI7XG52YXIgRW1wdHlJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IF9hID0gcHJvcHMsIHsgY2xhc3NOYW1lIH0gPSBfYSwgcmVzdCA9IF9fb2JqUmVzdChfYSwgW1wiY2xhc3NOYW1lXCJdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUxLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7XG4gICAgY2xhc3NOYW1lXG4gIH0sIHJlc3QpLCB7XG4gICAgdmlld0JveDogXCIwIDAgMTQgMTRcIixcbiAgICB3aWR0aDogXCIxNFwiXG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1MS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTEuMDkxOCwwIEMxMS41MzgzLDAgMTEuOTMwNywwLjI5NTg5OCAxMi4wNTMzLDAuNzI1NTg2IEwxMy45NjE1LDcuNDAzMzIgQzEzLjk4NzEsNy40OTMxNiAxNCw3LjU4NTk0IDE0LDcuNjc4NzEgTDE0LDEzIEMxNCwxMy41NTI3IDEzLjU1MjIsMTQgMTMsMTQgTDEsMTQgQzAuNDQ3NzU0LDE0IDAsMTMuNTUyNyAwLDEzIEwwLDcuNjc4NzEgQzAsNy41ODU5NCAwLjAxMjkzOTUsNy40OTMxNiAwLjAzODQ1MjEsNy40MDMzMiBMMS45NDY2NiwwLjcyNTU4NiBDMi4wNjkzNCwwLjI5NTg5OCAyLjQ2MTY3LDAgMi45MDgyLDAgTDExLjA5MTgsMCBaIE00LjI3MjcxLDEuNSBDMy44MzcyOCwxLjUgMy40NTE3OCwxLjc4MjIzIDMuMzE5ODIsMi4xOTcyNyBMMS45MTQ1NSw2LjYxMzI4IEMxLjcwOTQ3LDcuMjU4NzkgMi4xOTA4LDcuOTE2OTkgMi44Njc1NSw3LjkxNjk5IEw0LjcwODM3LDcuOTE2OTkgQzQuNzA4MzcsOC45MzY1MiA1LjE2NjYzLDEwLjE2OCA3LDEwLjE2OCBDOC44MzMzNywxMC4xNjggOS4yOTE2Myw4LjkzNjUyIDkuMjkxNjMsNy45MTY5OSBMMTEuMTQ3OCw3Ljg5MzU1IEMxMS44MjAxLDcuODg0NzcgMTIuMjkyNyw3LjIyODUyIDEyLjA4NzYsNi41ODg4NyBMMTAuNjgxLDIuMTk1MzEgQzEwLjU0ODUsMS43ODEyNSAxMC4xNjM1LDEuNSA5LjcyODY0LDEuNSBMNC4yNzI3MSwxLjUgWlwiXG4gIH0pKTtcbn07XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLXZpZXctYm9hcmQudHN4XG52YXIgQ29sbGVjdGlvblZpZXdCb2FyZCA9ICh7XG4gIGNvbGxlY3Rpb24sXG4gIGNvbGxlY3Rpb25WaWV3LFxuICBjb2xsZWN0aW9uRGF0YSxcbiAgcGFkZGluZ1xufSkgPT4ge1xuICB2YXIgX2E7XG4gIGNvbnN0IGlzR3JvdXBlZENvbGxlY3Rpb24gPSAoX2EgPSBjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2EuY29sbGVjdGlvbl9ncm91cF9ieTtcbiAgaWYgKGlzR3JvdXBlZENvbGxlY3Rpb24pIHtcbiAgICBjb25zdCBjb2xsZWN0aW9uR3JvdXBzID0gZ2V0Q29sbGVjdGlvbkdyb3Vwcyhjb2xsZWN0aW9uLCBjb2xsZWN0aW9uVmlldywgY29sbGVjdGlvbkRhdGEsIHBhZGRpbmcpO1xuICAgIHJldHVybiBjb2xsZWN0aW9uR3JvdXBzLm1hcCgoZ3JvdXAsIGluZGV4KSA9PiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1Mi5jcmVhdGVFbGVtZW50KENvbGxlY3Rpb25Hcm91cCwgX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7XG4gICAgICBrZXk6IGluZGV4XG4gICAgfSwgZ3JvdXApLCB7XG4gICAgICBzdW1tYXJ5UHJvcHM6IHtcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBwYWRkaW5nTGVmdDogcGFkZGluZ1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY29sbGVjdGlvblZpZXdDb21wb25lbnQ6IChwcm9wcykgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChCb2FyZCwgX19zcHJlYWRWYWx1ZXMoe1xuICAgICAgICBwYWRkaW5nXG4gICAgICB9LCBwcm9wcykpXG4gICAgfSkpKTtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChCb2FyZCwge1xuICAgIHBhZGRpbmcsXG4gICAgY29sbGVjdGlvblZpZXcsXG4gICAgY29sbGVjdGlvbixcbiAgICBjb2xsZWN0aW9uRGF0YVxuICB9KTtcbn07XG5mdW5jdGlvbiBCb2FyZCh7IGNvbGxlY3Rpb25WaWV3LCBjb2xsZWN0aW9uRGF0YSwgY29sbGVjdGlvbiwgcGFkZGluZyB9KSB7XG4gIHZhciBfYSwgX2I7XG4gIGNvbnN0IHsgcmVjb3JkTWFwIH0gPSB1c2VOb3Rpb25Db250ZXh0KCk7XG4gIGNvbnN0IHtcbiAgICBib2FyZF9jb3ZlciA9IHsgdHlwZTogXCJub25lXCIgfSxcbiAgICBib2FyZF9jb3Zlcl9zaXplID0gXCJtZWRpdW1cIixcbiAgICBib2FyZF9jb3Zlcl9hc3BlY3QgPSBcImNvdmVyXCJcbiAgfSA9IChjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcuZm9ybWF0KSB8fCB7fTtcbiAgY29uc3QgYm9hcmRHcm91cHMgPSAoKF9hID0gY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LmZvcm1hdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmJvYXJkX2NvbHVtbnMpIHx8ICgoX2IgPSBjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2IuYm9hcmRfZ3JvdXBzMikgfHwgW107XG4gIGNvbnN0IGJvYXJkU3R5bGUgPSBSZWFjdDUyLnVzZU1lbW8oKCkgPT4gKHtcbiAgICBwYWRkaW5nTGVmdDogcGFkZGluZ1xuICB9KSwgW3BhZGRpbmddKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmRcIlxuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1Mi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWJvYXJkLXZpZXdcIiwgYG5vdGlvbi1ib2FyZC12aWV3LXNpemUtJHtib2FyZF9jb3Zlcl9zaXplfWApLFxuICAgIHN0eWxlOiBib2FyZFN0eWxlXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtaGVhZGVyXCJcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1ib2FyZC1oZWFkZXItaW5uZXJcIlxuICB9LCBib2FyZEdyb3Vwcy5tYXAoKHAsIGluZGV4KSA9PiB7XG4gICAgdmFyIF9hMiwgX2IyLCBfYztcbiAgICBpZiAoISgoX2EyID0gY29sbGVjdGlvbkRhdGEuYm9hcmRfY29sdW1ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5yZXN1bHRzKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IGdyb3VwID0gY29sbGVjdGlvbkRhdGEuYm9hcmRfY29sdW1ucy5yZXN1bHRzW2luZGV4XTtcbiAgICBjb25zdCBzY2hlbWEgPSBjb2xsZWN0aW9uLnNjaGVtYVtwLnByb3BlcnR5XTtcbiAgICBpZiAoIWdyb3VwIHx8ICFzY2hlbWEgfHwgcC5oaWRkZW4pIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLWJvYXJkLXRoXCIsXG4gICAgICBrZXk6IGluZGV4XG4gICAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibm90aW9uLWJvYXJkLXRoLWJvZHlcIlxuICAgIH0sICgoX2IyID0gZ3JvdXAudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfYjIudmFsdWUpID8gLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChQcm9wZXJ0eSwge1xuICAgICAgc2NoZW1hLFxuICAgICAgZGF0YTogW1soX2MgPSBncm91cC52YWx1ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLnZhbHVlXV0sXG4gICAgICBjb2xsZWN0aW9uXG4gICAgfSkgOiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1Mi5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1Mi5jcmVhdGVFbGVtZW50KEVtcHR5SWNvbiwge1xuICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1ib2FyZC10aC1lbXB0eVwiXG4gICAgfSksIFwiIE5vIFNlbGVjdFwiKSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1ib2FyZC10aC1jb3VudFwiXG4gICAgfSwgZ3JvdXAudG90YWwpKSk7XG4gIH0pKSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtaGVhZGVyLXBsYWNlaG9sZGVyXCJcbiAgfSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUyLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtYm9keVwiXG4gIH0sIGJvYXJkR3JvdXBzLm1hcCgocCwgaW5kZXgpID0+IHtcbiAgICB2YXIgX2EyLCBfYjIsIF9jO1xuICAgIGlmICghKChfYTIgPSBjb2xsZWN0aW9uRGF0YS5ib2FyZF9jb2x1bW5zKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnJlc3VsdHMpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3Qgc2NoZW1hID0gY29sbGVjdGlvbi5zY2hlbWFbcC5wcm9wZXJ0eV07XG4gICAgY29uc3QgZ3JvdXAgPSBjb2xsZWN0aW9uRGF0YVtgcmVzdWx0czpzZWxlY3Q6JHsoKF9iMiA9IHAgPT0gbnVsbCA/IHZvaWQgMCA6IHAudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfYjIudmFsdWUpIHx8IFwidW5jYXRlZ29yaXplZFwifWBdO1xuICAgIGlmICghZ3JvdXAgfHwgIXNjaGVtYSB8fCBwLmhpZGRlbikge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1Mi5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tYm9hcmQtZ3JvdXBcIixcbiAgICAgIGtleTogaW5kZXhcbiAgICB9LCAoX2MgPSBncm91cC5ibG9ja0lkcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLm1hcCgoYmxvY2tJZCkgPT4ge1xuICAgICAgdmFyIF9hMywgX2IzO1xuICAgICAgY29uc3QgYmxvY2sgPSAoX2EzID0gcmVjb3JkTWFwLmJsb2NrW2Jsb2NrSWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EzLnZhbHVlO1xuICAgICAgaWYgKCFibG9jaylcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTIuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uQ2FyZCwge1xuICAgICAgICBjbGFzc05hbWU6IFwibm90aW9uLWJvYXJkLWdyb3VwLWNhcmRcIixcbiAgICAgICAgY29sbGVjdGlvbixcbiAgICAgICAgYmxvY2ssXG4gICAgICAgIGNvdmVyOiBib2FyZF9jb3ZlcixcbiAgICAgICAgY292ZXJTaXplOiBib2FyZF9jb3Zlcl9zaXplLFxuICAgICAgICBjb3ZlckFzcGVjdDogYm9hcmRfY292ZXJfYXNwZWN0LFxuICAgICAgICBwcm9wZXJ0aWVzOiAoX2IzID0gY29sbGVjdGlvblZpZXcuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2IzLmJvYXJkX3Byb3BlcnRpZXMsXG4gICAgICAgIGtleTogYmxvY2tJZFxuICAgICAgfSk7XG4gICAgfSkpO1xuICB9KSkpKTtcbn1cblxuLy8gc3JjL3RoaXJkLXBhcnR5L2NvbGxlY3Rpb24tdmlldy50c3hcbnZhciBDb2xsZWN0aW9uVmlld0ltcGwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyBjb2xsZWN0aW9uVmlldyB9ID0gcHJvcHM7XG4gIHN3aXRjaCAoY29sbGVjdGlvblZpZXcudHlwZSkge1xuICAgIGNhc2UgXCJ0YWJsZVwiOlxuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUzLmNyZWF0ZUVsZW1lbnQoQ29sbGVjdGlvblZpZXdUYWJsZSwgX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzKSk7XG4gICAgY2FzZSBcImdhbGxlcnlcIjpcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1My5jcmVhdGVFbGVtZW50KENvbGxlY3Rpb25WaWV3R2FsbGVyeSwgX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzKSk7XG4gICAgY2FzZSBcImxpc3RcIjpcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1My5jcmVhdGVFbGVtZW50KENvbGxlY3Rpb25WaWV3TGlzdCwgX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzKSk7XG4gICAgY2FzZSBcImJvYXJkXCI6XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTMuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uVmlld0JvYXJkLCBfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMpKTtcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKFwidW5zdXBwb3J0ZWQgY29sbGVjdGlvbiB2aWV3XCIsIGNvbGxlY3Rpb25WaWV3KTtcbiAgICAgIHJldHVybiBudWxsO1xuICB9XG59O1xudmFyIENvbGxlY3Rpb25WaWV3ID0gUmVhY3Q1My5tZW1vKENvbGxlY3Rpb25WaWV3SW1wbCk7XG5cbi8vIHNyYy90aGlyZC1wYXJ0eS9jb2xsZWN0aW9uLnRzeFxudmFyIGlzU2VydmVyMiA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCI7XG52YXIgQ29sbGVjdGlvbiA9ICh7IGJsb2NrLCBjbGFzc05hbWUsIGN0eDogY3R4MiB9KSA9PiB7XG4gIGNvbnN0IGNvbnRleHQgPSBSZWFjdDU0LnVzZU1lbW8oKCkgPT4gX19zcHJlYWRWYWx1ZXMoe30sIGN0eDIpLCBbY3R4Ml0pO1xuICBpZiAoYmxvY2sudHlwZSA9PT0gXCJwYWdlXCIpIHtcbiAgICBpZiAoYmxvY2sucGFyZW50X3RhYmxlICE9PSBcImNvbGxlY3Rpb25cIikge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KE5vdGlvbkNvbnRleHRQcm92aWRlciwgX19zcHJlYWRWYWx1ZXMoe30sIGNvbnRleHQpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1wYWdlLXByb3BlcnRpZXNcIlxuICAgIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDU0LmNyZWF0ZUVsZW1lbnQoQ29sbGVjdGlvblJvdywge1xuICAgICAgYmxvY2ssXG4gICAgICBwYWdlSGVhZGVyOiB0cnVlLFxuICAgICAgY2xhc3NOYW1lXG4gICAgfSkpKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChOb3Rpb25Db250ZXh0UHJvdmlkZXIsIF9fc3ByZWFkVmFsdWVzKHt9LCBjb250ZXh0KSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uVmlld0Jsb2NrLCB7XG4gICAgICBibG9jayxcbiAgICAgIGNsYXNzTmFtZVxuICAgIH0pKTtcbiAgfVxufTtcbnZhciBDb2xsZWN0aW9uVmlld0Jsb2NrID0gKHsgYmxvY2ssIGNsYXNzTmFtZSB9KSA9PiB7XG4gIHZhciBfYSwgX2IsIF9jO1xuICBjb25zdCB7IHJlY29yZE1hcCwgc2hvd0NvbGxlY3Rpb25WaWV3RHJvcGRvd24gfSA9IHVzZU5vdGlvbkNvbnRleHQoKTtcbiAgY29uc3QgeyB2aWV3X2lkczogdmlld0lkcyB9ID0gYmxvY2s7XG4gIGNvbnN0IGNvbGxlY3Rpb25JZCA9IGdldEJsb2NrQ29sbGVjdGlvbklkKGJsb2NrLCByZWNvcmRNYXApO1xuICBjb25zdCBbaXNNb3VudGVkLCBzZXRJc01vdW50ZWRdID0gUmVhY3Q1NC51c2VTdGF0ZShmYWxzZSk7XG4gIFJlYWN0NTQudXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRJc01vdW50ZWQodHJ1ZSk7XG4gIH0sIFtdKTtcbiAgY29uc3QgZGVmYXVsdENvbGxlY3Rpb25WaWV3SWQgPSB2aWV3SWRzWzBdO1xuICBjb25zdCBbY29sbGVjdGlvblN0YXRlLCBzZXRDb2xsZWN0aW9uU3RhdGVdID0gdXNlTG9jYWxTdG9yYWdlKGJsb2NrLmlkLCB7XG4gICAgY29sbGVjdGlvblZpZXdJZDogZGVmYXVsdENvbGxlY3Rpb25WaWV3SWRcbiAgfSk7XG4gIGNvbnN0IGNvbGxlY3Rpb25WaWV3SWQgPSBpc01vdW50ZWQgJiYgdmlld0lkcy5maW5kKChpZCkgPT4gaWQgPT09IGNvbGxlY3Rpb25TdGF0ZS5jb2xsZWN0aW9uVmlld0lkKSB8fCBkZWZhdWx0Q29sbGVjdGlvblZpZXdJZDtcbiAgY29uc3Qgb25DaGFuZ2VWaWV3ID0gUmVhY3Q1NC51c2VDYWxsYmFjaygoY29sbGVjdGlvblZpZXdJZDIpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcImNoYW5nZSBjb2xsZWN0aW9uIHZpZXdcIiwgY29sbGVjdGlvblZpZXdJZDIpO1xuICAgIHNldENvbGxlY3Rpb25TdGF0ZShfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBjb2xsZWN0aW9uU3RhdGUpLCB7XG4gICAgICBjb2xsZWN0aW9uVmlld0lkOiBjb2xsZWN0aW9uVmlld0lkMlxuICAgIH0pKTtcbiAgfSwgW2NvbGxlY3Rpb25TdGF0ZSwgc2V0Q29sbGVjdGlvblN0YXRlXSk7XG4gIGxldCB7IHdpZHRoOiB3aW5kb3dXaWR0aCB9ID0gdXNlV2luZG93U2l6ZSgpO1xuICBpZiAoaXNTZXJ2ZXIyKSB7XG4gICAgd2luZG93V2lkdGggPSAxMDI0O1xuICB9XG4gIGNvbnN0IGNvbGxlY3Rpb24gPSAoX2EgPSByZWNvcmRNYXAuY29sbGVjdGlvbltjb2xsZWN0aW9uSWRdKSA9PSBudWxsID8gdm9pZCAwIDogX2EudmFsdWU7XG4gIGNvbnN0IGNvbGxlY3Rpb25WaWV3ID0gKF9iID0gcmVjb3JkTWFwLmNvbGxlY3Rpb25fdmlld1tjb2xsZWN0aW9uVmlld0lkXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnZhbHVlO1xuICBjb25zdCBjb2xsZWN0aW9uRGF0YSA9IChfYyA9IHJlY29yZE1hcC5jb2xsZWN0aW9uX3F1ZXJ5W2NvbGxlY3Rpb25JZF0pID09IG51bGwgPyB2b2lkIDAgOiBfY1tjb2xsZWN0aW9uVmlld0lkXTtcbiAgY29uc3QgcGFyZW50UGFnZSA9IGdldEJsb2NrUGFyZW50UGFnZTIoYmxvY2ssIHJlY29yZE1hcCk7XG4gIGNvbnN0IHsgc3R5bGUsIHdpZHRoLCBwYWRkaW5nIH0gPSBSZWFjdDU0LnVzZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgY29uc3Qgc3R5bGUyID0ge307XG4gICAgaWYgKChjb2xsZWN0aW9uVmlldyA9PSBudWxsID8gdm9pZCAwIDogY29sbGVjdGlvblZpZXcudHlwZSkgIT09IFwidGFibGVcIiAmJiAoY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LnR5cGUpICE9PSBcImJvYXJkXCIpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0eWxlOiBzdHlsZTIsXG4gICAgICAgIHdpZHRoOiAwLFxuICAgICAgICBwYWRkaW5nOiAwXG4gICAgICB9O1xuICAgIH1cbiAgICBjb25zdCB3aWR0aDIgPSB3aW5kb3dXaWR0aDtcbiAgICBjb25zdCBtYXhOb3Rpb25Cb2R5V2lkdGggPSA3MDg7XG4gICAgbGV0IG5vdGlvbkJvZHlXaWR0aCA9IG1heE5vdGlvbkJvZHlXaWR0aDtcbiAgICBpZiAoKF9hMiA9IHBhcmVudFBhZ2UgPT0gbnVsbCA/IHZvaWQgMCA6IHBhcmVudFBhZ2UuZm9ybWF0KSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnBhZ2VfZnVsbF93aWR0aCkge1xuICAgICAgbm90aW9uQm9keVdpZHRoID0gd2lkdGgyIC0gMiAqIE1hdGgubWluKDk2LCB3aWR0aDIgKiAwLjA4KSB8IDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5vdGlvbkJvZHlXaWR0aCA9IHdpZHRoMiA8IG1heE5vdGlvbkJvZHlXaWR0aCA/IHdpZHRoMiAtIHdpZHRoMiAqIDAuMDIgfCAwIDogbWF4Tm90aW9uQm9keVdpZHRoO1xuICAgIH1cbiAgICBjb25zdCBwYWRkaW5nMiA9IGlzU2VydmVyMiAmJiAhaXNNb3VudGVkID8gOTYgOiAod2lkdGgyIC0gbm90aW9uQm9keVdpZHRoKSAvIDIgfCAwO1xuICAgIHN0eWxlMi5wYWRkaW5nTGVmdCA9IHBhZGRpbmcyO1xuICAgIHN0eWxlMi5wYWRkaW5nUmlnaHQgPSBwYWRkaW5nMjtcbiAgICByZXR1cm4ge1xuICAgICAgc3R5bGU6IHN0eWxlMixcbiAgICAgIHdpZHRoOiB3aWR0aDIsXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nMlxuICAgIH07XG4gIH0sIFt3aW5kb3dXaWR0aCwgcGFyZW50UGFnZSwgY29sbGVjdGlvblZpZXcgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbGxlY3Rpb25WaWV3LnR5cGUsIGlzTW91bnRlZF0pO1xuICBpZiAoIShjb2xsZWN0aW9uICYmIGNvbGxlY3Rpb25WaWV3ICYmIGNvbGxlY3Rpb25EYXRhKSkge1xuICAgIGNvbnNvbGUud2FybihcInNraXBwaW5nIG1pc3NpbmcgY29sbGVjdGlvbiB2aWV3IGZvciBibG9ja1wiLCBibG9jay5pZCwge1xuICAgICAgY29sbGVjdGlvbklkLFxuICAgICAgY29sbGVjdGlvblZpZXdJZCxcbiAgICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgICAgY29sbGVjdGlvbkRhdGEsXG4gICAgICByZWNvcmRNYXBcbiAgICB9KTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCB0aXRsZSA9IGdldFRleHRDb250ZW50NChjb2xsZWN0aW9uLm5hbWUpLnRyaW0oKTtcbiAgaWYgKGNvbGxlY3Rpb24uaWNvbikge1xuICAgIGJsb2NrLmZvcm1hdCA9IF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIGJsb2NrLmZvcm1hdCksIHtcbiAgICAgIHBhZ2VfaWNvbjogY29sbGVjdGlvbi5pY29uXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDU0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogY3MoXCJub3Rpb24tY29sbGVjdGlvblwiLCBjbGFzc05hbWUpXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDU0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi1oZWFkZXJcIixcbiAgICBzdHlsZVxuICB9LCB0aXRsZSAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24taGVhZGVyLXRpdGxlXCJcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChQYWdlSWNvbiwge1xuICAgIGJsb2NrLFxuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tcGFnZS10aXRsZS1pY29uXCIsXG4gICAgaGlkZURlZmF1bHRJY29uOiB0cnVlXG4gIH0pLCB0aXRsZSksIHZpZXdJZHMubGVuZ3RoID4gMSAmJiBzaG93Q29sbGVjdGlvblZpZXdEcm9wZG93biAmJiAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KENvbGxlY3Rpb25WaWV3RHJvcGRvd25NZW51LCB7XG4gICAgY29sbGVjdGlvblZpZXcsXG4gICAgY29sbGVjdGlvblZpZXdJZCxcbiAgICB2aWV3SWRzLFxuICAgIG9uQ2hhbmdlVmlld1xuICB9KSksIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDU0LmNyZWF0ZUVsZW1lbnQoQ29sbGVjdGlvblZpZXcsIHtcbiAgICBjb2xsZWN0aW9uLFxuICAgIGNvbGxlY3Rpb25WaWV3LFxuICAgIGNvbGxlY3Rpb25EYXRhLFxuICAgIHBhZGRpbmcsXG4gICAgd2lkdGhcbiAgfSkpO1xufTtcbnZhciBDb2xsZWN0aW9uVmlld0Ryb3Bkb3duTWVudSA9ICh7IGNvbGxlY3Rpb25WaWV3SWQsIGNvbGxlY3Rpb25WaWV3LCB2aWV3SWRzLCBvbkNoYW5nZVZpZXcgfSkgPT4ge1xuICBjb25zdCB7IHJlY29yZE1hcCB9ID0gdXNlTm90aW9uQ29udGV4dCgpO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChEcm9wZG93bk1lbnUuUm9vdCwgbnVsbCwgLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChEcm9wZG93bk1lbnUuVHJpZ2dlciwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi12aWV3LWRyb3Bkb3duXCJcbiAgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uVmlld0NvbHVtbkRlc2MsIHtcbiAgICBjb2xsZWN0aW9uVmlld1xuICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KENoZXZyb25Eb3duSWNvbiwge1xuICAgIGNsYXNzTmFtZTogXCJub3Rpb24tY29sbGVjdGlvbi12aWV3LWRyb3Bkb3duLWljb25cIlxuICB9KSkpLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KERyb3Bkb3duTWVudS5Db250ZW50LCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLXZpZXctZHJvcGRvd24tY29udGVudFwiXG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDU0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25NZW51LlJhZGlvR3JvdXAsIHtcbiAgICB2YWx1ZTogY29sbGVjdGlvblZpZXdJZCxcbiAgICBvblZhbHVlQ2hhbmdlOiBvbkNoYW5nZVZpZXdcbiAgfSwgdmlld0lkcy5tYXAoKHZpZXdJZCkgPT4ge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChEcm9wZG93bk1lbnUuUmFkaW9JdGVtLCB7XG4gICAgICBrZXk6IHZpZXdJZCxcbiAgICAgIHZhbHVlOiB2aWV3SWQsXG4gICAgICBjbGFzc05hbWU6IGNzKFwibm90aW9uLWNvbGxlY3Rpb24tdmlldy1kcm9wZG93bi1jb250ZW50LWl0ZW1cIiwgY29sbGVjdGlvblZpZXdJZCA9PT0gdmlld0lkICYmIFwibm90aW9uLWNvbGxlY3Rpb24tdmlldy1kcm9wZG93bi1jb250ZW50LWl0ZW0tYWN0aXZlXCIpXG4gICAgfSwgY29sbGVjdGlvblZpZXdJZCA9PT0gdmlld0lkICYmIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDU0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLXZpZXctZHJvcGRvd24tY29udGVudC1pdGVtLWFjdGl2ZS1pY29uXCJcbiAgICB9LCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KGNoZWNrX2RlZmF1bHQsIG51bGwpKSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uVmlld0NvbHVtbkRlc2MsIHtcbiAgICAgIGNvbGxlY3Rpb25WaWV3OiAoX2EgPSByZWNvcmRNYXAuY29sbGVjdGlvbl92aWV3W3ZpZXdJZF0pID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZVxuICAgIH0pKTtcbiAgfSkpKSk7XG59O1xudmFyIENvbGxlY3Rpb25WaWV3Q29sdW1uRGVzYyA9IChfYSkgPT4ge1xuICB2YXIgX2IgPSBfYSwgeyBjb2xsZWN0aW9uVmlldywgY2xhc3NOYW1lLCBjaGlsZHJlbiB9ID0gX2IsIHJlc3QgPSBfX29ialJlc3QoX2IsIFtcImNvbGxlY3Rpb25WaWV3XCIsIFwiY2xhc3NOYW1lXCIsIFwiY2hpbGRyZW5cIl0pO1xuICBjb25zdCB7IHR5cGUgfSA9IGNvbGxlY3Rpb25WaWV3O1xuICBjb25zdCBuYW1lID0gY29sbGVjdGlvblZpZXcubmFtZSB8fCBgJHt0eXBlWzBdLnRvVXBwZXJDYXNlKCl9JHt0eXBlLnNsaWNlKDEpfSB2aWV3YDtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDU0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgX19zcHJlYWRWYWx1ZXMoe1xuICAgIGNsYXNzTmFtZTogY3MoXCJub3Rpb24tY29sbGVjdGlvbi12aWV3LXR5cGVcIiwgY2xhc3NOYW1lKVxuICB9LCByZXN0KSwgLyogQF9fUFVSRV9fICovIFJlYWN0NTQuY3JlYXRlRWxlbWVudChDb2xsZWN0aW9uVmlld0ljb24sIHtcbiAgICBjbGFzc05hbWU6IFwibm90aW9uLWNvbGxlY3Rpb24tdmlldy10eXBlLWljb25cIixcbiAgICB0eXBlXG4gIH0pLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q1NC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIm5vdGlvbi1jb2xsZWN0aW9uLXZpZXctdHlwZS10aXRsZVwiXG4gIH0sIG5hbWUpLCBjaGlsZHJlbik7XG59O1xuZXhwb3J0IHtcbiAgQ29sbGVjdGlvbixcbiAgUHJvcGVydHlJbXBsTWVtbyBhcyBQcm9wZXJ0eVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-notion-x/build/third-party/collection.js\n");

/***/ })

};
;